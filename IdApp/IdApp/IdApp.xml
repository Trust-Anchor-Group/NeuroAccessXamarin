<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdApp</name>
    </assembly>
    <members>
        <member name="T:IdApp.App">
            <summary>
            The Application class, representing an instance of the IdApp.
            </summary>
        </member>
        <member name="F:IdApp.App.Instance">
            <summary>
            Gets the last application instance.
            </summary>
        </member>
        <member name="P:IdApp.App.Current">
            <summary>
            Gets the current application, type casted to <see cref="T:IdApp.App"/>.
            </summary>
        </member>
        <member name="M:IdApp.App.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.App.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.App.IsOnboarded">
            <summary>
            Gets a value indicating if the application has completed on-boarding.
            </summary>
            <remarks>
            This is not the same as <see cref="M:IdApp.Services.Tag.TagProfile.IsComplete"/>. <see cref="M:IdApp.Services.Tag.TagProfile.IsComplete"/> is required but not
            sufficient for the application to be "on-boarded". An application is on-boarded when its legal identity is on-boarded
            and when its internal systems are ready. For example, the loading stage of the app must complete.
            </remarks>
        </member>
        <member name="M:IdApp.App.Instantiate``1">
            <summary>
            Instantiates an object of type <typeparamref name="T"/>, after assuring default instances have been created first.
            Assures singleton classes are only instantiated once, and that the reference to the singleton instance is returned.
            </summary>
            <typeparam name="T">Type of object to instantiate.</typeparam>
            <returns>Instance</returns>
        </member>
        <member name="M:IdApp.App.OnBackgroundStart">
            <summary>
            Awaiting the services start in the background.
            </summary>
        </member>
        <member name="M:IdApp.App.OnStart">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.App.DoResume(System.Boolean)">
            <summary>
            Resume the services start in the background.
            </summary>
        </member>
        <member name="M:IdApp.App.OnResume">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.App.OnBackgroundSleep">
            <summary>
            Awaiting the services stop in the background.
            </summary>
        </member>
        <member name="M:IdApp.App.OnSleep">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.App.SetRegistrationPageAsync">
            <summary>
            Switches the application to the on-boarding experience.
            </summary>
        </member>
        <member name="M:IdApp.App.SetAppShellPageAsync">
            <summary>
            Switches the application to the main experience.
            </summary>
        </member>
        <member name="M:IdApp.App.EvaluateDatabaseDiff(System.String,System.Boolean,System.Boolean)">
            <summary>
            Sends the contents of the database to support.
            </summary>
            <param name="FileName">Name of file used to keep track of state changes.</param>
            <param name="IncludeUnchanged">If unchanged material should be included.</param>
            <param name="SendAsAlert">If an alert is to be sent.</param>
        </member>
        <member name="M:IdApp.App.OpenUrlSync(System.String)">
            <summary>
            Opens an URL in the application.
            </summary>
            <param name="Url">URL</param>
            <returns>If URL is processed or not.</returns>
        </member>
        <member name="M:IdApp.App.OpenUrlAsync(System.String)">
            <summary>
            Opens an URL in the application.
            </summary>
            <param name="Url">URL</param>
            <returns>If URL is processed or not.</returns>
        </member>
        <member name="M:IdApp.App.InputPin">
            <summary>
            Asks the user to input its PIN. PIN is verified before being returned.
            </summary>
            <returns>PIN, if the user has provided the correct PIN. Empty string, if PIN is not configured, null if operation is cancelled.</returns>
        </member>
        <member name="M:IdApp.App.VerifyPin(System.Boolean)">
            <summary>
            Asks the user to verify with its PIN.
            </summary>
            <returns>If the user has provided the correct PIN</returns>
        </member>
        <member name="M:IdApp.App.CheckUserBlocking">
            <summary>
            Verify if the user is blocked and show an allert
            </summary>
        </member>
        <member name="M:IdApp.App.CheckPinAndUnblockUser(System.String,IdApp.Services.Tag.ITagProfile)">
            <summary>
            Check the PIN and reset the blocking counters if it matches
            </summary>
        </member>
        <member name="M:IdApp.App.SetStartInactivityTime">
            <summary>
            Set start time of inactivity
            </summary>
        </member>
        <member name="M:IdApp.App.ClearStartInactivityTime">
            <summary>
            Clears the conditions of checking inactivity
            </summary>
        </member>
        <member name="M:IdApp.App.IsInactivitySafeIntervalPassed">
            <summary>
            Performs a check whether 5 minutes of inactivity interval has been passed
            </summary>
            <returns>True if 5 minutes has been passed and False if has not been passed</returns>
        </member>
        <member name="M:IdApp.App.GetCurrentPinCounter">
            <summary>
            Obtains the value for CurrentPinCounter
            </summary>
        </member>
        <member name="M:IdApp.App.SetCurrentPinCounter(System.Int64)">
            <summary>
            Saves that the value for CurrentPinCounter
            </summary>
        </member>
        <member name="P:IdApp.App.CanProhibitScreenCapture">
            <summary>
            If Screen Capture can be prohibited.
            </summary>
        </member>
        <member name="P:IdApp.App.ProhibitScreenCapture">
            <summary>
            Controls of screen-capture is prohibited.
            </summary>
        </member>
        <member name="T:IdApp.Behaviors.ScrollToClickedBehavior">
            <summary>
            Used for moving focus to the next UI component when a button has been clicked.
            </summary>
        </member>
        <member name="P:IdApp.Behaviors.ScrollToClickedBehavior.ScrollTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="F:IdApp.Behaviors.ScrollToClickedBehavior.IsEnabledProperty">
            <summary>
            A BindableProperty for <see cref="P:IdApp.Behaviors.ScrollToClickedBehavior.IsEnabled"/> property.
            </summary>
        </member>
        <member name="P:IdApp.Behaviors.ScrollToClickedBehavior.IsEnabled">
            <summary>
            Gets or sets a value indicating if behavior is enabled or disabled
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.ScrollToClickedBehavior.OnAttachedTo(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.ScrollToClickedBehavior.OnDetachingFrom(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.ScrollToClickedBehavior.MakeVisible(Xamarin.Forms.View)">
            <summary>
            Scrolls to make an element visible.
            </summary>
            <param name="Element">Element to make visible.</param>
        </member>
        <member name="T:IdApp.Behaviors.ScrollToSelectedBehavior">
            <summary>
            Used for moving focus to the next UI component when an item has been selected.
            </summary>
        </member>
        <member name="P:IdApp.Behaviors.ScrollToSelectedBehavior.ScrollTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.ScrollToSelectedBehavior.OnAttachedTo(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.ScrollToSelectedBehavior.OnDetachingFrom(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Behaviors.SetFocusOnClickedBehavior">
            <summary>
            Used for moving focus to the next UI component when a button has been clicked.
            </summary>
        </member>
        <member name="P:IdApp.Behaviors.SetFocusOnClickedBehavior.SetFocusTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnClickedBehavior.OnAttachedTo(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnClickedBehavior.OnDetachingFrom(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnClickedBehavior.FocusOn(Xamarin.Forms.View)">
            <summary>
            Sets focus on an element.
            </summary>
            <param name="Element">Element to focus on.</param>
        </member>
        <member name="T:IdApp.Behaviors.SetFocusOnCompletedBehavior">
            <summary>
            Used for moving focus to the next UI component when the Enter/Return key has been hit.
            </summary>
        </member>
        <member name="P:IdApp.Behaviors.SetFocusOnCompletedBehavior.SetFocusTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnCompletedBehavior.OnAttachedTo(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnCompletedBehavior.OnDetachingFrom(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Behaviors.SetFocusOnSelectedBehavior">
            <summary>
            Used for moving focus to the next UI component when an item has been selected.
            </summary>
        </member>
        <member name="P:IdApp.Behaviors.SetFocusOnSelectedBehavior.SetFocusTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnSelectedBehavior.OnAttachedTo(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.SetFocusOnSelectedBehavior.OnDetachingFrom(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Behaviors.SettableIsFocusedBehavior">
            <summary>
            SettableIsFocusedBehavior synchronizes the value of <see cref="F:IdApp.Behaviors.SettableIsFocusedBehavior.IsFocusedProperty"/> with the value of <see cref="F:Xamarin.Forms.VisualElement.IsFocusedProperty"/>
            in both directions.
            <para>
            Unlike <see cref="F:Xamarin.Forms.VisualElement.IsFocusedProperty"/>, which is read-only, <see cref="F:IdApp.Behaviors.SettableIsFocusedBehavior.IsFocusedProperty"/> is writable
            and supports <see cref="F:Xamarin.Forms.BindingMode.TwoWay"/> data binding, which allows setting focus from a view model using properties
            and avoiding using callbacks from a view model.
            </para>
            </summary>
        </member>
        <member name="F:IdApp.Behaviors.SettableIsFocusedBehavior.IsFocusedProperty">
            <summary>
            Implements the attached bindable property which allows both reading and setting the focus state of a <see cref="T:Xamarin.Forms.VisualElement"/>.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.SettableIsFocusedBehavior.GetIsFocused(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the value indicating if the element is focused.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.SettableIsFocusedBehavior.SetIsFocused(Xamarin.Forms.BindableObject,System.Boolean)">
            <summary>
            Tries to set focus on the element if <paramref name="Value"/> is <c>true</c> or clears focus if <paramref name="Value"/>
            is <c>false</c>. Setting focus might fail, in which case <see cref="F:IdApp.Behaviors.SettableIsFocusedBehavior.IsFocusedProperty"/> will be reset to <c> false</c>.
            </summary>
        </member>
        <member name="M:IdApp.Behaviors.SettableIsFocusedBehavior.OnAttachedTo(Xamarin.Forms.VisualElement)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Behaviors.SettableIsFocusedBehavior.OnDetachingFrom(Xamarin.Forms.VisualElement)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Constants">
            <summary>
            A set of never changing property constants and helpful values.
            </summary>
        </member>
        <member name="F:IdApp.Constants.NotAvailableValue">
            <summary>
            A generic "no value available" string.
            </summary>
        </member>
        <member name="F:IdApp.Constants.MaxRenderedImageDimensionInPixels">
            <summary>
            A maximum number of pixels to render for images, downscaling them if necessary.
            </summary>
        </member>
        <member name="T:IdApp.Constants.Authentication">
            <summary>
            Authentication constants
            </summary>
        </member>
        <member name="F:IdApp.Constants.Authentication.MinPinLength">
            <summary>
            Minimum length for PIN Code
            </summary>
        </member>
        <member name="F:IdApp.Constants.Authentication.MinPinSymbolsFromDifferentClasses">
            <summary>
            Minimum number of symbols from at least two character classes (digits, letters, other) in a PIN.
            </summary>
        </member>
        <member name="F:IdApp.Constants.Authentication.MaxPinIdenticalSymbols">
            <summary>
            Maximum number of identical symbols in a PIN.
            </summary>
        </member>
        <member name="F:IdApp.Constants.Authentication.MaxPinSequencedSymbols">
            <summary>
            Maximum number of sequenced symbols in a PIN.
            </summary>
        </member>
        <member name="T:IdApp.Constants.LanguageCodes">
            <summary>
            Language Codes
            </summary>
        </member>
        <member name="F:IdApp.Constants.LanguageCodes.Default">
            <summary>
            The default language code.
            </summary>
        </member>
        <member name="T:IdApp.Constants.UriSchemes">
            <summary>
            IoT Schemes
            </summary>
        </member>
        <member name="F:IdApp.Constants.UriSchemes.UriSchemeIotId">
            <summary>
            The IoT ID URI Scheme (iotid)
            </summary>
        </member>
        <member name="F:IdApp.Constants.UriSchemes.UriSchemeTagSign">
            <summary>
            TAG Signature (Quick-Login) URI Scheme (tagsign)
            </summary>
        </member>
        <member name="F:IdApp.Constants.UriSchemes.UriSchemeOnboarding">
            <summary>
            Onboarding URI Scheme (obinfo)
            </summary>
        </member>
        <member name="M:IdApp.Constants.UriSchemes.GetScheme(System.String)">
            <summary>
            Gets the predefined scheme from an IoT Code
            </summary>
            <param name="Url">The URL to parse.</param>
            <returns>URI Scheme</returns>
        </member>
        <member name="M:IdApp.Constants.UriSchemes.StartsWithIdScheme(System.String)">
            <summary>
            Checks if the specified code starts with the IoT ID scheme.
            </summary>
            <param name="Url">The URL to check.</param>
            <returns>If URI is an ID scheme</returns>
        </member>
        <member name="M:IdApp.Constants.UriSchemes.CreateIdUri(System.String)">
            <summary>
            Generates a IoT ID Uri form the specified id.
            </summary>
            <param name="id">The Id to use when generating the Uri.</param>
            <returns>Identity URI</returns>
        </member>
        <member name="M:IdApp.Constants.UriSchemes.RemoveScheme(System.String)">
            <summary>
            Removes the URI Schema from an URL.
            </summary>
            <param name="Url">The URL to parse and extract the URI schema from.</param>
            <returns>URI, without schema</returns>
        </member>
        <member name="T:IdApp.Constants.MimeTypes">
            <summary>
            MIME Types
            </summary>
        </member>
        <member name="F:IdApp.Constants.MimeTypes.Jpeg">
            <summary>
            The JPEG MIME type.
            </summary>
        </member>
        <member name="F:IdApp.Constants.MimeTypes.Png">
            <summary>
            The PNG MIME type.
            </summary>
        </member>
        <member name="T:IdApp.Constants.Domains">
            <summary>
            Domain names.
            </summary>
        </member>
        <member name="F:IdApp.Constants.Domains.IdDomain">
            <summary>
            Neuro-Access domain.
            </summary>
        </member>
        <member name="F:IdApp.Constants.Domains.OnboardingDomain">
            <summary>
            Neuro-Access onboarding domain.
            </summary>
        </member>
        <member name="T:IdApp.Constants.XmppProperties">
            <summary>
            XMPP Protocol Properties.
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.MiddleName">
            <summary>
            Middle name
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.PersonalNumber">
            <summary>
            /Personal number
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Address">
            <summary>
            Address line 1
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Address2">
            <summary>
            Address line 2
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Area">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.City">
            <summary>
            City
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.ZipCode">
            <summary>
            Zip Code
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Region">
            <summary>
             Region
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.DeviceId">
            <summary>
            Device ID
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Jid">
            <summary>
            Jabber ID
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.Phone">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="F:IdApp.Constants.XmppProperties.EMail">
            <summary>
            e-Mail address
            </summary>
        </member>
        <member name="T:IdApp.Constants.Intervals">
            <summary>
            Timer Intervals
            </summary>
        </member>
        <member name="F:IdApp.Constants.Intervals.AutoSave">
            <summary>
            Auto Save interval
            </summary>
        </member>
        <member name="F:IdApp.Constants.Intervals.Reconnect">
            <summary>
            Reconnect interval
            </summary>
        </member>
        <member name="T:IdApp.Constants.Timeouts">
            <summary>
            Timer Timeout Values
            </summary>
        </member>
        <member name="F:IdApp.Constants.Timeouts.GenericRequest">
            <summary>
            Generic request timeout
            </summary>
        </member>
        <member name="F:IdApp.Constants.Timeouts.Database">
            <summary>
            Database timeout
            </summary>
        </member>
        <member name="F:IdApp.Constants.Timeouts.XmppConnect">
            <summary>
            XMPP Connect timeout
            </summary>
        </member>
        <member name="F:IdApp.Constants.Timeouts.XmppInit">
            <summary>
            XMPP Init timeout
            </summary>
        </member>
        <member name="F:IdApp.Constants.Timeouts.UploadFile">
            <summary>
            Upload file timeout
            </summary>
        </member>
        <member name="F:IdApp.Constants.Timeouts.DownloadFile">
            <summary>
            Download file timeout
            </summary>
        </member>
        <member name="T:IdApp.Constants.MessagingCenter">
            <summary>
            MessagingCenter events
            </summary>
        </member>
        <member name="F:IdApp.Constants.MessagingCenter.KeyboardAppears">
            <summary>
            Keyboard appears event
            </summary>
        </member>
        <member name="F:IdApp.Constants.MessagingCenter.KeyboardDisappears">
            <summary>
            Keyboard disappears event
            </summary>
        </member>
        <member name="T:IdApp.Constants.Effects">
            <summary>
            Names of Effects.
            </summary>
        </member>
        <member name="F:IdApp.Constants.Effects.ResolutionGroupName">
            <summary>
            ResolutionGroupName used for resolving Effects.
            </summary>
        </member>
        <member name="F:IdApp.Constants.Effects.PasswordMaskTogglerEffect">
            <summary>
            PasswordMaskTogglerEffect.
            </summary>
        </member>
        <member name="T:IdApp.Constants.Pin">
            <summary>
            Constants for PIN
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.PossibleInactivityInMinutes">
            <summary>
            Possible time of inactivity
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.MaxPinAttempts">
            <summary>
            Maximum pin enetring attempts
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.FirstBlockInDays">
            <summary>
            First Block in days after 3 attempts
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.SecondBlockInDays">
            <summary>
            Second Block in days after 3 attempts
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.CurrentPinAttemptCounter">
            <summary>
            Key for pin attempt counter
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.LogAuditorObjectID">
            <summary>
            Log Object ID
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.RemoteEndpoint">
            <summary>
            Endpoint for LogAuditor
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.Protocol">
            <summary>
            Protocol for LogAuditor
            </summary>
        </member>
        <member name="F:IdApp.Constants.Pin.Reason">
            <summary>
            Reason for LogAuditor
            </summary>
        </member>
        <member name="T:IdApp.Constants.References">
            <summary>
            References to external resources
            </summary>
        </member>
        <member name="F:IdApp.Constants.References.AndroidApp">
            <summary>
            Resource where Android App can be downloaded.
            </summary>
        </member>
        <member name="F:IdApp.Constants.References.IPhoneApp">
            <summary>
            Resource where iPhone App can be downloaded.
            </summary>
        </member>
        <member name="T:IdApp.Controls.FlipView.FlipView">
            <summary>
            The FlipView is a user control that holds two child controls: a <see cref="P:IdApp.Controls.FlipView.FlipView.FrontView"/> and a <see cref="P:IdApp.Controls.FlipView.FlipView.BackView"/>.
            It can be flipped like a coin when the user taps on it. In order to flip the view, simply call the <see cref="M:IdApp.Controls.FlipView.FlipView.Flip"/> method.
            </summary>
        </member>
        <member name="M:IdApp.Controls.FlipView.FlipView.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Controls.FlipView.FlipView"/> control.
            </summary>
        </member>
        <member name="F:IdApp.Controls.FlipView.FlipView.FrontViewProperty">
             <summary>
            
             </summary>
        </member>
        <member name="P:IdApp.Controls.FlipView.FlipView.FrontView">
            <summary>
            The view displayed on the 'front' side of this user control.
            </summary>
        </member>
        <member name="P:IdApp.Controls.FlipView.FlipView.IsFrontViewShowing">
            <summary>
            If the front view is showing
            </summary>
        </member>
        <member name="P:IdApp.Controls.FlipView.FlipView.IsBackViewShowing">
            <summary>
            If the back view is showing
            </summary>
        </member>
        <member name="P:IdApp.Controls.FlipView.FlipView.IsFlipping">
            <summary>
            If the view is flipping
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.Flipped">
            <summary>
            When the front has flipped to the back, or back to front
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.BeforeFlipping">
            <summary>
            Event raised before flipping the view.
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.AfterFlipping">
            <summary>
            Event raised after flipping the view.
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.FrontViewShowing">
            <summary>
            Event raised when the front view is about to be shown
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.FrontViewShown">
            <summary>
            Event raised when the front view is shown
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.BackViewShowing">
            <summary>
            Event raised when the back view is about to be shown
            </summary>
        </member>
        <member name="E:IdApp.Controls.FlipView.FlipView.BackViewShown">
            <summary>
            Event raised when the front view is shown
            </summary>
        </member>
        <member name="F:IdApp.Controls.FlipView.FlipView.BackViewProperty">
             <summary>
            
             </summary>
        </member>
        <member name="P:IdApp.Controls.FlipView.FlipView.BackView">
            <summary>
            The view displayed on the 'back' side of this user control.
            </summary>
        </member>
        <member name="M:IdApp.Controls.FlipView.FlipView.Flip">
            <summary>
            Makes the user control flip from front to back, or the other way around.
            </summary>
            <returns>true if back-side is shown after, false if front-side is shown after flip.</returns>
        </member>
        <member name="T:IdApp.Controls.MainTabBar.MainTabBarView">
            <summary>
            Represents the main tab bar in the Main page of the application.
            </summary>
        </member>
        <member name="M:IdApp.Controls.MainTabBar.MainTabBarView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Controls.MainTabBar.MainTabBarView"/> class.
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1CommandProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1Command"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1Command">
            <summary>
            The command to bind to for the first button.
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2CommandProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2Command"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2Command">
            <summary>
            The command to bind to for the first button.
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonCommandProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonCommand">
            <summary>
            The command to bind to for the second button.
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1CommandProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1Command"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1Command">
            <summary>
            The command to bind to for the third button.
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2CommandProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2Command"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2Command">
            <summary>
            The command to bind to for the third button.
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1FontFamilyProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1FontFamily"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1FontFamily">
            <summary>
            The font family to use for text on the first button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2FontFamilyProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2FontFamily"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2FontFamily">
            <summary>
            The font family to use for text on the second button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonFontFamilyProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonFontFamily"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonFontFamily">
            <summary>
            The font family to use for text on the second button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1FontFamilyProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1FontFamily"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1FontFamily">
            <summary>
            The font family to use for text on the third button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2FontFamilyProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2FontFamily"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2FontFamily">
            <summary>
            The font family to use for text on the fourth button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1TextProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1Text"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton1Text">
            <summary>
            The text to use for text on the first button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2TextProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2Text"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.LeftButton2Text">
            <summary>
            The text to use for text on the second button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonTextProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonText"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.CenterButtonText">
            <summary>
            The text to use for text on the second button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1TextProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1Text"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton1Text">
            <summary>
            The text to use for text on the third button
            </summary>
        </member>
        <member name="F:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2TextProperty">
            <summary>
            See <see cref="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2Text"/>
            </summary>
        </member>
        <member name="P:IdApp.Controls.MainTabBar.MainTabBarView.RightButton2Text">
            <summary>
            The text to use for text on the fourth button
            </summary>
        </member>
        <member name="M:IdApp.Controls.MainTabBar.MainTabBarView.Show">
            <summary>
            Call this method to show the toolbar content.
            </summary>
        </member>
        <member name="M:IdApp.Controls.MainTabBar.MainTabBarView.Hide">
            <summary>
            Call this method to hide the toolbar content.
            </summary>
        </member>
        <member name="T:IdApp.Controls.NoBounceView.NoBounceCollectionView">
            <summary>
            The NoBounceCollectionView disables the bounce effect for the collection view on iOS
            </summary>
        </member>
        <member name="T:IdApp.Controls.NoBounceView.NoBounceListView">
            <summary>
            The NoBounceListView disables the bounce effect for the list view on iOS
            </summary>
        </member>
        <member name="T:IdApp.Controls.NoBounceView.NoBounceScrollView">
            <summary>
            The NoBounceScrollView disables the bounce effect for the scroll view on iOS
            </summary>
        </member>
        <member name="T:IdApp.Controls.TemplatedSwitch.TemplatedSwitch">
            <summary>
            TemplatedSwitch represents a generalization of <see cref="T:Xamarin.Forms.Switch"/> whose appearance is defined by a <see cref="T:Xamarin.Forms.ControlTemplate"/>.
            </summary>
        </member>
        <member name="F:IdApp.Controls.TemplatedSwitch.TemplatedSwitch.IsToggledProperty">
            <summary>
            <see cref="T:Xamarin.Forms.BindableProperty"/> implementation of <see cref="P:IdApp.Controls.TemplatedSwitch.TemplatedSwitch.IsToggled"/> property.
            </summary>
        </member>
        <member name="M:IdApp.Controls.TemplatedSwitch.TemplatedSwitch.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:IdApp.Controls.TemplatedSwitch.TemplatedSwitch"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Controls.TemplatedSwitch.TemplatedSwitch.IsToggled">
            <summary>
            Gets or sets the value indicating if the current <see cref="T:IdApp.Controls.TemplatedSwitch.TemplatedSwitch"/> is toggled.
            </summary>
        </member>
        <member name="T:IdApp.Converters.EqualsOne">
            <summary>
            Is true if an integer property is equal to one.
            </summary>
        </member>
        <member name="M:IdApp.Converters.EqualsOne.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.EqualsOne.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.EqualsOne.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Converters.EqualsParameter">
            <summary>
            EqualsParameter is an <see cref="T:Xamarin.Forms.IValueConverter"/> which converts a given value to a boolean indicating if the value
            is equal to the provided <see cref="P:Xamarin.Forms.Binding.ConverterParameter"/>.
            </summary>
        </member>
        <member name="M:IdApp.Converters.EqualsParameter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns <c>true</c> if <paramref name="Value"/> equals to <paramref name="Parameter"/> and <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:IdApp.Converters.EqualsParameter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Always throws a <see cref="T:System.NotImplementedException"/>.
            </summary>
        </member>
        <member name="M:IdApp.Converters.EqualsParameter.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an instance of <see cref="T:IdApp.Converters.EqualsParameter"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Converters.EqualsParameter.Xamarin#Forms#Xaml#IMarkupExtension#ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an instance of <see cref="T:IdApp.Converters.EqualsParameter"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Converters.EqualsZero">
            <summary>
            Is true if an integer property is equal to zero.
            </summary>
        </member>
        <member name="M:IdApp.Converters.EqualsZero.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.EqualsZero.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.EqualsZero.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Converters.GreaterThanZero">
            <summary>
            Is true if a property is greater than zero.
            </summary>
        </member>
        <member name="M:IdApp.Converters.GreaterThanZero.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.GreaterThanZero.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.GreaterThanZero.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Converters.IdentityStateToColor">
            <summary>
            Converts an identity state to a color.
            </summary>
        </member>
        <member name="M:IdApp.Converters.IdentityStateToColor.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.IdentityStateToColor.ToColor(Waher.Networking.XMPP.Contracts.IdentityState)">
            <summary>
            Converts a contract state to a representative color.
            </summary>
            <param name="State">Contract State</param>
            <returns>Color</returns>
        </member>
        <member name="M:IdApp.Converters.IdentityStateToColor.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.IdentityStateToColor.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Converters.LogicalNot">
            <summary>
            Converts, or flips, a boolean value to it's inverse value. I.e. turns <c>true</c> to <c>false</c>, or the other way around.
            </summary>
        </member>
        <member name="M:IdApp.Converters.LogicalNot.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.LogicalNot.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Converters.LogicalNot.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Converters.PinStrengthToErrorMessage">
            <summary>
            PinStrengthToErrorMessage is an <see cref="T:Xamarin.Forms.IValueConverter"/> which converts <see cref="T:IdApp.Services.Tag.PinStrength"/> to an error message to display.
            </summary>
        </member>
        <member name="M:IdApp.Converters.PinStrengthToErrorMessage.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a localized error message for a given <see cref="T:IdApp.Services.Tag.PinStrength"/>.
            </summary>
        </member>
        <member name="M:IdApp.Converters.PinStrengthToErrorMessage.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Always throws a <see cref="T:System.NotImplementedException"/>.
            </summary>
        </member>
        <member name="M:IdApp.Converters.PinStrengthToErrorMessage.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an instance of <see cref="T:IdApp.Converters.PinStrengthToErrorMessage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Converters.PinStrengthToErrorMessage.Xamarin#Forms#Xaml#IMarkupExtension#ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an instance of <see cref="T:IdApp.Converters.PinStrengthToErrorMessage"/> class.
            </summary>
        </member>
        <member name="T:IdApp.DeviceSpecific.ICloseApplication">
            <summary>
            Dependency interface for device-specific closing of application.
            </summary>
        </member>
        <member name="M:IdApp.DeviceSpecific.ICloseApplication.Close">
            <summary>
            Closes the application
            </summary>
        </member>
        <member name="T:IdApp.DeviceSpecific.IDeviceInformation">
            <summary>
            Dependency interface for device-specific information.
            </summary>
        </member>
        <member name="M:IdApp.DeviceSpecific.IDeviceInformation.GetDeviceId">
            <summary>
            Gets the ID of the device.
            </summary>
        </member>
        <member name="T:IdApp.DeviceSpecific.ISecureDisplay">
            <summary>
            Dependency interface for device-specific securing of display.
            </summary>
        </member>
        <member name="P:IdApp.DeviceSpecific.ISecureDisplay.ProhibitScreenCapture">
            <summary>
            If screen capture is prohibited or not.
            </summary>
        </member>
        <member name="T:IdApp.DeviceSpecific.IShareContent">
            <summary>
            Dependency interface for sharing content with other applications.
            </summary>
        </member>
        <member name="M:IdApp.DeviceSpecific.IShareContent.ShareImage(System.Byte[],System.String,System.String,System.String)">
            <summary>
            Shares an image in PNG format.
            </summary>
            <param name="PngFile">Binary representation (PNG format) of image.</param>
            <param name="Message">Message to send with image.</param>
            <param name="Title">Title for operation.</param>
            <param name="FileName">Filename of image file.</param>
        </member>
        <member name="T:IdApp.Exceptions.MissingNetworkException">
            <summary>
            Represents network errors.
            </summary>
        </member>
        <member name="M:IdApp.Exceptions.MissingNetworkException.#ctor">
            <summary>
            Creates an instance of a <see cref="T:IdApp.Exceptions.MissingNetworkException"/>.
            </summary>
        </member>
        <member name="M:IdApp.Exceptions.MissingNetworkException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdApp.Exceptions.MissingNetworkException"/> class with the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IdApp.Exceptions.MissingNetworkException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IdApp.Exceptions.MissingNetworkException"/> class with the specified message and inner exception.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:IdApp.Extensions.ArrayExtensions">
            <summary>
            Extensions for generic <see cref="T:System.Array"/>s.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.ArrayExtensions.GetImageAttachments(Waher.Networking.XMPP.Contracts.Attachment[])">
            <summary>
            Returns all the attachments whose content type starts with "image".
            </summary>
            <param name="attachments">The attachments to iterate.</param>
            <returns>Attachments</returns>
        </member>
        <member name="M:IdApp.Extensions.ArrayExtensions.GetFirstImageAttachment(Waher.Networking.XMPP.Contracts.Attachment[])">
            <summary>
            Returns the first image attachment of the array, if there is one.
            </summary>
            <param name="attachments">The attachments to iterate.</param>
            <returns>The first image attachment, or <c>null</c>.</returns>
        </member>
        <member name="T:IdApp.Extensions.CommandExtensions">
            <summary>
            Helper/convenience methods for the <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.CommandExtensions.ChangeCanExecute(System.Windows.Input.ICommand)">
            <summary>
            Calls the <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> method on the given <see cref="T:System.Windows.Input.ICommand"/>, given that it <b>is</b> a <see cref="T:Xamarin.Forms.Command"/>.
            </summary>
            <param name="command"></param>
        </member>
        <member name="T:IdApp.Extensions.DateTimeExtensions">
            <summary>
            Extensions for the <see cref="T:System.DateTime"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.DateTimeExtensions.GetDateOrNullIfMinValue(System.DateTime)">
            <summary>
            Returns the actual date if it has a valid value, or <c>null</c> if it is <see cref="F:System.DateTime.MinValue"/>.
            </summary>
            <param name="date">The date to check.</param>
            <returns>A DateTime, or null</returns>
        </member>
        <member name="T:IdApp.Extensions.EnumerableExtensions">
            <summary>
            Extension methods for <see cref="T:System.Collections.Generic.IEnumerable`1"/> objects.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.EnumerableExtensions.Create``1(``0)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified item.
            </summary>
            <typeparam name="TSource">The desired type.</typeparam>
            <param name="item">The item to convert to an IEnumerable.</param>
            <returns>Array of one item</returns>
        </member>
        <member name="T:IdApp.Extensions.LegalIdentityExtensions">
            <summary>
            Extensions for the <see cref="T:Waher.Networking.XMPP.Contracts.LegalIdentity"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.LegalIdentityExtensions.NeedsUpdating(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Returns <c>true</c> if the legal identity is either null or is in a 'bad' state (rejected, compromised or obsolete).
            </summary>
            <param name="legalIdentity">The legal identity whose state to check.</param>
            <returns>If ID needs to be updated</returns>
        </member>
        <member name="M:IdApp.Extensions.LegalIdentityExtensions.GetJid(Waher.Networking.XMPP.Contracts.LegalIdentity,System.String)">
            <summary>
            Returns the JID if the <see cref="T:Waher.Networking.XMPP.Contracts.LegalIdentity"/> has one, or the empty string otherwise.
            </summary>
            <param name="legalIdentity">The legal identity whose JID to get.</param>
            <param name="defaultValueIfNotFound">The default value to use if JID isn't found.</param>
            <returns>Gets the JID property of an identity object.</returns>
        </member>
        <member name="T:IdApp.Extensions.ListExtensions">
            <summary>
            Extensions for the <see cref="T:System.Collections.Generic.List`1"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.ListExtensions.HasSameContentAs``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            Compares to lists for content equality.
            </summary>
            <typeparam name="T">The list content type.</typeparam>
            <param name="list">The first list to compare.</param>
            <param name="other">The second list to compare.</param>
            <returns>If elements are equal.</returns>
        </member>
        <member name="T:IdApp.Extensions.ObjectExtensions">
            <summary>
            Generic extension class for objects of type <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.ObjectExtensions.GetClassAndMethod(System.Object,System.Reflection.MethodBase,System.String)">
            <summary>
            Returns the current class and method as a <see cref="T:System.Collections.Generic.KeyValuePair`2"/>. For debugging purposes.
            </summary>
            <param name="obj">The object whose class and method to extract.</param>
            <param name="methodInfo">The current method instance.</param>
            <param name="method">An optional method name. If not specified, the method name is extracted from the <c>methodInfo</c> parameter.</param>
            <returns>Class and Method</returns>
        </member>
        <member name="T:IdApp.Extensions.SnifferExtensions">
            <summary>
            Extensions for the <see cref="T:Waher.Networking.Sniffers.ISniffer"/> implementation.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.SnifferExtensions.SnifferToText(Waher.Networking.Sniffers.InMemorySniffer)">
            <summary>
            Converts the latest Xmpp communication that the sniffer holds to plain text.
            </summary>
            <param name="sniffer">The sniffer whose contents to get.</param>
            <returns>The xmpp communication in plain text.</returns>
        </member>
        <member name="T:IdApp.Extensions.StreamExtensions">
            <summary>
            An extensions class for <see cref="T:System.IO.Stream"/>s.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.StreamExtensions.Reset(System.IO.Stream)">
            <summary>
            Convenience method for resetting a stream to position = 0.
            </summary>
            <param name="stream">The stream to reset.</param>
        </member>
        <member name="T:IdApp.Extensions.StringExtensions">
            <summary>
            An extensions class for the <see cref="T:System.String"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.StringExtensions.GetUnicodeLength(System.String)">
            <summary>
            Returns the number of Unicode symbols, which may be represented by one or two chars, in a string.
            </summary>
        </member>
        <member name="T:IdApp.Extensions.TaskExtensions">
            <summary>
            An extensions class for the <see cref="T:System.Threading.Tasks.Task"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.TaskExtensions.TimeoutAfter``1(System.Threading.Tasks.Task{``0},System.TimeSpan)">
            <summary>
            Helper method to wait for a task to complete, but with a given time limit.
            </summary>
            <typeparam name="TResult">The task's result.</typeparam>
            <param name="task">The task to await.</param>
            <param name="timeout">The maximum time to wait for the task.</param>
            <returns>Task waiting for the original task to complete, or a timeout to occur.</returns>
        </member>
        <member name="T:IdApp.Extensions.XmppStateExtensions">
            <summary>
            Extensions for the <see cref="T:Waher.Networking.XMPP.XmppState"/> enum.
            </summary>
        </member>
        <member name="M:IdApp.Extensions.XmppStateExtensions.ToColor(Waher.Networking.XMPP.XmppState)">
            <summary>
            Returns a color matching the current connection state.
            </summary>
            <param name="State">Connection state.</param>
            <returns>Color</returns>
        </member>
        <member name="M:IdApp.Extensions.XmppStateExtensions.Blend(Xamarin.Forms.Color,Xamarin.Forms.Color,System.Double)">
            <summary>
            Blends two colors.
            </summary>
            <param name="Color1">Color 1</param>
            <param name="Color2">Color 2</param>
            <param name="p">Blending coefficient (0-1).</param>
            <returns>Blended color.</returns>
        </member>
        <member name="M:IdApp.Extensions.XmppStateExtensions.ToDisplayText(Waher.Networking.XMPP.XmppState)">
            <summary>
            Converts the state to a localized string.
            </summary>
            <param name="State">The state to convert.</param>
            <returns>Textual representation of an XMPP connection state.</returns>
        </member>
        <member name="M:IdApp.Extensions.XmppStateExtensions.ToDisplayText(Waher.Networking.XMPP.Contracts.IdentityState)">
            <summary>
            Converts the state to a localized string.
            </summary>
            <param name="State">The state to convert.</param>
            <returns>String representation</returns>
        </member>
        <member name="T:IdApp.Helpers.EntryProperties">
            <summary>
            EntryProperties is a class which defines attached bindable properties used by our custom renderers for <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="F:IdApp.Helpers.EntryProperties.BorderColorProperty">
            <summary>
            Implements the attached property that defines the color of the border around an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.GetBorderColor(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the color of the border around an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.SetBorderColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)">
            <summary>
            Sets the color of the border around an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="F:IdApp.Helpers.EntryProperties.BorderWidthProperty">
            <summary>
            Implements the attached property that defines the width of the border around an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.GetBorderWidth(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the width of the border around an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.SetBorderWidth(Xamarin.Forms.BindableObject,System.Double)">
            <summary>
            Sets the width of the border around an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="F:IdApp.Helpers.EntryProperties.CornerRadiusProperty">
            <summary>
            Implements the attached property that defines the corner radius of an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.GetCornerRadius(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the corner radius of an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.SetCornerRadius(Xamarin.Forms.BindableObject,System.Double)">
            <summary>
            Sets the corner radius of an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="F:IdApp.Helpers.EntryProperties.PaddingHorizontalProperty">
            <summary>
            Implements the attached property that defines the width of the left/right side padding of an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.GetPaddingHorizontal(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the width of the padding of an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.EntryProperties.SetPaddingHorizontal(Xamarin.Forms.BindableObject,System.Double)">
            <summary>
            Sets the width of the padding of an <see cref="T:Xamarin.Forms.Entry"/>.
            </summary>
        </member>
        <member name="T:IdApp.Helpers.KeyboardAppearEventArgs">
            <summary>
            MessagingCenter event args
            </summary>
        </member>
        <member name="P:IdApp.Helpers.KeyboardAppearEventArgs.KeyboardSize">
            <summary>
            Keyboard height
            </summary>
        </member>
        <member name="T:IdApp.Helpers.PasswordMask">
            <summary>
            PasswordMask is a class which defines <c>IsEnabled</c> attached <see cref="T:Xamarin.Forms.BindableProperty"/> used to store the state
            of <see cref="T:Xamarin.Forms.Entry"/> password masking.
            </summary>
        </member>
        <member name="F:IdApp.Helpers.PasswordMask.IsEnabledProperty">
            <summary>
            Implements the attached property that indicates if the <see cref="T:Xamarin.Forms.Entry"/> password must be masked.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.PasswordMask.GetIsEnabled(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the value indicating if the password associated with <paramref name="bindable"/> must be masked.
            </summary>
        </member>
        <member name="M:IdApp.Helpers.PasswordMask.SetIsEnabled(Xamarin.Forms.BindableObject,System.Boolean)">
            <summary>
            Sets the value indicating if the password associated with <paramref name="bindable"/> must be masked.
            </summary>
        </member>
        <member name="T:IdApp.Pages.BaseViewModel">
            <summary>
            A base class for all view models, inheriting from the <see cref="T:Xamarin.Forms.BindableObject"/>.
            <br/>
            NOTE: using this class requires your page/view to inherit from <see cref="T:IdApp.Pages.ContentBasePage"/>.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.#ctor">
            <summary>
            Create an instance of a <see cref="T:IdApp.Pages.BaseViewModel"/>.
            </summary>
        </member>
        <member name="P:IdApp.Pages.BaseViewModel.IsInitialized">
            <summary>
            Returns <c>true</c> if the viewmodel is initialized.
            </summary>
        </member>
        <member name="P:IdApp.Pages.BaseViewModel.IsAppearing">
            <summary>
            Returns <c>true</c> if the viewmodel is shown.
            </summary>
        </member>
        <member name="P:IdApp.Pages.BaseViewModel.Children">
            <summary>
            Gets the child view models.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.AddChildViewModel``1(``0)">
            <summary>
            Use this method when nesting view models. This is the viewmodel equivalent of master/detail pages.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <param name="childViewModel">The child viewmodel to add.</param>
            <returns>Child view model</returns>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.RemoveChildViewModel``1(``0)">
            <summary>
            Use this method when nesting view models. This is the viewmodel equivalent of master/detail pages.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <param name="childViewModel">The child viewmodel to remove.</param>
            <returns>Child view model</returns>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.RestoreState">
            <summary>
            Called by the parent page when it appears on screen, <em>after</em> the <see cref="M:IdApp.Pages.BaseViewModel.Appearing"/> method is called.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.SaveState">
            <summary>
            Called by the parent page when it disappears on screen, <em>before</em> the <see cref="M:IdApp.Pages.BaseViewModel.Disappearing"/> method is called.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.Shutdown">
            <summary>
            Convenience method that calls <see cref="M:IdApp.Pages.BaseViewModel.SaveState"/> and then <see cref="M:IdApp.Pages.BaseViewModel.Disappearing"/>.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.DoRestoreState">
            <summary>
            Override this method to do view model specific restoring of state when it's parent page/view appears on screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.DoSaveState">
            <summary>
            Override this method to do view model specific saving of state when it's parent page/view disappears from screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.GetSettingsKey(System.String)">
            <summary>
            Helper method for getting a unique settings key for a given property.
            </summary>
            <param name="propertyName">The property name to convert into a settings key.</param>
            <returns>Key name</returns>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.EvaluateCommands(System.Windows.Input.ICommand[])">
            <summary>
            Executes the <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> method on all commands.
            This is done to update the UI state for those UI components that bind to a command.
            </summary>
            <param name="commands">The commands to evaluate.</param>
        </member>
        <member name="F:IdApp.Pages.BaseViewModel.IsBusyProperty">
            <summary>
            <see cref="P:IdApp.Pages.BaseViewModel.IsBusy"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.BaseViewModel.IsBusy">
            <summary>
            A helper property to set/get when the ViewModel is busy doing work.
            </summary>
        </member>
        <member name="F:IdApp.Pages.BaseViewModel.IsIdleProperty">
            <summary>
            <see cref="P:IdApp.Pages.BaseViewModel.IsIdle"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.BaseViewModel.IsIdle">
            <summary>
            A helper property to set/get when the ViewModel is idle.
            </summary>
        </member>
        <member name="P:IdApp.Pages.BaseViewModel.IsOverlayVisible">
            <summary>
            Gets or sets a value which indicates if the protective overlay with a spinner is visible.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.SetIsDone(System.Windows.Input.ICommand[])">
            <summary>
            A helper method for synchronously setting this registration step to Done, and also calling
            <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> on the list of commands passed in.
            </summary>
            <param name="commands">The commands to re-evaluate.</param>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.SetIsBusy(System.Windows.Input.ICommand[])">
            <summary>
            Sets the <see cref="P:IdApp.Pages.BaseViewModel.IsBusy"/> flag for this instance. Also calls
            <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> on the list of commands passed in.
            </summary>
            <param name="commands">The commands to re-evaluate.</param>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.Initialize">
            <summary>
            Method called when view is initialized for the first time. Use this method to implement registration
            of event handlers, processing navigation arguments, etc.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.OnInitialize">
            <summary>
            Method called when view is initialized for the first time. Use this method to implement registration
            of event handlers, processing navigation arguments, etc.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.Dispose">
            <summary>
            Method called when the view is disposed, and will not be used more. Use this method to unregister
            event handlers, etc.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.OnDispose">
            <summary>
            Method called when the view is disposed, and will not be used more. Use this method to unregister
            event handlers, etc.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.Appearing">
            <summary>
            Method called when view is appearing on the screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.OnAppearing">
            <summary>
            Method called when view is appearing on the screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.Disappearing">
            <summary>
            Method called when view is disappearing from the screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BaseViewModel.OnDisappearing">
            <summary>
            Method called when view is disappearing from the screen.
            </summary>
        </member>
        <member name="T:IdApp.Pages.BetweenMainPage">
            <summary>
            A page which is displayed when switching the application main page, while the old main page is performing cleanup asynchronously.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BetweenMainPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdApp.Pages.BetweenMainPage"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.BootstrapErrorPage">
            <summary>
            A page which is displayed when an unexpected exception is encountered during the application startup.
            </summary>
        </member>
        <member name="M:IdApp.Pages.BootstrapErrorPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.BootstrapErrorPage"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.ContentBasePage">
            <summary>
            A base class for all pages. This class works in close conjunction with the <see cref="T:IdApp.Pages.BaseViewModel"/> for binding and unbinding data
            when the page is shown on screen.
            </summary>
            <remarks>It also handles safe area insets for iOS applications, specifically on iPhones with the 'rabbit ear' displays.</remarks>
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.ContentBasePage"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ContentBasePage.ViewModel">
            <summary>
            Typed convenience property for accessing the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> property as a view model.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ContentBasePage.UniqueId">
            <summary>
            Gets or sets a unique identifier, which allows this page to be distinguished from other pages of the same type without using
            references to the page object itself.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.OnAppearing">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.OnAppearingAsync">
            <summary>
            Asynchronous OnAppearing-method.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.OnDisappearing">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.OnDisappearingAsync">
            <summary>
            Asynchronous OnAppearing-method.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.ForceReRender(Xamarin.Forms.Layout[])">
            <summary>
            TODO: remove this, as it shouldn't be needed. It's here because ScrollView's typically don't refresh when their child content changes size.
            It's a helper method for forcing a layout re-render of the specified components. It will do so asynchronously, by executing a BeginInvoke.
            </summary>
            <param name="layouts">The layout components to re-render.</param>
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.OnBackButtonPressed">
            <summary>
            Overrides the back button behavior to handle navigation internally instead.
            </summary>
            <returns>Whether or not the back navigation was handled</returns>
        </member>
        <member name="M:IdApp.Pages.ContentBasePage.OnParentSet">
            <summary>
            Called when the <see cref="T:Xamarin.Forms.Page"/>'s <see cref="P:Xamarin.Forms.Element.Parent"/> property has changed.
            </summary>
        </member>
        <member name="T:IdApp.Pages.ContentBaseView">
            <summary>
            A convenience base class for <see cref="T:Xamarin.Forms.ContentView"/>s which provides typed access to the viewmodel it is bound to.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ContentBaseView.ViewModel">
            <summary>
            Typed convenience property for accessing the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> property as a view model.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ContentBaseView.GetViewModel``1">
            <summary>
            Returns the viewmodel, type cast to the proper type.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <returns>View model</returns>
        </member>
        <member name="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs">
            <summary>
            Holds navigation parameters specific to views displaying a petition of a signature.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.#ctor(Waher.Networking.XMPP.Contracts.LegalIdentity,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs"/> class.
            </summary>
            <param name="requestorIdentity">The identity of the requestor.</param>
            <param name="requestorFullJid">The full Jid of the requestor.</param>
            <param name="signatoryIdentityId">Legal ID requested to sign <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.ContentToSign"/>.</param>
            <param name="contentToSign">Digital content to sign.</param>
            <param name="petitionId">The petition id.</param>
            <param name="purpose">The purpose of the petition.</param>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.RequestorIdentity">
            <summary>
            The identity of the requestor.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.RequestorFullJid">
            <summary>
            The full Jid of the requestor.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.SignatoryIdentityId">
            <summary>
            Legal ID requested to sign <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.ContentToSign"/>.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.ContentToSign">
            <summary>
            Digital content to sign.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.PetitionId">
            <summary>
            The petition id.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureNavigationArgs.Purpose">
            <summary>
            The purpose of the petition.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignaturePage">
            <summary>
            A page to display when the user is asked to sign data.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignaturePage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignaturePage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignaturePage.OnDisappearingAsync">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel">
            <summary>
            The view model to bind to when displaying petitioning of a signature in a view or page.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.AcceptCommand">
            <summary>
            The command to bind to for accepting the petition
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.DeclineCommand">
            <summary>
            The command to bind to for declining the petition
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.IgnoreCommand">
            <summary>
            The command to bind to for ignoring the petition
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Photos">
            <summary>
            The list of photos related to the identity being petitioned.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.RequestorIdentity">
            <summary>
            The identity of the requestor.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.CreatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Created"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Created">
            <summary>
            Created date of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.UpdatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Updated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Updated">
            <summary>
            Updated date of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.LegalIdProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.LegalId"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.LegalId">
            <summary>
            Legal id of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.StateProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.State"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.State">
            <summary>
            Current state of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.FromProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.From"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.From">
            <summary>
            From date (validity range) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.ToProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.To"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.To">
            <summary>
            To date (validity range) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.FirstNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.FirstName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.FirstName">
            <summary>
            First name of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.MiddleNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.MiddleNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.MiddleNames">
            <summary>
            Middle name(s) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.LastNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.LastNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.LastNames">
            <summary>
            Last name(s) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PersonalNumberProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PersonalNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PersonalNumber">
            <summary>
            Personal number of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.AddressProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Address"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Address">
            <summary>
            Address of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Address2Property">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Address2"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Address2">
            <summary>
            Address (line 2) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.ZipCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.ZipCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.ZipCode">
            <summary>
            Zip code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.AreaProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Area"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Area">
            <summary>
            Area of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.CityProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.City"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.City">
            <summary>
            City of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.RegionProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Region"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Region">
            <summary>
            Region of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.CountryCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.CountryCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.CountryCode">
            <summary>
            Country code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.CountryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Country"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Country">
            <summary>
            Country of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PhoneNrProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PhoneNr"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PhoneNr">
            <summary>
            PhoneNr of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.EMailProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.EMail"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.EMail">
            <summary>
            EMail of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.IsApprovedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.IsApproved"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.IsApproved">
            <summary>
            Is the contract approved?
            </summary>
        </member>
        <member name="F:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.PurposeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Purpose"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Contracts.PetitionSignature.PetitionSignatureViewModel.Purpose">
            <summary>
            What's the purpose of the petition?
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs">
            <summary>
            Holds navigation parameters specific to views displaying a petition of a legal identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.#ctor(Waher.Networking.XMPP.Contracts.LegalIdentity,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs"/> class.
            </summary>
            <param name="requestorIdentity">The identity of the requestor.</param>
            <param name="requestorFullJid">The full Jid of the requestor.</param>
            <param name="requestedIdentityId">The requested identity id.</param>
            <param name="petitionId">The petition id.</param>
            <param name="purpose">The purpose of the petition.</param>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.RequestorIdentity">
            <summary>
            The identity of the requestor.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.RequestorFullJid">
            <summary>
            The full Jid of the requestor.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.RequestedIdentityId">
            <summary>
            The requested identity id.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.PetitionId">
            <summary>
            The petition id.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityNavigationArgs.Purpose">
            <summary>
            The purpose of the petition.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityPage">
            <summary>
            A page to display when the user is asked to petition an identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityPage.OnDisappearingAsync">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel">
            <summary>
            The view model to bind to when displaying petitioning of an identity in a view or page.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.AcceptCommand">
            <summary>
            The command to bind to for accepting the petition
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.DeclineCommand">
            <summary>
            The command to bind to for declining the petition
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.IgnoreCommand">
            <summary>
            The command to bind to for ignoring the petition
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Photos">
            <summary>
            The list of photos related to the identity being petitioned.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.RequestorIdentity">
            <summary>
            The identity of the requestor.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.CreatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Created"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Created">
            <summary>
            Created date of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.UpdatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Updated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Updated">
            <summary>
            Updated date of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.LegalIdProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.LegalId"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.LegalId">
            <summary>
            Legal id of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.StateProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.State"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.State">
            <summary>
            Current state of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FromProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.From"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.From">
            <summary>
            From date (validity range) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ToProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.To"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.To">
            <summary>
            To date (validity range) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstName">
            <summary>
            First name of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.MiddleNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.MiddleNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.MiddleNames">
            <summary>
            Middle name(s) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.LastNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.LastNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.LastNames">
            <summary>
            Last name(s) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PersonalNumberProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PersonalNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PersonalNumber">
            <summary>
            Personal number of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.AddressProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Address"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Address">
            <summary>
            Address of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Address2Property">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Address2"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Address2">
            <summary>
            Address (line 2) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ZipCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ZipCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ZipCode">
            <summary>
            Zip code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.AreaProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Area"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Area">
            <summary>
            Area of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.CityProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.City"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.City">
            <summary>
            City of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.RegionProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Region"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Region">
            <summary>
            Region of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.CountryCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.CountryCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.CountryCode">
            <summary>
            Country code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.CountryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Country"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Country">
            <summary>
            Country of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PhoneNrProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PhoneNr"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PhoneNr">
            <summary>
            PhoneNr of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.EMailProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.EMail"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.EMail">
            <summary>
            EMail of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.IsApprovedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.IsApproved"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.IsApproved">
            <summary>
            Is the contract approved?
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.PurposeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Purpose"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.Purpose">
            <summary>
            What's the purpose of the petition?
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ThirdPartyInContactsProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ThirdPartyInContacts"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.ThirdPartyInContacts">
            <summary>
            Gets or sets whether the identity is in the contact list or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstPhotoSourceProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstPhotoSource"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstPhotoSource">
            <summary>
            Image source of the first photo in the identity of the requestor.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstPhotoRotationProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstPhotoRotation"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.PetitionIdentity.PetitionIdentityViewModel.FirstPhotoRotation">
            <summary>
            Rotation of the first photo in the identity of the requestor.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityNavigationArgs">
            <summary>
            Holds navigation parameters specific to views displaying an identity transfer code.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.TransferIdentity.TransferIdentityNavigationArgs.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityNavigationArgs"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.TransferIdentity.TransferIdentityNavigationArgs.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityNavigationArgs"/> class.
            </summary>
            <param name="Uri">Transfer URI</param>
        </member>
        <member name="P:IdApp.Pages.Identity.TransferIdentity.TransferIdentityNavigationArgs.Uri">
            <summary>
            Transfer URI
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityPage">
            <summary>
            A page to display when the user wants to view an identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.TransferIdentity.TransferIdentityPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityPage"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel">
            <summary>
            The view model to bind to for when displaying identities.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.CopyUriToClipboard">
            <summary>
            Command to copy URI to clipboard.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.UriProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.Uri"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.Uri">
            <summary>
            Uri date of the identity
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.TransferIdentity.TransferIdentityViewModel.Title">
            <summary>
            Title of the current view
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs">
            <summary>
            Holds navigation parameters specific to views displaying a legal identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.#ctor(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs"/> class.
            </summary>
            <param name="identity">The identity.</param>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.#ctor(Waher.Networking.XMPP.Contracts.LegalIdentity,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs"/> class.
            </summary>
            <param name="identity">The identity.</param>
            <param name="RequestorFullJid">Full JID of requestor.</param>
            <param name="SignatoryIdentityId">Legal identity of signatory.</param>
            <param name="PetitionId">ID of petition.</param>
            <param name="Purpose">Purpose message to display.</param>
            <param name="ContentToSign">Content to sign.</param>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.Identity">
            <summary>
            The identity to display.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.RequestorIdentity">
            <summary>
            Legal Identity of requesting entity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.RequestorFullJid">
            <summary>
            Full JID of requestor.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.SignatoryIdentityId">
            <summary>
            Legal identity of petitioned signatory.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.PetitionId">
            <summary>
            Petition ID
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.Purpose">
            <summary>
            Purpose
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityNavigationArgs.ContentToSign">
            <summary>
            Content to sign.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityPage">
            <summary>
            A page to display when the user wants to view an identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityPage.OnDisappearingAsync">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel">
            <summary>
            The view model to bind to for when displaying identities.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Photos">
            <summary>
            Holds a list of photos associated with this identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ApproveCommand">
            <summary>
            The command to bind to for approving an identity
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.RejectCommand">
            <summary>
            The command to bind to for rejecting an identity
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ChangePinCommand">
            <summary>
            The command to bind to for changing PIN.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CompromiseCommand">
            <summary>
            The command to bind to for flagging an identity as compromised.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.RevokeCommand">
            <summary>
            The command to bind to for revoking an identity
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.TransferCommand">
            <summary>
            The command to bind to for transferring an identity
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CopyCommand">
            <summary>
            The command for copying data to clipboard.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CopyToClipboard(System.Object)">
            <summary>
            Copies Item to clipboard
            </summary>
        </member>
        <member name="M:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.XmppService_ConnectionStateChanged(System.Object,Waher.Networking.XMPP.XmppState)">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CreatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Created"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Created">
            <summary>
            Created time stamp of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.UpdatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Updated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Updated">
            <summary>
            Updated time stamp of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LegalIdProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LegalId"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LegalId">
            <summary>
            Legal id of the identity
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LegalIdentity">
            <summary>
            The full legal identity of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.BareJidProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.BareJid"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.BareJid">
            <summary>
            Bare Jid of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PublicKeyProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PublicKey"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PublicKey">
            <summary>
            Public key of the identity's signature.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.StateProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.State"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.State">
            <summary>
            Current state of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FromProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.From"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.From">
            <summary>
            From date (validity range) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ToProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.To"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.To">
            <summary>
            To date (validity range) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstName">
            <summary>
            First name of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNames">
            <summary>
            Middle name(s) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNames">
            <summary>
            Last name(s) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumberProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumber">
            <summary>
            Personal number of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AddressProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address">
            <summary>
            Address of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2Property">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2">
            <summary>
            Address (line 2) of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCode">
            <summary>
            Zip code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AreaProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Area"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Area">
            <summary>
            Area of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CityProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.City"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.City">
            <summary>
            City of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.RegionProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Region"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Region">
            <summary>
            Region of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Country"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Country">
            <summary>
            Country of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCode">
            <summary>
            Country code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PhoneNrProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PhoneNr"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PhoneNr">
            <summary>
            Country code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.EMailProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.EMail"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.EMail">
            <summary>
            Country code of the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsApprovedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsApproved"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsApproved">
            <summary>
            Gets or sets whether the identity is approved or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsCreatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsCreated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsCreated">
            <summary>
            Gets or sets created state of the identity, i.e. if it has been created or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReview"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReview">
            <summary>
            Gets or sets whether the identity is for review or not. This property has its inverse in <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsNotForReview"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsNotForReviewProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsNotForReview"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsNotForReview">
            <summary>
            Gets or sets whether the identity is for review or not. This property has its inverse in <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReview"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ThirdPartyProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ThirdParty"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ThirdParty">
            <summary>
            Gets or sets whether the identity is for review or not. This property has its inverse in <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReview"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsPersonalProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsPersonal"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsPersonal">
            <summary>
            Gets or sets whether the identity is a personal identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstNameIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstNameIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstNameIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstName"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNamesIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNamesIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNamesIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNames"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNamesIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNamesIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNamesIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNames"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumberIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumberIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumberIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumber"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AddressIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AddressIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AddressIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2IsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AddressIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2IsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCodeIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCodeIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCodeIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCode"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AreaIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AreaIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.AreaIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Area"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CityIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CityIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CityIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.City"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.RegionIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.RegionIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.RegionIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Region"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCodeIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCodeIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCodeIsChecked">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CountryCode"/> property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CarefulReviewIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CarefulReviewIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.CarefulReviewIsChecked">
            <summary>
            Gets or sets whether the Careful Review property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ApprovePiiIsCheckedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ApprovePiiIsChecked"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ApprovePiiIsChecked">
            <summary>
            Gets or sets whether the ApprovePii property is checked (when being reviewed)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewFirstNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewFirstName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewFirstName">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstName"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewMiddleNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewMiddleNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewMiddleNames">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.MiddleNames"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewLastNamesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewLastNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewLastNames">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.LastNames"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewPersonalNumberProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewPersonalNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewPersonalNumber">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.PersonalNumber"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAddressProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAddress"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAddress">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAddress2Property">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAddress2"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAddress2">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Address2"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewCityProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewCity"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewCity">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.City"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewZipCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewZipCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewZipCode">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.ZipCode"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewAreaProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewArea"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewArea">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Area"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewRegionProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewRegion"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewRegion">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Region"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewCountryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewCountry"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.IsForReviewCountry">
            <summary>
            Gets or sets whether the <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Country"/> property is for review.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstPhotoSourceProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstPhotoSource"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstPhotoSource">
            <summary>
            Image source of the first photo in the identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstPhotoRotationProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstPhotoRotation"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.FirstPhotoRotation">
            <summary>
            Rotation of the first photo in the identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Identity.ViewIdentity.ViewIdentityViewModel.Title">
            <summary>
            Title of the current view
            </summary>
        </member>
        <member name="T:IdApp.Pages.ILifeCycleView">
            <summary>
            Interface for views who need to react to life-cycle events.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ILifeCycleView.Initialize">
            <summary>
            Method called when view is initialized for the first time. Use this method to implement registration
            of event handlers, processing navigation arguments, etc.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ILifeCycleView.Dispose">
            <summary>
            Method called when the view is disposed, and will not be used more. Use this method to unregister
            event handlers, etc.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ILifeCycleView.Appearing">
            <summary>
            Method called when view is appearing on the screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ILifeCycleView.Disappearing">
            <summary>
            Method called when view is disappearing from the screen.
            </summary>
        </member>
        <member name="T:IdApp.Pages.ILinkableView">
            <summary>
            Interface for linkable views.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.IsLinkable">
            <summary>
            If the current view is linkable.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.EncodeAppLinks">
            <summary>
            If App links should be encoded with the link.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.Link">
            <summary>
            Link to the current view
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.Title">
            <summary>
            Title of the current view
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.HasMedia">
            <summary>
            If linkable view has media associated with link.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.Media">
            <summary>
            Encoded media, if available.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ILinkableView.MediaContentType">
            <summary>
            Content-Type of associated media.
            </summary>
        </member>
        <member name="T:IdApp.Pages.IItemGroup">
            <summary>
            Grouped item interface.
            </summary>
        </member>
        <member name="P:IdApp.Pages.IItemGroup.UniqueName">
            <summary>
            Unique name used to compare items.
            </summary>
        </member>
        <member name="T:IdApp.Pages.IItemGroupCollection">
            <summary>
            Grouped item collection interface.
            </summary>
        </member>
        <member name="P:IdApp.Pages.IItemGroupCollection.UniqueName">
            <summary>
            Unique name used to compare items.
            </summary>
        </member>
        <member name="T:IdApp.Pages.ItemGroupCollection`1">
            <summary>
            Encapsulates a grouped item collection.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ItemGroupCollection`1.UniqueName">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.ItemGroupCollection`1.#ctor(System.String,System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Encapsulates a grouped item collection.
            </summary>
            <param name="Name">Group's unique name.</param>
            <param name="Items">Group's item collection.</param>
        </member>
        <member name="T:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs">
            <summary>
            Holds navigation parameters for the calculator.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs.#ctor">
            <summary>
            Holds navigation parameters for the calculator.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs.#ctor(Xamarin.Forms.Entry)">
            <summary>
            Holds navigation parameters for the calculator.
            </summary>
            <param name="Entry">Entry whose value is being calculated.</param>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs.#ctor(IdApp.Pages.BaseViewModel,Xamarin.Forms.BindableProperty)">
            <summary>
            Holds navigation parameters for the calculator.
            </summary>
            <param name="ViewModel">View model containing a bindable property with the value to calculate.</param>
            <param name="Property">Property containing the value to calculate.</param>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs.Entry">
            <summary>
            Entry whose value is being calculated.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs.ViewModel">
            <summary>
            View model containing a bindable property with the value to calculate.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorNavigationArgs.Property">
            <summary>
            Property containing the value to calculate.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Calculator.CalculatorPage">
            <summary>
            A page that allows the user to calculate the value of a numerical input field.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorPage.#ctor">
            <summary>
            A page that allows the user to calculate the value of a numerical input field.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Calculator.CalculatorViewModel">
            <summary>
            The view model to bind to for when displaying the calculator.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorViewModel.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Main.Calculator.CalculatorViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.ValueProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Value"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Value">
            <summary>
            Current entry
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.StatusProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Status"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Status">
            <summary>
            Current entry
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.EnteringProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Entering"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Entering">
            <summary>
            Current entry
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.HasValueProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.HasValue"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.HasValue">
            <summary>
            If there's a value in the input field
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.HasStatisticsProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.HasStatistics"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.HasStatistics">
            <summary>
            If there's values available for statistical computations.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.NrParenthesesProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.NrParentheses"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.NrParentheses">
            <summary>
            Number of open parentheses
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.MemoryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Memory"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Memory">
            <summary>
            Current entry
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.EntryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Entry"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Entry">
            <summary>
            Entry control, if available
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.ViewModelProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.ViewModel"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.ViewModel">
            <summary>
            View model, if available
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.PropertyProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Property"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Property">
            <summary>
            Property, if available.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DecimalSeparatorDecimalSeparator">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DecimalSeparator"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DecimalSeparator">
            <summary>
            Current decimal separator.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayMainDisplayMain">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayMain"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayMain">
            <summary>
            If main key page is to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayFunctionsDisplayFunctions">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayFunctions"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayFunctions">
            <summary>
            If function key page is to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicDisplayHyperbolic">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolic"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolic">
            <summary>
            If hyperbolic functions are to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayInverseDisplayInverse">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayInverse"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayInverse">
            <summary>
            If inverse functions are to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayNotHyperbolicNotInverseDisplayNotHyperbolicNotInverse">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayNotHyperbolicNotInverse"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayNotHyperbolicNotInverse">
            <summary>
            If neither hyperbolic nor inverse functions are to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicNotInverseDisplayHyperbolicNotInverse">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicNotInverse"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicNotInverse">
            <summary>
            If hyperbolic functions, but not inverse functions are to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayNotHyperbolicInverseDisplayNotHyperbolicInverse">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayNotHyperbolicInverse"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayNotHyperbolicInverse">
            <summary>
            If inverse functions, but not hyperbolic functions are to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicInverseDisplayHyperbolicInverse">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicInverse"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayHyperbolicInverse">
            <summary>
            If inverse hyperbolic functions are to be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayEqualsDisplayEquals">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayEquals"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayEquals">
            <summary>
            If the equals button should be displayed
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayEndParenthesisDisplayEndParenthesis">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayEndParenthesis"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.DisplayEndParenthesis">
            <summary>
            If the end parenthesis button should be displayed.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.Stack">
            <summary>
            Holds the contents of the calculation stack
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.MemoryItems">
            <summary>
            Holds the contents of the memory
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.ToggleCommand">
            <summary>
            Command executed when user wants to toggle buttons.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.ToggleHyperbolicCommand">
            <summary>
            Command executed when user wants to toggle hyperbolic functions on/off.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.ToggleInverseCommand">
            <summary>
            Command executed when user wants to toggle inverse functions on/off.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.KeyPressCommand">
            <summary>
            Command executed when user presses a key buttonn.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.StackString">
            <summary>
            String representation of contents on the stack.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorViewModel.EvaluateStack">
            <summary>
            Evaluates the current stack.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Calculator.CalculatorViewModel.EvaluateStack(System.Boolean)">
            <summary>
            Evaluates the current stack.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Calculator.CalculatorViewModel.MemoryString">
            <summary>
            String representation of contents on the statistical memory.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Calculator.OperatorPriority">
            <summary>
            Binary operator priority
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.OperatorPriority.Equals">
            <summary>
            Evaluation operator
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.OperatorPriority.Parenthesis">
            <summary>
            Parenthesis operator
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.OperatorPriority.Terms">
            <summary>
            Addition and Subtraction
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.OperatorPriority.Factors">
            <summary>
            Multiplication and division
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.OperatorPriority.Powers">
            <summary>
            Powers and exponents
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Calculator.StackItem">
            <summary>
            Calculation stack item
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.StackItem.Entry">
            <summary>
            Entry
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.StackItem.Script">
            <summary>
            Corresponding script
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.StackItem.Priority">
            <summary>
            Priority level
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.StackItem.Operator">
            <summary>
            Operator to display
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Calculator.StackItem.StartParenthesis">
            <summary>
            If parenthesis was started
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Loading.LoadingPage">
            <summary>
            A page to use when the application is loading, or initializing.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.Loading.LoadingPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingPage.OnAppearingAsync">
            <summary>
            Overridden to start an animation when the page is displayed on screen.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Loading.LoadingViewModel">
            <summary>
            The view model to bind to for a loading page, i.e. a page showing the loading/startup state of a Xamarin app.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.Loading.LoadingViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingViewModel.OnAppearing">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingViewModel.OnDisappearing">
            <inheritdoc />
        </member>
        <member name="F:IdApp.Pages.Main.Loading.LoadingViewModel.DisplayConnectionTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Loading.LoadingViewModel.DisplayConnectionText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Loading.LoadingViewModel.DisplayConnectionText">
            <summary>
            Gets or sets whether the user friendly connection text should be visible on screen or not.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingViewModel.XmppService_ConnectionStateChanged(System.Object,Waher.Networking.XMPP.XmppState)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Main.Loading.LoadingViewModel.SetConnectionStateAndText(Waher.Networking.XMPP.XmppState)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.Main.Main.MainPage">
            <summary>
            A root, or main page, for the application. This is the starting point, from here you can navigate to other pages
            and take various actions.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.Main.MainPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainPage.OnAppearingAsync">
            <summary>
            Asynchronous OnAppearing-method.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainPage.OnDisappearingAsync">
            <summary>
            Asynchronous OnAppearing-method.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainPage.IsFrontViewShowing">
            <summary>
            If the front view is showing.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainPage.IsBackViewShowing">
            <summary>
            If the back view is showing.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Main.MainViewModel">
            <summary>
            The view model to bind to for the main page of the application. Holds basic user profile state
            as well as connection state.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainViewModel.#ctor(IdApp.Pages.Main.Main.MainPage)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.Main.MainViewModel"/> class.
            </summary>
            <param name="MainPage">Main Page</param>
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ViewMyIdentityCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ViewMyIdentityCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ViewMyIdentityCommand">
            <summary>
            The command to bind to for viewing the user's own contracts.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ScanQrCodeCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ScanQrCodeCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ScanQrCodeCommand">
            <summary>
            The command to bind to for scanning a QR code.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.SharePhotoCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.SharePhotoCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.SharePhotoCommand">
            <summary>
            The command to bind to for viewing the user's own contracts.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ShareQRCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ShareQRCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ShareQRCommand">
            <summary>
            The command to bind to for viewing the user's own contracts.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.CalculatorCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.CalculatorCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.CalculatorCommand">
            <summary>
            The command to bind to for viewing the calculator.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.AboutCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.AboutCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.AboutCommand">
            <summary>
            The command to bind to for viewing information about the app.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ExitCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ExitCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ExitCommand">
            <summary>
            The command to bind to for existing the app.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.HasPhotoProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.HasPhoto"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.HasPhoto">
            <summary>
            Gets or sets whether the current user has a photo associated with the account.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ImageProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.Image"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.Image">
            <summary>
            Gets or sets the current user's photo.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ImageRotationProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ImageRotation"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ImageRotation">
            <summary>
            Gets or sets whether the current user has a photo associated with the account.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ImageBinProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ImageBin"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ImageBin">
            <summary>
            Binary encoding of photo
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ImageContentTypeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ImageContentType"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ImageContentType">
            <summary>
            Content-Type of photo
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.FullNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.FullName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.FullName">
            <summary>
            Gets or sets the current user's full name.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.CityProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.City"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.City">
            <summary>
            Gets or sets the current user's city.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.CountryProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.Country"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.Country">
            <summary>
            Gets or sets the current user's country.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.LocationProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.Location"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.Location">
            <summary>
            Gets or sets the current user's location.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.IsOnlineProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.IsOnline"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.IsOnline">
            <summary>
            Gets or sets whether the app is currently online, i.e. has network access.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.NetworkStateTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.NetworkStateText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.NetworkStateText">
            <summary>
            Gets or sets the user friendly network state text for display.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.IdentityStateTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.IdentityStateText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.IdentityStateText">
            <summary>
            Gets or sets the user friendly network state text for display.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.HasConnectionErrorsProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.HasConnectionErrors"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.HasConnectionErrors">
            <summary>
            Gets or sets whether there are any connection errors at all for the app.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Main.MainViewModel.ConnectionErrorsTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Main.MainViewModel.ConnectionErrorsText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.ConnectionErrorsText">
            <summary>
            Gets or sets the user friendly connection errors text for display. Can be null.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainViewModel.XmppService_ConnectionStateChanged(System.Object,Waher.Networking.XMPP.XmppState)">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Main.Main.MainViewModel.SetConnectionStateAndText(Waher.Networking.XMPP.XmppState)">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.Title">
            <summary>
            Title of the current view
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.Media">
            <summary>
            Encoded media, if available.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Main.MainViewModel.MediaContentType">
            <summary>
            Content-Type of associated media.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.ScanQrCode.CodeScannedEventArgs">
            <summary>
            An event args class that holds dat about the currently scanned QR code.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.CodeScannedEventArgs.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Main.ScanQrCode.CodeScannedEventArgs"/> class.
            </summary>
            <param name="Url">The URL in a scanned QR code</param>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.CodeScannedEventArgs.Url">
            <summary>
            The scanned QR code URL
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs">
            <summary>
            Holds navigation parameters specific to views scanning a QR code.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs.#ctor(System.String,System.Func{System.String,System.Threading.Tasks.Task})">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs"/> class.
            </summary>
            <param name="CommandName">The command name (localized) to display.</param>
            <param name="Action">The asynchronous action to invoke right after a QR Code has been scanned, but before the Scan Page closes.</param>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs.CommandName">
            <summary>
            The command name (localized) to display.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs.Action">
            <summary>
            The asynchronous action to invoke right after a QR Code has been scanned, but before the Scan Page closes.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs.QrCodeScanned">
            <summary>
            Task completion source; can be used to wait for a result.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage">
            <summary>
            A page to display for scanning of a QR code, either automatically via the camera, or by entering the code manually.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage.#ctor(IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage"/> class.
            </summary>
            <param name="NavigationArgs">
            Navigation arguments, which are manually passed to the constructor when Shell navigation is not available, namely during on-boarding.
            </param>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage"/> class.
            </summary>
            <remarks>
            A parameterless constructor is required for shell routing system (it uses <c>Activator.CreateInstance</c>).
            </remarks>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage.OnAppearingAsync">
            <summary>
            Asynchronous OnAppearing-method.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage.OnDisappearingAsync">
            <summary>
            Asynchronous OnAppearing-method.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel">
            <summary>
            The view model to bind to when scanning a QR code.
            </summary>
        </member>
        <member name="E:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ModeChanged">
            <summary>
            An event that is fired when the scanning mode changes from automatic scan to manual entry.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.#ctor(IdApp.Pages.Main.ScanQrCode.ScanQrCodeNavigationArgs)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.TrySetResultAndClosePage(System.String)">
            <summary>
            Tries to set the Scan QR Code result and close the scan page.
            </summary>
            <param name="Url">The URL to set.</param>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.SwitchModeCommand">
            <summary>
            Action to bind to for switching scan mode from manual to automatic.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.LinkTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.LinkText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.LinkText">
            <summary>
            The link text, i.e. the full qr code including scheme.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.UrlProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.Url"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.Url">
            <summary>
            The raw QR code URL.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OpenCommandTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OpenCommandText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OpenCommandText">
            <summary>
            The localized, user friendly command name to display in the UI for scanning a QR Code. Typically "Add" or "Open".
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OpenIsEnabledProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OpenIsEnabled"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OpenIsEnabled">
            <summary>
            Gets or sets whether the open command is enabled or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsAutomaticProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsAutomatic"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsAutomatic">
            <summary>
            Gets or sets whether the QR scanning is automatic or manual. <seealso cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsManual"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsManualProperty">
            <summary>
            <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsManual"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsManual">
            <summary>
            Gets or sets whether the QR scanning is automatic or manual. <seealso cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ScanIsAutomatic"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ModeTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ModeText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ModeText">
            <summary>
            The localized mode text to display to the user.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.OnModeChanged(System.EventArgs)">
            <summary>
            Invoke this method to fire the <see cref="E:IdApp.Pages.Main.ScanQrCode.ScanQrCodeViewModel.ModeChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:IdApp.Pages.Main.Security.SecurityPage">
            <summary>
            A page that allows the user to calculate the value of a numerical input field.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Security.SecurityPage.#ctor">
            <summary>
            A page that allows the user to calculate the value of a numerical input field.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Security.SecurityViewModel">
            <summary>
            The view model to bind to for when displaying security options.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Security.SecurityViewModel.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Main.Security.SecurityViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Security.SecurityViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.Main.Security.SecurityViewModel.CanProhibitScreenCaptureProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Security.SecurityViewModel.CanProhibitScreenCapture"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Security.SecurityViewModel.CanProhibitScreenCapture">
            <summary>
            If screen capture prohibition can be controlled
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Security.SecurityViewModel.CanEnableScreenCaptureProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Security.SecurityViewModel.CanEnableScreenCapture"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Security.SecurityViewModel.CanEnableScreenCapture">
            <summary>
            Gets or sets whether the identity is approved or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Security.SecurityViewModel.CanDisableScreenCaptureProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Security.SecurityViewModel.CanDisableScreenCapture"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Security.SecurityViewModel.CanDisableScreenCapture">
            <summary>
            Gets or sets whether the identity is approved or not.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Security.SecurityViewModel.ChangePinCommand">
            <summary>
            Command executed when user wants to change PIN.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Security.SecurityViewModel.PermitScreenCaptureCommand">
            <summary>
            Command executed when user wants to permit screen capture
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Security.SecurityViewModel.ProhibitScreenCaptureCommand">
            <summary>
            Command executed when user wants to prohibit screen capture
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Shell.AppShell">
            <summary>
            The Xamarin Forms Shell implementation of the Neuro-Access App.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Shell.AppShell.#ctor">
            <summary>
            Create a new instance of the <see cref="T:IdApp.Pages.Main.Shell.AppShell"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShell.XmppService">
            <summary>
            Current XMPP Service
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShell.NetworkService">
            <summary>
            Current Network Service
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShell.NavigationService">
            <summary>
            Current Navigation Service
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShell.LogService">
            <summary>
            Current Log Service
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShell.UiSerializer">
            <summary>
            Current UI Dispatcher Service
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShell.ContractOrchestratorService">
            <summary>
            Current Contract Orchestrator Service
            </summary>
        </member>
        <member name="T:IdApp.Pages.Main.Shell.AppShellViewModel">
            <summary>
            The view model to bind to for the App Shell, when using Xamarin Forms 5.0 or greater.
            This is the root, or bootstrap view model.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Shell.AppShellViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Main.Shell.AppShellViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Main.Shell.AppShellViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Main.Shell.AppShellViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.Main.Shell.AppShellViewModel.ConnectionStateTextProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Shell.AppShellViewModel.ConnectionStateText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShellViewModel.ConnectionStateText">
            <summary>
            Gets or sets whether the connection state text, i.e a user friendly string showing XMPP connection info.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Shell.AppShellViewModel.IsConnectedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Shell.AppShellViewModel.IsConnected"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShellViewModel.IsConnected">
            <summary>
            Gets or sets whether the application is connected to an XMPP server.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Main.Shell.AppShellViewModel.IsOnlineProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Main.Shell.AppShellViewModel.IsOnline"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Main.Shell.AppShellViewModel.IsOnline">
            <summary>
            Gets or sets whether the application is online, i.e. has network access.
            </summary>
        </member>
        <member name="T:IdApp.Pages.NavigationBasePage">
            <summary>
            A base class for all navigation pages.
            </summary>
        </member>
        <member name="M:IdApp.Pages.NavigationBasePage.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.NavigationBasePage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.NavigationBasePage.#ctor(Xamarin.Forms.Page)">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.NavigationBasePage"/> class.
            </summary>
            <param name="Root">The starting page.</param>
        </member>
        <member name="T:IdApp.Pages.QrXmppViewModel">
            <summary>
            A view model that holds the XMPP state.
            </summary>
        </member>
        <member name="M:IdApp.Pages.QrXmppViewModel.#ctor">
            <summary>
            Creates an instance of a <see cref="T:IdApp.Pages.XmppViewModel"/>.
            </summary>
        </member>
        <member name="M:IdApp.Pages.QrXmppViewModel.GenerateQrCode(System.String)">
            <summary>
            Generates a QR-code
            </summary>
            <param name="Uri">URI to encode in QR-code.</param>
        </member>
        <member name="M:IdApp.Pages.QrXmppViewModel.RemoveQrCode">
            <summary>
            Removes the QR-code
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.QrCodeProperty">
            <summary>
            See <see cref="F:IdApp.Pages.QrXmppViewModel.QrCodeProperty"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.QrCode">
            <summary>
            Generated QR code image for the identity
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.HasQrCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.QrXmppViewModel.HasQrCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.HasQrCode">
            <summary>
            Determines whether there's a generated <see cref="P:IdApp.Pages.QrXmppViewModel.QrCode"/> image for this identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.QrCodeUriProperty">
            <summary>
            See <see cref="P:IdApp.Pages.QrXmppViewModel.QrCodeUri"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.QrCodeUri">
            <summary>
            Determines whether there's a generated <see cref="P:IdApp.Pages.QrXmppViewModel.QrCode"/> image for this identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.QrCodeWidthProperty">
            <summary>
            See <see cref="P:IdApp.Pages.QrXmppViewModel.QrCodeWidth"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.QrCodeWidth">
            <summary>
            Gets or sets the width, in pixels, of the QR Code image to generate.
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.QrCodeHeightProperty">
            <summary>
            See <see cref="P:IdApp.Pages.QrXmppViewModel.QrCodeHeight"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.QrCodeHeight">
            <summary>
            Gets or sets the height, in pixels, of the QR Code image to generate.
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.QrCodeBinProperty">
            <summary>
            See <see cref="P:IdApp.Pages.QrXmppViewModel.QrCodeBin"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.QrCodeBin">
            <summary>
            Binary encoding of QR Code
            </summary>
        </member>
        <member name="F:IdApp.Pages.QrXmppViewModel.QrCodeContentTypeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.QrXmppViewModel.QrCodeContentType"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.QrCodeContentType">
            <summary>
            Content-Type of QR Code
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.IsLinkable">
            <summary>
            If the current view is linkable.
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.EncodeAppLinks">
            <summary>
            If App links should be encoded with the link.
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.Link">
            <summary>
            Link to the current view
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.Title">
            <summary>
            Title of the current view
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.HasMedia">
            <summary>
            If linkable view has media associated with link.
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.Media">
            <summary>
            Encoded media, if available.
            </summary>
        </member>
        <member name="P:IdApp.Pages.QrXmppViewModel.MediaContentType">
            <summary>
            Content-Type of associated media.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ChooseAccount.ChooseAccountView">
            <summary>
            A view to display the 'create account or connect to existing account' during the registration process.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.ChooseAccount.ChooseAccountView"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel">
            <summary>
            The view model to bind to when showing Step 2 of the registration flow: creating or connecting to an account.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="F:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.DomainNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.DomainName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.DomainName">
            <summary>
            The localized intro text to display to the user for explaining what 'choose account' is for.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.AccountNameProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.AccountName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.AccountName">
            <summary>
            The account name to use when creating a new account.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.LegalIdentity">
            <summary>
            The legal identity, if any. Typically set after creating an account or connecting to an existing account.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.CreateNewCommand">
            <summary>
            The command to bind to for creating a new account.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.ScanQrCodeCommand">
            <summary>
            The command to bind to for scanning an invitation or transfer code.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.ClearStepState">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.DoSaveState">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.ChooseAccount.ChooseAccountViewModel.DoRestoreState">
            <inheritdoc />
        </member>
        <member name="T:IdApp.Pages.Registration.DefinePin.DefinePinView">
            <summary>
            A view to display the 'choose pin' during the registration process.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.DefinePin.DefinePinView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.DefinePin.DefinePinView"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.DefinePin.DefinePinViewModel">
            <summary>
            The view model to bind to when showing Step 5 of the registration flow: defining a PIN.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.DefinePin.DefinePinViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.ClearStepState">
            <inheritdoc />
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.ContinueCommand">
            <summary>
            The command to bind to for continuing to the next step in the registration flow.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.SkipCommand">
            <summary>
            The command to bind to for skipping this step and moving on to the next step in the registration flow.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.PinProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.Pin"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.Pin">
            <summary>
            The PIn code entered by the user.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.RetypedPinProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.RetypedPin"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.RetypedPin">
            <summary>
            The retyped pin to use for validation against <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.Pin"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.EnteringPinStartedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.EnteringPinStarted"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.EnteringPinStarted">
            <summary>
            Gets or sets a value indicating if the user has started entering PIN.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.EnteringRetypedPinStartedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.EnteringRetypedPinStarted"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.EnteringRetypedPinStarted">
            <summary>
            Gets or sets a value indicating if the user has started entering retyped PIN.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.PinStrength">
            <summary>
            Gets the value indicating how strong the <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.Pin"/> is.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.PinsMatch">
            <summary>
            Gets the value indicating whether the entered <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.Pin"/> is the same as the entered <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.RetypedPin"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.IsConnectedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.IsConnected"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.IsConnected">
            <summary>
            Gets or sets if the app is connected to an XMPP server.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.ConnectionStateTextProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.ConnectionStateText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.ConnectionStateText">
            <summary>
            The user friendly connection state text to display to the user.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.YouCanProtectYourWalletPinInfoProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.YouCanProtectYourWalletPinInfo"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.YouCanProtectYourWalletPinInfo">
            <summary>
            Enter PIN text to display to the user.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.DefinePin.DefinePinViewModel.OnPropertyChanged(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel">
            <summary>
            The data model for registering an identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.MiddleNames">
            <summary>
            Middle name(s) as one string
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.LastNames">
            <summary>
            Last name(s) as one string
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.PersonalNumber">
            <summary>
            Personal number
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.Address">
            <summary>
            Address, line 1
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.Address2">
            <summary>
            Address, line 2
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.ZipCode">
            <summary>
            Zip code (postal code)
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.Area">
            <summary>
            Area
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.PhoneNr">
            <summary>
            Phone Number
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.EMail">
            <summary>
            EMail
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.DeviceId">
            <summary>
            Device Id
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.Jid">
            <summary>
            Jabber Id
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel.ToProperties(IdApp.Services.Xmpp.IXmppService)">
            <summary>
            Converts the <see cref="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel"/> to an array of <inheritdoc cref="T:Waher.Networking.XMPP.Contracts.Property"/>.
            </summary>
            <param name="XmppService">The XMPP service to use for accessing the Bare Jid.</param>
            <returns>The <see cref="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel"/> as a list of properties.</returns>
        </member>
        <member name="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityView">
            <summary>
            A view to display the 'register identity' during the registration process.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityView"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel">
            <summary>
            The view model to bind to when showing Step 3 of the registration flow: registering an identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.IsTest">
            <summary>
            True if the user choose the educational or experimental purpose.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.RegisterCommand">
            <summary>
            The command to bind to for performing the 'register' action.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.TakePhotoCommand">
            <summary>
            The command to bind to for taking a photo with the camera.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PickPhotoCommand">
            <summary>
            The command to bind to for selecting a photo from the camera roll.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.EPassportCommand">
            <summary>
            The command to bind to for scanning an ePassport or eID.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.RemovePhotoCommand">
            <summary>
            The command to bind to for removing the currently selected photo.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.HasPhotoProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.HasPhoto"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.HasPhoto">
            <summary>
            Gets or sets whether the user has selected a photo for their account or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ImageProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.HasPhoto"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Image">
            <summary>
            The image source, i.e. the file representing the selected photo.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ImageRotationProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ImageRotation"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ImageRotation">
            <summary>
            Gets or sets whether the current user has a photo associated with the account.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Countries">
            <summary>
            The list of all available countries a user can select from.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.SelectedCountryProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.HasPhoto"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.SelectedCountry">
            <summary>
            The user selected country from the list of <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Countries"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.FirstNameProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.FirstName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.FirstName">
            <summary>
            The user's first name
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.MiddleNamesProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.MiddleNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.MiddleNames">
            <summary>
            The user's middle name(s)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.LastNamesProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.LastNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.LastNames">
            <summary>
            The user's last name(s)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PersonalNumberProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PersonalNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PersonalNumber">
            <summary>
            The user's personal number
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PersonalNumberPlaceholderProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PersonalNumberPlaceholder"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PersonalNumberPlaceholder">
            <summary>
            The personal number placeholder, used as a guide to the user to enter the correct format, which depends on the <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.SelectedCountry"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.AddressProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Address"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Address">
            <summary>
            The user's address, line 1.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Address2Property">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Address2"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Address2">
            <summary>
            The user's address, line 2.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ZipCodeProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ZipCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ZipCode">
            <summary>
            The user's zip code
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.AreaProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Area"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Area">
            <summary>
            The user's area
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.CityProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.City"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.City">
            <summary>
            The user's city
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.RegionProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Region"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.Region">
            <summary>
            The user's region
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.DeviceIdProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.DeviceId"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.DeviceId">
            <summary>
            The device id.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.LegalIdentity">
            <summary>
            The user's legal identity, set when the registration has occurred.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.IsConnectedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.HasPhoto"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.IsConnected">
            <summary>
            Gets or sets whether the app is connected to an XMPP server.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ConnectionStateTextProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ConnectionStateText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ConnectionStateText">
            <summary>
            The user friendly connection state text to display to the user.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.AddPhoto(System.Byte[],System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds a photo from the specified path to use as a profile photo.
            </summary>
            <param name="Bin">Binary content</param>
            <param name="ContentType">Content-Type</param>
            <param name="Rotation">Rotation to use, to display the image correctly.</param>
            <param name="saveLocalCopy">Set to <c>true</c> to save a local copy, <c>false</c> otherwise.</param>
            <param name="showAlert">Set to <c>true</c> to show an alert if photo is too large; <c>false</c> otherwise.</param>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.AddPhoto(System.String,System.Boolean)">
            <summary>
            Adds a photo from the specified path to use as a profile photo.
            </summary>
            <param name="FilePath">The full path to the file.</param>
            <param name="SaveLocalCopy">Set to <c>true</c> to save a local copy, <c>false</c> otherwise.</param>
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.DoSaveState">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.DoRestoreState">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.ClearStepState">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel.PopulateFromTagProfile">
            <summary>
            Copies values from the existing TAG Profile's Legal identity.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.Registration.RegistrationPage">
            <summary>
            A page for guiding the user through the registration process for setting up a digital identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.Registration.RegistrationPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationPage.Create">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.Registration.RegistrationPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationPage.OnAppearingAsync">
            <summary>
            Overridden to sync the view with the view model when the page appears on screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationPage.OnDisappearingAsync">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationPage.UpdateUiStep">
            This is a hack. The issue is that the Carousel view doesn't reflect the CurrentStep binding correctly in the UI.
            The viewmodel is correct. The position property on the CarouselView is correct. But during restarts
            it still doesn't show the correct view template for that step. Instead it shows the last view template.
            So here we scroll back and forth one step to get it to be in sync with the viewmodel.
        </member>
        <member name="T:IdApp.Pages.Registration.Registration.RegistrationViewModel">
            <summary>
            The view model to bind to for displaying a registration page or view to the user.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.Registration.RegistrationViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.Create">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.Registration.RegistrationViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.RegistrationSteps">
            <summary>
            The list of steps needed to register a digital identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.GoToPrevCommand">
            <summary>
            The command to bind to for moving backwards to the previous step in the registration process.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStepChangedCommand">
            <summary>
            An opportunity to make some initialisation on the page change.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.Registration.RegistrationViewModel.CanGoBackProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CanGoBack"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CanGoBack">
            <summary>
            Gets or sets whether navigation back to the previous registration step can be performed.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStepProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStep"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStep">
            <summary>
            Gets or sets the current step from the list of <see cref="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.RegistrationSteps"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStepTitleProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStep"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStepTitle">
            <summary>
            The title of the current step. Displayed in the UI.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.MuteStepSync">
            <summary>
            Temporarily mutes the synchronization of the <see cref="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStep"/> property.
            This is a hack to workaround a bug on Android.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.UnMuteStepSync">
            <summary>
            Un-mutes the synchronization of the <see cref="P:IdApp.Pages.Registration.Registration.RegistrationViewModel.CurrentStep"/> property. See <see cref="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.MuteStepSync"/>.
            This is a hack to workaround a bug on Android.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.Registration.RegistrationViewModel.RegistrationStep_Completed(System.Object,System.EventArgs)">
            <summary>
            An event handler for listening to completion of the different registration steps.
            </summary>
            <param name="Sender">The event sender.</param>
            <param name="e">The default event args.</param>
        </member>
        <member name="T:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector">
            <summary>
            A data template selector for displaying various types of registration steps.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector.ValidateContactInfo">
            <summary>
            The template for validating contact information.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector.ChooseAccount">
            <summary>
            The choose account template.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector.RegisterIdentity">
            <summary>
            The register identity template.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector.ValidateIdentity">
            <summary>
            The validate identity template.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector.DefinePin">
            <summary>
            The define pin template.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepDataTemplateSelector.OnSelectTemplate(System.Object,Xamarin.Forms.BindableObject)">
            <summary>
            Chooses the best matching data template based on the type of registration step.
            </summary>
            <param name="item">The step to display.</param>
            <param name="container"></param>
            <returns>Selected template</returns>
        </member>
        <member name="T:IdApp.Pages.Registration.RegistrationStepView">
            <summary>
            A base class view for all registration steps views. Inherit from this to get access to the <see cref="P:IdApp.Pages.Registration.RegistrationStepView.StepCompletedCommand"/>.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.RegistrationStepView.StepCompletedCommandProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.RegistrationStepView.StepCompletedCommand"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepView.StepCompletedCommand">
            <summary>
            The command to bind to for signaling to listeners that this step has completed.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.RegistrationStepViewModel">
            <summary>
            A base class for all view models that handle any part of the registration flow.
            </summary>
        </member>
        <member name="E:IdApp.Pages.Registration.RegistrationStepViewModel.StepCompleted">
            <summary>
            An event that fires whenever the <see cref="P:IdApp.Pages.Registration.RegistrationStepViewModel.Step"/> property changes.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepViewModel.#ctor(IdApp.Services.Tag.RegistrationStep)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityViewModel"/> class.
            </summary>
            <param name="step">The current step for this instance.</param>
        </member>
        <member name="F:IdApp.Pages.Registration.RegistrationStepViewModel.TitleProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.RegistrationStepViewModel.Title"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepViewModel.Title">
            <summary>
            The title to display on the page or view rendering this view model.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.RegistrationStepViewModel.Step">
            <summary>
            The current step for this view model instance.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepViewModel.OnAppearing">
            <summary>
            Method called when view is appearing on the screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepViewModel.OnStepCompleted(System.EventArgs)">
            <summary>
            Call this method to fire the <see cref="E:IdApp.Pages.Registration.RegistrationStepViewModel.StepCompleted"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepViewModel.ClearStepState">
            <summary>
            Invoked whenever a registration step needs to be reverted, therefore wiping all persisted UI state.
            Override this to clear any settings for the specific step view model.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepViewModel.DoAssignProperties">
            <summary>
            Override this method to do view model specific of setting the default properties values.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.RegistrationStepViewModel.BeginInvokeSetIsDone(System.Windows.Input.ICommand[])">
            <summary>
            A helper method for asynchronously setting this registration step to Done, and also calling
            <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> on the list of commands passed in.
            </summary>
            <param name="commands">The commands to re-evaluate.</param>
        </member>
        <member name="T:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoView">
            <summary>
            A view to display the 'choose operator' during the registration process.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoView"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ValidateContactInfo.PurposeUse">
            <summary>
            For what purpose the app will be used
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.PurposeUse.WorkOrPersonal">
            <summary>
            For work or personal use
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.PurposeUse.EducationalOrExperimental">
            <summary>
            For educational or experimental use
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel">
            <summary>
            The view model to bind to when showing Step 1 of the registration flow: choosing an operator.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.OnInitialize">
            <summary>
            Override this method to do view model specific setup when it's parent page/view appears on screen.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.DoAssignProperties">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.OnStepCompleted(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.IsRevalidatingProperty">
            <summary>
            A BindableProperty for <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.IsRevalidating"/> property.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.IsRevalidating">
            <summary>
            Gets or sets a value indicating if we are validating contact information for the first time or after revoking an identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.Purposes">
            <summary>
            Holds the list of purposes to display.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PurposeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.Purpose"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.Purpose">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PurposeRequiredProperty">
            <summary>
            A BindableProperty for <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PurposeRequired"/> property.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PurposeRequired">
            <summary>
            Gets or sets a value indicating if the user needs to provide a purpose.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.ValidationAllowedProperty">
            <summary>
            A BindableProperty for <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.ValidationAllowed"/> property.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.ValidationAllowed">
            <summary>
            Gets or sets a value indicating if the user is allowed to validate their contact information at the moment
            (or needs to provide a purpose first).
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.CountEmailSecondsProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.CountEmailSeconds"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.CountEmailSeconds">
            <summary>
            how long the email button will stay disabled
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.CountPhoneSecondsProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.CountPhoneSeconds"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.CountPhoneSeconds">
            <summary>
            how long the phone button will stay disabled
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMail"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMail">
            <summary>
            e-mail
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNumberProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNumber">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailValidatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailValidated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailValidated">
            <summary>
            If Phone number is valid or not
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNrValidatedProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNrValidated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNrValidated">
            <summary>
            If Phone number is valid or not
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailVerificationCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailVerificationCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EMailVerificationCode">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNrVerificationCodeProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNrVerificationCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneNrVerificationCode">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EmailButtonEnabled">
            <summary>
            If send e-mail code button is disabled or not
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneButtonEnabled">
            <summary>
            If send code Phone button is disabled or not
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.EmailButtonLabel">
            <summary>
            The label of the SendEMailCodeButton
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.PhoneButtonLabel">
            <summary>
            The label of the SendPhoneNrCodeButton
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.VerifyEmailCodeButtonEnabled">
            <summary>
            If Phone number is valid or not
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.VerifyPhoneCodeButtonEnabled">
            <summary>
            If Phone number is valid or not
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.VerifyEmailCodeButtonLabel">
            <summary>
            The label of the VerifyEMailCodeButton
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.VerifyPhoneCodeButtonLabel">
            <summary>
            The label of the VerifyPhoneNrCodeButton
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.SendAndVerifyEMailCodeCommand">
            <summary>
            The command to bind to for sending and verification a code to the provided e-mail address.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.SendEMailCodeCommand">
            <summary>
            The command to bind to for sending a code to the provided e-mail address.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.VerifyEMailCodeCommand">
            <summary>
            The command to bind to for sending an e-mail code verification request.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.SendPhoneNrCodeCommand">
            <summary>
            The command to bind to for sending and verification a code to the provided phone number.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.SendAndVerifyPhoneNrCodeCommand">
            <summary>
            The command to bind to for sending a code to the provided phone number.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateContactInfo.ValidateContactInfoViewModel.VerifyPhoneNrCodeCommand">
            <summary>
            The command to bind to for sending a phone message code verification request.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ValidateIdentity.RequestFromPeer">
            <summary>
            Represents representing a peer review from a peer, by scanning their QR-code.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateIdentity.RequestFromPeer.#ctor">
            <summary>
            Represents representing a peer review from a peer, by scanning their QR-code.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityView">
            <summary>
            A view to display the 'validate identity' during the registration process.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityView"/> class.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel">
            <summary>
            The view model to bind to when showing Step 4 of the registration flow: validating an identity.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.OnInitialize">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.OnDispose">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.DoAssignProperties">
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Photos">
            <summary>
            The list of photos associated with this legal identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.RequestReviewCommand">
            <summary>
            The command to bind to for requesting a review of the user's identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ContinueCommand">
            <summary>
            The command to bind to for continuing to the next step in the registration process.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.CreatedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Created"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Created">
            <summary>
            Gets or sets the Created time stamp of the legal identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.UpdatedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Updated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Updated">
            <summary>
            Gets or sets the Updated time stamp of the legal identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LegalIdProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LegalId"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LegalId">
            <summary>
            Gets or sets the Id of the legal identity.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LegalIdentity">
            <summary>
            Gets or sets the legal identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.BareJidProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.BareJid"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.BareJid">
            <summary>
            Gets or sets the Bare Jid registered with the XMPP server.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.StateProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.State"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.State">
            <summary>
            The current state of the user's legal identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.FromProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.From"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.From">
            <summary>
            Gets or sets the From time stamp (validity range) of the user's identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ToProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.To"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.To">
            <summary>
            Gets or sets the To time stamp (validity range) of the user's identity.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.FirstNameProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.FirstName"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.FirstName">
            <summary>
            The user's first name
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.MiddleNamesProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.MiddleNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.MiddleNames">
            <summary>
            The user's middle name(s)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LastNamesProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LastNames"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.LastNames">
            <summary>
            The user's last name(s)
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.PersonalNumberProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.PersonalNumber"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.PersonalNumber">
            <summary>
            The user's personal number
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.AddressProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Address"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Address">
            <summary>
            The user's address, line 1.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Address2Property">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Address2"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Address2">
            <summary>
            The user's address, line 2.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ZipCodeProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ZipCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ZipCode">
            <summary>
            The user's zip code
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.AreaProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Area"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Area">
            <summary>
            The user's area
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.CityProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.City"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.City">
            <summary>
            The user's city
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.RegionProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Region"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Region">
            <summary>
            The user's region
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.CountryProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Country"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.Country">
            <summary>
            Gets or sets the user's country.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.CountryCodeProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.CountryCode"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.CountryCode">
            <summary>
            Gets or sets the user's country.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.PhoneNrProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.PhoneNr"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.PhoneNr">
            <summary>
            Gets or sets the user's country.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.EMailProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.EMail"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.EMail">
            <summary>
            Gets or sets the user's country.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsApprovedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsApproved"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsApproved">
            <summary>
            Gets or sets if the user's identity is approved or not.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsCreatedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsCreated"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsCreated">
            <summary>
            Gets or sets if the user's identity has been created.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsConnectedProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsConnected"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.IsConnected">
            <summary>
            Gets or sets if the app is connected to an XMPP server.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ConnectionStateTextProperty">
            <summary>
            The <see cref="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ConnectionStateText"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Registration.ValidateIdentity.ValidateIdentityViewModel.ConnectionStateText">
            <summary>
            The user friendly connection state text to display to the user.
            </summary>
        </member>
        <member name="T:IdApp.Pages.ShellBasePage">
            <summary>
            A base class for <see cref="T:Xamarin.Forms.Shell"/> pages. This class provides easy, typed, access to the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> as a view model.
            It also handles safe area insets for iOS when the phone has a 'rabbit ear' display.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ShellBasePage.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.ShellBasePage"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Pages.ShellBasePage.ViewModel">
            <summary>
            Typed convenience property for accessing the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> property as a view model.
            </summary>
        </member>
        <member name="M:IdApp.Pages.ShellBasePage.GetViewModel``1">
            <summary>
            Returns the viewmodel, type cast to the proper type.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <returns>View model</returns>
        </member>
        <member name="M:IdApp.Pages.ShellBasePage.OnAppearing">
            Due to a bug in Xamarin Forms (https://github.com/xamarin/xamarin.forms/issues/6486)
            these two methods aren't called at startup for now. But we're leaving the methods here for the future.
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.ShellBasePage.OnDisappearing">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel">
            <summary>
            Service Provider information model, including related notification information.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.#ctor(Waher.Networking.XMPP.Contracts.IServiceProvider)">
            <summary>
            Contact Information model, including related notification information.
            </summary>
            <param name="ServiceProvider">Contact information.</param>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.ServiceProvider">
            <summary>
            Underlying service provider
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.Id">
            <summary>
            Service ID
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.Name">
            <summary>
            Displayable name
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.HasIcon">
            <summary>
            If service provider has an icon
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.IconUrl">
            <summary>
            Icon URL
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.ShowImage">
            <summary>
            If an image should be displayed.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.ShowText">
            <summary>
            If text should be displayed.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.IconUrlSource">
            <summary>
            Icon URL Source
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.IconWidth">
            <summary>
            Icon Width
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProviderModel.IconHeight">
            <summary>
            Icon Height
            </summary>
        </member>
        <member name="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel">
            <summary>
            The view model to bind to for when displaying a list of service providers.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.#ctor">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.#ctor(IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs)">
            <summary>
            Creates an instance of the <see cref="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel"/> class.
            </summary>
            <param name="e">Navigation arguments.</param>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.TitleProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.Title"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.Title">
            <summary>
            Title to show the user.
            </summary>
        </member>
        <member name="F:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.DescriptionProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.Description"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.Description">
            <summary>
            Description to show the user.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.ServiceProviders">
            <summary>
            Holds a list of service providers
            </summary>
        </member>
        <member name="F:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.SelectedServiceProviderProperty">
            <summary>
            See <see cref="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.SelectedServiceProvider"/>
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.SelectedServiceProvider">
            <summary>
            The currently selected contact, if any.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersViewModel.BackCommand">
            <summary>
            The command to bind to for returning to previous view.
            </summary>
        </member>
        <member name="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs">
            <summary>
            Holds navigation parameters specific to the eDaler wallet.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.#ctor(Waher.Networking.XMPP.Contracts.IServiceProvider[],System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs"/> class.
            </summary>
            <param name="ServiceProviders">Service Providers</param>
            <param name="Title">Title to show the user.</param>
            <param name="Description">Descriptive text to show the user.</param>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.ServiceProviders">
            <summary>
            Available service providers.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.Title">
            <summary>
            Title to show the user.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.Description">
            <summary>
            Descriptive text to show the user.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.Selected">
            <summary>
            Task completion source, waiting for a response from the user.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs.WaitForServiceProviderSelection">
            <summary>
            Waits for the service provider to be selected; null is returned if the user goes back.
            </summary>
            <returns>Selected service provider, or null if user cancels, by going back.</returns>
        </member>
        <member name="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersPage">
            <summary>
            A page that allows the user to view its tokens.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersPage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersPage"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersPage.#ctor(IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersNavigationArgs)">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Pages.Wallet.ServiceProviders.ServiceProvidersPage"/> class.
            </summary>
            <param name="e">Navigation arguments.</param>
        </member>
        <member name="T:IdApp.Pages.Wallet.ServiceProviders.ServiceTemplateSelector">
            <summary>
            Data Template Selector, based on Service information.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceTemplateSelector.ImageOnlyTemplate">
            <summary>
            Template for services that will only display an image.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceTemplateSelector.TextOnlyTemplate">
            <summary>
            Template for services that will only display text.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceTemplateSelector.ImageAndTextTemplate">
            <summary>
            Template for services that will display both image and texts.
            </summary>
        </member>
        <member name="P:IdApp.Pages.Wallet.ServiceProviders.ServiceTemplateSelector.DefaultTemplate">
            <summary>
            Template to use for other items.
            </summary>
        </member>
        <member name="M:IdApp.Pages.Wallet.ServiceProviders.ServiceTemplateSelector.OnSelectTemplate(System.Object,Xamarin.Forms.BindableObject)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Pages.XmppViewModel">
            <summary>
            A view model that holds the XMPP state.
            </summary>
        </member>
        <member name="M:IdApp.Pages.XmppViewModel.#ctor">
            <summary>
            Creates an instance of a <see cref="T:IdApp.Pages.XmppViewModel"/>.
            </summary>
        </member>
        <member name="M:IdApp.Pages.XmppViewModel.OnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Pages.XmppViewModel.OnDispose">
            <inheritdoc/>
        </member>
        <member name="F:IdApp.Pages.XmppViewModel.ConnectionStateTextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IdApp.Pages.XmppViewModel.ConnectionStateText">
            <summary>
            Gets the current connection state as a user friendly localized string.
            </summary>
        </member>
        <member name="F:IdApp.Pages.XmppViewModel.ConnectionStateColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IdApp.Pages.XmppViewModel.ConnectionStateColor">
            <summary>
            Gets the current connection state as a color.
            </summary>
        </member>
        <member name="F:IdApp.Pages.XmppViewModel.StateSummaryTextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IdApp.Pages.XmppViewModel.StateSummaryText">
            <summary>
            Gets the current state summary as a user friendly localized string.
            </summary>
        </member>
        <member name="F:IdApp.Pages.XmppViewModel.IsConnectedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IdApp.Pages.XmppViewModel.IsConnected">
            <summary>
            Gets whether the view model is connected to an XMPP server.
            </summary>
        </member>
        <member name="M:IdApp.Pages.XmppViewModel.SetConnectionStateAndText(Waher.Networking.XMPP.XmppState)">
            <summary>
            Sets both the connection state and connection text to the appropriate value.
            </summary>
            <param name="state">The current state.</param>
        </member>
        <member name="M:IdApp.Pages.XmppViewModel.XmppService_ConnectionStateChanged(System.Object,Waher.Networking.XMPP.XmppState)">
            <summary>
            Listens to connection state changes from the XMPP server.
            </summary>
            <param name="_">The XMPP service instance.</param>
            <param name="NewState">New XMPP State.</param>
        </member>
        <member name="T:IdApp.Popups.Photos.Image.ImageView">
            <summary>
            A generic UI component to display an image.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Popups.Photos.Image.ImageView"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageView.ShowPhotos(Waher.Networking.XMPP.Contracts.Attachment[])">
            <summary>
            Shows the attachments photos in the current view.
            </summary>
            <param name="attachments">The attachments to show.</param>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageView.HidePhotos">
            <summary>
            Hides the photos from view.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageView.PhotosAreShowing">
            <summary>
            Gets if photos are showing or not.
            </summary>
            <returns>If photos are showing</returns>
        </member>
        <member name="T:IdApp.Popups.Photos.Image.ImageViewModel">
            <summary>
             The class to use as binding context for displaying images.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageViewModel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Popups.Photos.Image.ImageViewModel"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Popups.Photos.Image.ImageViewModel.Photos">
            <summary>
            Holds the list of photos to display.
            </summary>
        </member>
        <member name="F:IdApp.Popups.Photos.Image.ImageViewModel.IsSwipeEnabledProperty">
            <summary>
            See <see cref="P:IdApp.Popups.Photos.Image.ImageViewModel.IsSwipeEnabled"/>
            </summary>
        </member>
        <member name="P:IdApp.Popups.Photos.Image.ImageViewModel.IsSwipeEnabled">
            <summary>
            Gets or sets whether a user can swipe to see the photos.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageViewModel.LoadPhotos(Waher.Networking.XMPP.Contracts.Attachment[])">
            <summary>
            Loads the attachments photos, if there are any.
            </summary>
            <param name="attachments">The attachments to load.</param>
        </member>
        <member name="M:IdApp.Popups.Photos.Image.ImageViewModel.ClearPhotos">
            <summary>
            Clears the currently displayed photos.
            </summary>
        </member>
        <member name="T:IdApp.Popups.Pin.ChangePin.ChangePinPopupPage">
            <summary>
            ChangePinPopupPage defines a popup which prompts the user for their PIN.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Pin.ChangePin.ChangePinPopupPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdApp.Popups.Pin.ChangePin.ChangePinPopupPage"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Popups.Pin.ChangePin.ChangePinPopupPage.Result">
            <summary>
            A <see cref="T:System.Threading.Tasks.Task"/> waiting for the result. <c>(null, null)</c> means the dialog was closed without providing a PIN.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Pin.ChangePin.ChangePinPopupPage.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Popups.Pin.ChangePin.ChangePinPopupPage.OnBackgroundClicked">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Popups.Pin.PinPopup.PinPopupPage">
            <summary>
            Prompts the user for its PIN
            </summary>
        </member>
        <member name="P:IdApp.Popups.Pin.PinPopup.PinPopupPage.Result">
            <summary>
            Task waiting for result. null means dialog was closed without providing a PIN.
            </summary>
        </member>
        <member name="M:IdApp.Popups.Pin.PinPopup.PinPopupPage.#ctor">
            <summary>
            Prompts the user for its PIN
            </summary>
        </member>
        <member name="M:IdApp.Popups.Pin.PinPopup.PinPopupPage.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Popups.Pin.PinPopup.PinPopupPage.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Popups.VerifyCode.VerifyCodePage">
            <summary>
            Prompts the user for its PIN
            </summary>
        </member>
        <member name="P:IdApp.Popups.VerifyCode.VerifyCodePage.Result">
            <summary>
            Task waiting for result. null means dialog was closed without providing a CODE.
            </summary>
        </member>
        <member name="M:IdApp.Popups.VerifyCode.VerifyCodePage.#ctor(System.String)">
            <summary>
            Prompts the user for its CODE
            </summary>
        </member>
        <member name="M:IdApp.Popups.VerifyCode.VerifyCodePage.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Popups.VerifyCode.VerifyCodePage.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Resx.AppResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.About">
            <summary>
              Looks up a localized string similar to About the app.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Abuse">
            <summary>
              Looks up a localized string similar to Abuse.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Accept">
            <summary>
              Looks up a localized string similar to Accept.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccessRequest">
            <summary>
              Looks up a localized string similar to Access Request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccessRequestText">
            <summary>
              Looks up a localized string similar to {0} wants to connect to your device {1}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccessRequestText2">
            <summary>
              Looks up a localized string similar to A caller has requested access to one of your things. Select how you wish the thing should respond to this type of request..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Account">
            <summary>
              Looks up a localized string similar to Account.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccountEvent">
            <summary>
              Looks up a localized string similar to Account Event.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccountEventDescription">
            <summary>
              Looks up a localized string similar to Below you can see information about a single account event..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccountNameAlreadyTaken">
            <summary>
              Looks up a localized string similar to Account name {0} is already taken. Choose another..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AccountNameIsInvalid">
            <summary>
              Looks up a localized string similar to Account name is invalid.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Actions">
            <summary>
              Looks up a localized string similar to Actions.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Add">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AddContact">
            <summary>
              Looks up a localized string similar to Add Contact.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AddContactToContract">
            <summary>
              Looks up a localized string similar to Add Contact to Contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AddNote">
            <summary>
              Looks up a localized string similar to Add Note.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AddPart">
            <summary>
              Looks up a localized string similar to Add part.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Address">
            <summary>
              Looks up a localized string similar to Address.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Address2">
            <summary>
              Looks up a localized string similar to Address (row 2).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AddToList">
            <summary>
              Looks up a localized string similar to Add to list.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Altitude">
            <summary>
              Looks up a localized string similar to Altitude.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Amount">
            <summary>
              Looks up a localized string similar to Amount:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AmountExtra">
            <summary>
              Looks up a localized string similar to Amount Extra: (optional, suggestion).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AndroidApp">
            <summary>
              Looks up a localized string similar to Android App.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Anonymous">
            <summary>
              Looks up a localized string similar to Anonymous.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Apartment">
            <summary>
              Looks up a localized string similar to Apartment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.APeerReviewYouhaveRequestedHasBeenAccepted">
            <summary>
              Looks up a localized string similar to A peer review you requested has been accepted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.APeerYouRequestedToReviewHasBeenRejectedDueToSignatureError">
            <summary>
              Looks up a localized string similar to A peer review you requested has been rejected, due to a signature error..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.APeerYouRequestedToReviewHasRejected">
            <summary>
              Looks up a localized string similar to A peer you requested to review your application, has rejected to approve it..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.APetitionHasBeenSentToTheContract">
            <summary>
              Looks up a localized string similar to A petition has been sent to the parts of the contract. If any of the parts accepts the petition, the contract information will be displayed on the screen..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.APetitionHasBeenSentToTheOwner">
            <summary>
              Looks up a localized string similar to A petition has been sent to the owner of the identity. If the owner accepts the petition, the identity information will be displayed on the screen..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.APetitionHasBeenSentToYourPeer">
            <summary>
              Looks up a localized string similar to A petition has been sent to your peer.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AppNotConnected">
            <summary>
              Looks up a localized string similar to App is not connected to the network..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ApproveInformation">
            <summary>
              Looks up a localized string similar to Approve Information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Archiving_Optional">
            <summary>
              Looks up a localized string similar to Archiving (optional).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Archiving_Required">
            <summary>
              Looks up a localized string similar to Archiving (required).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AreYouSureYouWantToRemoveContact">
            <summary>
              Looks up a localized string similar to Are you sure you want to remove this contact from your list of contacts?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AreYouSureYouWantToReportYourLegalIdentityAsCompromized">
            <summary>
              Looks up a localized string similar to Are you sure you want to report your legal identity as compromised, stolen or hacked?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AreYouSureYouWantToRevokeYourLegalIdentity">
            <summary>
              Looks up a localized string similar to Are you sure you want to revoke your legal identity from the application?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.AreYouSureYouWantToTransferYourLegalIdentity">
            <summary>
              Looks up a localized string similar to Are you sure you want to transfer your legal identity from the application to another? The identity will be removed from this device once completed. Also make sure no-one else can see your screen during the process..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Assessor">
            <summary>
              Looks up a localized string similar to Assessor.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Balance">
            <summary>
              Looks up a localized string similar to Balance:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.BalanceUpdated">
            <summary>
              Looks up a localized string similar to Balance updated..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Block">
            <summary>
              Looks up a localized string similar to Block.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Building">
            <summary>
              Looks up a localized string similar to Building.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Buy">
            <summary>
              Looks up a localized string similar to Buy.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.BuyEDaler">
            <summary>
              Looks up a localized string similar to Buy eDaler..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.BuyEDalerDescription">
            <summary>
              Looks up a localized string similar to Provide the amount of eDaler do you want to buy below, and press the Buy button. A web page may be opened where you have to fill in further information for the payment processor to validate your requst..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CalculationError">
            <summary>
              Looks up a localized string similar to Unable to perform calculation..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Calculator">
            <summary>
              Looks up a localized string similar to Calculator.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Caller">
            <summary>
              Looks up a localized string similar to Caller.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CallerAddress">
            <summary>
              Looks up a localized string similar to Caller Address.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CallerOnly">
            <summary>
              Looks up a localized string similar to Caller Only.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CanActAsTemplate">
            <summary>
              Looks up a localized string similar to Can act as template.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CantConnectTo">
            <summary>
              Looks up a localized string similar to Can&apos;t connect to {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Category">
            <summary>
              Looks up a localized string similar to Category.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Certifier">
            <summary>
              Looks up a localized string similar to Certifier.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CertifierCanDestroy">
            <summary>
              Looks up a localized string similar to Certifier can destroy token.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CertifierJid">
            <summary>
              Looks up a localized string similar to Certifier Address.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Change">
            <summary>
              Looks up a localized string similar to Change:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ChangePin">
            <summary>
              Looks up a localized string similar to Change PIN.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Chat">
            <summary>
              Looks up a localized string similar to Chat.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ChatMessageReceived">
            <summary>
              Looks up a localized string similar to Chat Message Received.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ChooseAccount">
            <summary>
              Looks up a localized string similar to Choose account.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.City">
            <summary>
              Looks up a localized string similar to City.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClaimInvitation">
            <summary>
              Looks up a localized string similar to Claim Invitation.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClaimThing">
            <summary>
              Looks up a localized string similar to Claim Thing.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Class">
            <summary>
              Looks up a localized string similar to Class.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageAuthenticationTimeout">
            <summary>
              Looks up a localized string similar to Response not returned within configured time..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageCountryCodeMismatch">
            <summary>
              Looks up a localized string similar to Country Code does not match..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageCountryCodeNotVerified">
            <summary>
              Looks up a localized string similar to Country code not verified..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageFirstNameNotVerified">
            <summary>
              Looks up a localized string similar to First name not verified..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageLastNameNotVerified">
            <summary>
              Looks up a localized string similar to Last name not verified..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageNotValid">
            <summary>
              Looks up a localized string similar to Identity not valid..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessagePersonalNumberMismatch">
            <summary>
              Looks up a localized string similar to Personal Number does not match..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessagePersonalNumberNotVerified">
            <summary>
              Looks up a localized string similar to Personal number not verified..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageReferenceMismatch">
            <summary>
              Looks up a localized string similar to Returned reference did not match request reference..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageUnexpectedDocumentInformation">
            <summary>
              Looks up a localized string similar to Document information not returned as expected..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageUnexpectedEventResult">
            <summary>
              Looks up a localized string similar to Event result not returned as expected..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientMessageUnexpectedResult">
            <summary>
              Looks up a localized string similar to Unexpected response returned..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientSignature">
            <summary>
              Looks up a localized string similar to Client Signature.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientSignatureInformationInfoText">
            <summary>
              Looks up a localized string similar to The following is information related to a client signature..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientSignatures">
            <summary>
              Looks up a localized string similar to Client Signatures.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ClientSignaturesInfoText">
            <summary>
              Looks up a localized string similar to Cryptographic signatures made by different parts are listed below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CodeNotRecognized">
            <summary>
              Looks up a localized string similar to Code not recognized..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ComputedValues">
            <summary>
              Looks up a localized string similar to Computed Values.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ConcentratorServiceNotFound">
            <summary>
              Looks up a localized string similar to No concentrator service found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Confirm">
            <summary>
              Looks up a localized string similar to Confirm.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ConfirmByEnteringYourPin">
            <summary>
              Looks up a localized string similar to Confirm by entering your PIN number..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Connect">
            <summary>
              Looks up a localized string similar to Connect.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Connection">
            <summary>
              Looks up a localized string similar to Connection.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ConnectToDevice">
            <summary>
              Looks up a localized string similar to Connect to Device.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Contact">
            <summary>
              Looks up a localized string similar to Contact.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContactInformation">
            <summary>
              Looks up a localized string similar to Contact Information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Contacts">
            <summary>
              Looks up a localized string similar to Contacts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContactsDescription">
            <summary>
              Looks up a localized string similar to Below are all contacts in your contact book. Click on any to interact with that contact..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Continue">
            <summary>
              Looks up a localized string similar to Continue.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContinueAnyway">
            <summary>
              Looks up a localized string similar to Continue anyway.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractCreated">
            <summary>
              Looks up a localized string similar to A contract has been created..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractDeleted">
            <summary>
              Looks up a localized string similar to A contract has been deleted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractHasBeenDeleted">
            <summary>
              Looks up a localized string similar to Contract has been deleted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractHasBeenObsoleted">
            <summary>
              Looks up a localized string similar to Contract has been obsoleted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractId">
            <summary>
              Looks up a localized string similar to Contract ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractProposal">
            <summary>
              Looks up a localized string similar to Contract proposal.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractProposed">
            <summary>
              Looks up a localized string similar to A contract has been proposed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractResponse">
            <summary>
              Looks up a localized string similar to Response to contract request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractRoleMustBeSelected">
            <summary>
              Looks up a localized string similar to Select contract role first, and then try again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Contracts">
            <summary>
              Looks up a localized string similar to Contracts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractSignatureReceived">
            <summary>
              Looks up a localized string similar to Contract signature received.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractSigned">
            <summary>
              Looks up a localized string similar to A contract has been signed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractsInfoText">
            <summary>
              Looks up a localized string similar to Below is a list of contracts that you have created or signed. Click on a contract for more information about it..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractSuccessfullySigned">
            <summary>
              Looks up a localized string similar to Contract successfully signed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractTemplates">
            <summary>
              Looks up a localized string similar to Contract Templates.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractTemplatesInfoText">
            <summary>
              Looks up a localized string similar to Below is a list of contract templates that you have used. Click on a template to create a new contract based on that template..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractUpdated">
            <summary>
              Looks up a localized string similar to A contract has been updated..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractUpdateReceived">
            <summary>
              Looks up a localized string similar to Contract updated.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractVisibility_CreatorAndParts">
            <summary>
              Looks up a localized string similar to Creator and parts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractVisibility_DomainAndParts">
            <summary>
              Looks up a localized string similar to Domain and parts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractVisibility_Public">
            <summary>
              Looks up a localized string similar to Public, not searchable.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractVisibility_PublicSearchable">
            <summary>
              Looks up a localized string similar to Public and searchable.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ContractVisibilityMustBeSelected">
            <summary>
              Looks up a localized string similar to Select contract visibility first, and then try again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ControlActuator">
            <summary>
              Looks up a localized string similar to Control Actuator.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ControlRequest">
            <summary>
              Looks up a localized string similar to Control Request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ControlRequestText">
            <summary>
              Looks up a localized string similar to {0} wants to control parameters on your device {1}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ControlRequestText2">
            <summary>
              Looks up a localized string similar to A caller has requested to control one of your things. Select how you wish the thing should respond to this type of request..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ControlServiceNotFound">
            <summary>
              Looks up a localized string similar to No control service found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CopyToClipboard">
            <summary>
              Looks up a localized string similar to Copy to clipboard.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CouldYouPleaseReviewMyIdentityInformation">
            <summary>
              Looks up a localized string similar to Could you please review my identity information?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Country">
            <summary>
              Looks up a localized string similar to Country.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Create">
            <summary>
              Looks up a localized string similar to Create.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CreateAccount">
            <summary>
              Looks up a localized string similar to Create Account.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Created">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CreateNew">
            <summary>
              Looks up a localized string similar to Create new.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CreationContract">
            <summary>
              Looks up a localized string similar to Creation Contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Creator">
            <summary>
              Looks up a localized string similar to Creator.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CreatorCanDestroy">
            <summary>
              Looks up a localized string similar to Creator can destroy token.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CreatorJid">
            <summary>
              Looks up a localized string similar to Creator Address.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CurrentState">
            <summary>
              Looks up a localized string similar to Current State.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.CurrentVariables">
            <summary>
              Looks up a localized string similar to Current Variables.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Custom">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DatabaseCorruptInfoText">
            <summary>
              Looks up a localized string similar to It seems like the database hasn&apos;t been closed correctly, and may therefore be damaged. An attempt can be made to repair the database by first wiping it. How would you like to proceed?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DatabaseIssue">
            <summary>
              Looks up a localized string similar to Database issue.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DatabaseRepairFailedInfoText">
            <summary>
              Looks up a localized string similar to Database repair failed. We&apos;re out of options now, so continue at your own risk..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Decline">
            <summary>
              Looks up a localized string similar to Decline.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DefinePin">
            <summary>
              Looks up a localized string similar to Define PIN.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DefinitionNamespace">
            <summary>
              Looks up a localized string similar to Definition namespace.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DefinitionSchemaDigest">
            <summary>
              Looks up a localized string similar to Definition schema digest.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DeleteContract">
            <summary>
              Looks up a localized string similar to Delete contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DeleteRules">
            <summary>
              Looks up a localized string similar to Delete Rules.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DeleteRulesQuestion">
            <summary>
              Looks up a localized string similar to Do you want to delete all provisioning rules for the thing? By doing so, the thing will ask you again for all new events to learn what it is authorized to do..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Description">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Destroyed">
            <summary>
              Looks up a localized string similar to Destroyed.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Device">
            <summary>
              Looks up a localized string similar to Device.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Devices">
            <summary>
              Looks up a localized string similar to Devices.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Digest">
            <summary>
              Looks up a localized string similar to Digest.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DisabledFor">
            <summary>
              Looks up a localized string similar to DISABLED FOR {0} SECONDS.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DisconnectFromDevice">
            <summary>
              Looks up a localized string similar to Disconnect from Device.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DisownThing">
            <summary>
              Looks up a localized string similar to Disown Thing.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DisownThingQuestion">
            <summary>
              Looks up a localized string similar to Do you want to disown the thing? This will remove the thing from your list of things, and will permit another to claim the device as theirs..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DomainDoesNotFollowEncryptionPolicy">
            <summary>
              Looks up a localized string similar to {0} does not follow the ubiquitous encryption policy.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DomainIsNotAValidOperator">
            <summary>
              Looks up a localized string similar to {0} is not a valid operator.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.DomainNameIsInvalid">
            <summary>
              Looks up a localized string similar to Domain name is invalid.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Duration">
            <summary>
              Looks up a localized string similar to Duration.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EDalerNote">
            <summary>
              Looks up a localized string similar to eDaler Note.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EDalerNoteDescription">
            <summary>
              Looks up a localized string similar to The code represents an eDaler note. You can accept it by pressing the Accept button below. If it has not been accepted before, your wallet will receive the amount of eDaler specified on the note..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EDalerServiceNotFound">
            <summary>
              Looks up a localized string similar to No eDaler service found on broker..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EncryptMessage">
            <summary>
              Looks up a localized string similar to Encrypt message.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Enter">
            <summary>
              Looks up a localized string similar to Enter.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterEMail">
            <summary>
              Looks up a localized string similar to e-Mail.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterNewPin">
            <summary>
              Looks up a localized string similar to Enter New PIN.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterPhoneNumber">
            <summary>
              Looks up a localized string similar to Phone Number.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterPin">
            <summary>
              Looks up a localized string similar to Enter PIN.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterProposal">
            <summary>
              Looks up a localized string similar to Enter the text to include in the proposal to {0}, or leave blank if a proposal should not be sent..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterValidValue">
            <summary>
              Looks up a localized string similar to Enter a valid value first..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EnterValue">
            <summary>
              Looks up a localized string similar to You need to enter a value first..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.EntireDomain">
            <summary>
              Looks up a localized string similar to Everyone from {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Errors">
            <summary>
              Looks up a localized string similar to Errors.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ErrorTitle">
            <summary>
              Looks up a localized string similar to An error has occurred.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Everyone">
            <summary>
              Looks up a localized string similar to Everyone.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ExpiredEDalerUri">
            <summary>
              Looks up a localized string similar to This eDaler code has expired..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Expires">
            <summary>
              Looks up a localized string similar to Expires.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ExpiresAt">
            <summary>
              Looks up a localized string similar to (Expires {0}).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToBindViewModelForPage">
            <summary>
              Looks up a localized string similar to Failed to bind viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToClosePage">
            <summary>
              Looks up a localized string similar to Failed to close page.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToLoadPhoto">
            <summary>
              Looks up a localized string similar to Failed to load photo.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToNavigateToPage">
            <summary>
              Looks up a localized string similar to Failed to navigate to page {0}  {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToRestoreViewModelStateForPage">
            <summary>
              Looks up a localized string similar to Failed to restore state for viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToSaveViewModelStateForPage">
            <summary>
              Looks up a localized string similar to Failed to save state for viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FailedToUnbindViewModelForPage">
            <summary>
              Looks up a localized string similar to Failed to unbind viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Fields">
            <summary>
              Looks up a localized string similar to Fields.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FieldTypes">
            <summary>
              Looks up a localized string similar to Field Types.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FileUploadServiceNotFound">
            <summary>
              Looks up a localized string similar to No file upload service found on broker..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FirstName">
            <summary>
              Looks up a localized string similar to First name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ForInclusionInContract">
            <summary>
              Looks up a localized string similar to For inclusion as part in a contract..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FriendlyName">
            <summary>
              Looks up a localized string similar to Friendly Name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.From">
            <summary>
              Looks up a localized string similar to From.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FromUser">
            <summary>
              Looks up a localized string similar to From User.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FurtherAction">
            <summary>
              Looks up a localized string similar to Further Action?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FurtherAction1">
            <summary>
              Looks up a localized string similar to Would you like to take any further action against:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FurtherAction2">
            <summary>
              Looks up a localized string similar to You can choose to block the address..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FurtherAction3">
            <summary>
              Looks up a localized string similar to This will make sure you don&apos;t receive more subscription requests from the sender..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.FurtherAction4">
            <summary>
              Looks up a localized string similar to You can also choose to report the sender to your operator..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.GeneralInformation">
            <summary>
              Looks up a localized string similar to General Information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.GeneralInformationInfoText">
            <summary>
              Looks up a localized string similar to Following is some general information about the contract..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.GenerateQrCode">
            <summary>
              Looks up a localized string similar to Generate QR Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.HashFunction">
            <summary>
              Looks up a localized string similar to Hash Function.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.HistoricalValues">
            <summary>
              Looks up a localized string similar to Historical Values.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.History">
            <summary>
              Looks up a localized string similar to History.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Home">
            <summary>
              Looks up a localized string similar to Home.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.HumanReadableText">
            <summary>
              Looks up a localized string similar to Human readable text.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IApproveOfMyPersonalInformationToBeAssociated">
            <summary>
              Looks up a localized string similar to I approve of my personal information to be associated with the legal identity I am reviewing, for the purposes of transparency..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ID">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdCopiedSuccessfully">
            <summary>
              Looks up a localized string similar to A link to the ID was copied to the clipboard..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Identity">
            <summary>
              Looks up a localized string similar to Identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityInformation">
            <summary>
              Looks up a localized string similar to Identity information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityInformationInfoText">
            <summary>
              Looks up a localized string similar to The following is personal information registered for the party who signed the contract..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityResponse">
            <summary>
              Looks up a localized string similar to Response to identity request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityReviewRequest">
            <summary>
              Looks up a localized string similar to Request to review identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityReviewResponse">
            <summary>
              Looks up a localized string similar to Response to identity review request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityState_Approved">
            <summary>
              Looks up a localized string similar to Approved.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityState_Compromized">
            <summary>
              Looks up a localized string similar to Compromized.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityState_Created">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityState_Obsoleted">
            <summary>
              Looks up a localized string similar to Obsoleted.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityState_Rejected">
            <summary>
              Looks up a localized string similar to Rejected.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityUpdated">
            <summary>
              Looks up a localized string similar to The digital identity has been updated..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IdentityValues">
            <summary>
              Looks up a localized string similar to Identity Values.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Ignore">
            <summary>
              Looks up a localized string similar to Ignore.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IHaveCarefullyReviewedAllInformationAbove">
            <summary>
              Looks up a localized string similar to I have carefully reviewed all information above, and find it to be a correct representation of the person requesting the review:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Incomplete">
            <summary>
              Looks up a localized string similar to Incomplete.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InformationAboutCallerText">
            <summary>
              Looks up a localized string similar to The following information is available about the caller:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InformationAboutClaimedThingText">
            <summary>
              Looks up a localized string similar to The following information is made available about the thing whose code you scanned. Choose if you want to attempt to claim this thing as yours, and also if you want to make it publicly searchable in the Thing Registry..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InformationAboutThing">
            <summary>
              Looks up a localized string similar to Information about thing.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InformationAboutThingText">
            <summary>
              Looks up a localized string similar to The following information is locally available about the thing. Options to interact with the device are presented below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InformationIsMissingOrInvalid">
            <summary>
              Looks up a localized string similar to Information is missing or invalid.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Inspect">
            <summary>
              Looks up a localized string similar to Inspect communication.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidEDalerUri">
            <summary>
              Looks up a localized string similar to Invalid eDaler URI: {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidInvitationCode">
            <summary>
              Looks up a localized string similar to Invalid invitation code..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidIoTDiscoClaimUri">
            <summary>
              Looks up a localized string similar to Not a valid iotdisco claim URI..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidIoTDiscoveryCode">
            <summary>
              Looks up a localized string similar to Invalid IoT Discovery Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidNeuroFeatureToken">
            <summary>
              Looks up a localized string similar to Invalid Neuro-Feature token..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidTagSignatureId">
            <summary>
              Looks up a localized string similar to Invalid TAG Signature URI..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvalidUsernameOrPassword">
            <summary>
              Looks up a localized string similar to Invalid username or password.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Invitation">
            <summary>
              Looks up a localized string similar to Invitation.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvitationAccepted">
            <summary>
              Looks up a localized string similar to Invitation accepted.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.InvitedToCreateAccountOnDomain">
            <summary>
              Looks up a localized string similar to You have been invited to create an account on {0}. Press OK, and enter the name of the account you wish to create..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.IosApp">
            <summary>
              Looks up a localized string similar to iOS App.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Key">
            <summary>
              Looks up a localized string similar to Key.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LastNames">
            <summary>
              Looks up a localized string similar to Last name(s).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Latitude">
            <summary>
              Looks up a localized string similar to Latitude.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LegalId">
            <summary>
              Looks up a localized string similar to Legal Id.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LegalIdNotApproved">
            <summary>
              Looks up a localized string similar to Legal ID not approved..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LegalServiceNotFound">
            <summary>
              Looks up a localized string similar to No legal service found on broker..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Link">
            <summary>
              Looks up a localized string similar to Link.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Links">
            <summary>
              Looks up a localized string similar to Links.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LinksText">
            <summary>
              Looks up a localized string similar to By opening any of the links below, a programmable link view is opened. You can use this page to encode NFC tags, or use the QR code to transmit the link to others..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LinkText">
            <summary>
              Looks up a localized string similar to You can scan the link from another app, or write it into an empty NFC tag, by placing the tag behind the phone until you get the corresponding signal..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Loading">
            <summary>
              Looks up a localized string similar to Loading....
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.LocalName">
            <summary>
              Looks up a localized string similar to Local name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Longitude">
            <summary>
              Looks up a localized string similar to Longitude.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MachineHasEnded">
            <summary>
              Looks up a localized string similar to State-Machine has ended..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MachineReadableInfoText">
            <summary>
              Looks up a localized string similar to An overview of the machine-readable data embedded in the contract is shown below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MachineReadableInfoTextToken">
            <summary>
              Looks up a localized string similar to An overview of the machine-readable data embedded in the token is shown below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MachineReadableText">
            <summary>
              Looks up a localized string similar to Machine readable information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MainPageTitle">
            <summary>
              Looks up a localized string similar to My Digital ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MakePayment">
            <summary>
              Looks up a localized string similar to Make Payment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MakeThingPublic">
            <summary>
              Looks up a localized string similar to Make thing public.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Manufacturer">
            <summary>
              Looks up a localized string similar to Manufacturer.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Me">
            <summary>
              Looks up a localized string similar to (me).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Message">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MessageFrom">
            <summary>
              Looks up a localized string similar to Message from:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MessageReceived">
            <summary>
              Looks up a localized string similar to Message received..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MeterLocation">
            <summary>
              Looks up a localized string similar to Meter Location.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MeterNumber">
            <summary>
              Looks up a localized string similar to Meter Number.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MiddleNames">
            <summary>
              Looks up a localized string similar to Middle name(s).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Mode">
            <summary>
              Looks up a localized string similar to Mode.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Model">
            <summary>
              Looks up a localized string similar to Model.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MomentaryValues">
            <summary>
              Looks up a localized string similar to Momentary Values.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MyIdentity">
            <summary>
              Looks up a localized string similar to My Identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.MyTokens">
            <summary>
              Looks up a localized string similar to My Tokens.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Namespace">
            <summary>
              Looks up a localized string similar to Namespace.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Network">
            <summary>
              Looks up a localized string similar to Network.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NetworkAddressOfContactUnknown">
            <summary>
              Looks up a localized string similar to Network address of contact unknown..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NetworkSeemsToBeMissing">
            <summary>
              Looks up a localized string similar to Network seems to be missing. Please check your configuration and coverage and try again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NeuroFeaturesServiceNotFound">
            <summary>
              Looks up a localized string similar to No Neuro-Features service found on broker..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Neuron">
            <summary>
              Looks up a localized string similar to Neuron.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NewContract">
            <summary>
              Looks up a localized string similar to New Contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoContactsFound">
            <summary>
              Looks up a localized string similar to No Contacts Found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoContractsFound">
            <summary>
              Looks up a localized string similar to No contracts found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoJustIgnore">
            <summary>
              Looks up a localized string similar to No, just ignore.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoLegalIdSelected">
            <summary>
              Looks up a localized string similar to No Legal ID selected..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NotAnInvitationCode">
            <summary>
              Looks up a localized string similar to Not an invitation code..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Notary">
            <summary>
              Looks up a localized string similar to Notary.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NotAvailable">
            <summary>
              Looks up a localized string similar to Not Available.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NotConnectedToTheOperator">
            <summary>
              Looks up a localized string similar to Not connected to the operator.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoteCopiedToClipboard">
            <summary>
              Looks up a localized string similar to Note copied to clipboard..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoteIsPersonal">
            <summary>
              Looks up a localized string similar to Note is personal.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoteToAdd">
            <summary>
              Looks up a localized string similar to Note to add:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NoThingsFound">
            <summary>
              Looks up a localized string similar to No Things Found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Notifications">
            <summary>
              Looks up a localized string similar to Notifications.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.NotificationsText">
            <summary>
              Looks up a localized string similar to Below you can see a list of notifications resulting from interactions with the thing. Press on each one to display more information and options available..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ObsoleteContract">
            <summary>
              Looks up a localized string similar to Obsolete contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OfferToBuy">
            <summary>
              Looks up a localized string similar to Offer To Buy.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OfferToSell">
            <summary>
              Looks up a localized string similar to Offer To Sell.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Offline">
            <summary>
              Looks up a localized string similar to Offline.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Ok">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Online">
            <summary>
              Looks up a localized string similar to Online.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Open">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OpenMessageLink">
            <summary>
              Looks up a localized string similar to Open Message Link.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OperatorDoesNotSupportLegalIdentitiesAndSmartContracts">
            <summary>
              Looks up a localized string similar to Operator does not support legal identities and smart contracts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OperatorDoesNotSupportProvisioningAndDecisionSupportForThings">
            <summary>
              Looks up a localized string similar to Operator does not support Provisioning and Decision Support for things.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OperatorDoesNotSupportRegisteringNewAccounts">
            <summary>
              Looks up a localized string similar to The operator {0} does not support registration of new accounts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OperatorDoesNotSupportThingRegistries">
            <summary>
              Looks up a localized string similar to Operator does not support Thing Registries.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OperatorDomainOther">
            <summary>
              Looks up a localized string similar to &lt;Other&gt;.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Options">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Ordinal">
            <summary>
              Looks up a localized string similar to Ordinal.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Other">
            <summary>
              Looks up a localized string similar to Other.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OtherApp">
            <summary>
              Looks up a localized string similar to Other App.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Owner">
            <summary>
              Looks up a localized string similar to Owner.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OwnerCanDestroyBatch">
            <summary>
              Looks up a localized string similar to Owner can destroy token batch.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OwnerCanDestroyIndividual">
            <summary>
              Looks up a localized string similar to Owner can destroy individual token.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OwnerJid">
            <summary>
              Looks up a localized string similar to Owner Address.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.OwnershipContract">
            <summary>
              Looks up a localized string similar to Ownership Contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Parameters">
            <summary>
              Looks up a localized string similar to Parameters.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ParametersInfoText">
            <summary>
              Looks up a localized string similar to Contract parameters are shown below, together with their corresponding values..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Parts">
            <summary>
              Looks up a localized string similar to Parts.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PartsInfoText">
            <summary>
              Looks up a localized string similar to The (expected) parts defined for the contract is listed below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Password">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PasswordIsInvalid">
            <summary>
              Looks up a localized string similar to Password is invalid.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Payment">
            <summary>
              Looks up a localized string similar to Payment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentAcceptance">
            <summary>
              Looks up a localized string similar to Payment Acceptance.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentAcceptanceDescription">
            <summary>
              Looks up a localized string similar to Below you can see the details of the offline payment. If acceptable, you can choose to accept to send the payment to the Neuron for processing..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentAlreadySent">
            <summary>
              Looks up a localized string similar to Payment instruction has already been sent. You can resend pending payments from the pending payment view..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentCancelled">
            <summary>
              Looks up a localized string similar to Payment Cancelled.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentDescription">
            <summary>
              Looks up a localized string similar to Enter the amount to pay to the recipient below. Once done, you can choose to either pay online (if connected) or offline, by clicking on the corresponding button..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentFailed">
            <summary>
              Looks up a localized string similar to Payment Failed.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PaymentSuccess">
            <summary>
              Looks up a localized string similar to Payment successfully realized..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PayOffline">
            <summary>
              Looks up a localized string similar to Pay offline.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PayOnline">
            <summary>
              Looks up a localized string similar to Pay online.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PeakValues">
            <summary>
              Looks up a localized string similar to Peak Values.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PeerReview">
            <summary>
              Looks up a localized string similar to Peer Review.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PeerReviewAccepted">
            <summary>
              Looks up a localized string similar to Peer review accepted.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PeerReviewRejected">
            <summary>
              Looks up a localized string similar to Peer review rejected.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PendingPayment">
            <summary>
              Looks up a localized string similar to Pending Payment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PendingPaymentDescription">
            <summary>
              Looks up a localized string similar to Below you can see information about a payment that has been generated, but has not been fully processed yet..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PepServiceNotFound">
            <summary>
              Looks up a localized string similar to No personal eventing service found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PermitFieldsText">
            <summary>
              Looks up a localized string similar to Choose the fields to permit access to, if request is accepted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PermitFieldTypesText">
            <summary>
              Looks up a localized string similar to Choose the field types (broad categories) to permit access to, if request is accepted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PermitParametersText">
            <summary>
              Looks up a localized string similar to Choose the parameters to permit access to, if request is accepted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PermitScreenCapture">
            <summary>
              Looks up a localized string similar to Permit Screen Capture.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PersonalLegalInformation">
            <summary>
              Looks up a localized string similar to Personal/legal information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PersonalLegalInfoText">
            <summary>
              Looks up a localized string similar to To be able to get a wallet, perform transactions and sign smart contracts, you need an attested personal or legal identity assigned to your account..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PersonalNumber">
            <summary>
              Looks up a localized string similar to Personal number.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PersonalNumberDoesNotMatchCountry">
            <summary>
              Looks up a localized string similar to The personal number does not match national personal number regulations.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PersonalNumberDoesNotMatchCountry_ExpectedFormat">
            <summary>
              Looks up a localized string similar to The personal number does not match national personal number regulations. Expected format: .
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PersonalNumberPlaceholder">
            <summary>
              Looks up a localized string similar to Personal Number ({0}).
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Petition">
            <summary>
              Looks up a localized string similar to Request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionContract">
            <summary>
              Looks up a localized string similar to Access to Contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionContractInformationText">
            <summary>
              Looks up a localized string similar to A petition for the personal data in one of your contracts has been received. Review the information below and choose how you wish to respond..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionFrom">
            <summary>
              Looks up a localized string similar to Petition from:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionIdentity">
            <summary>
              Looks up a localized string similar to Access to Identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionIdentityInformationText">
            <summary>
              Looks up a localized string similar to A petition for the personal data of your legal identity has been received. Review the information below and choose how you wish to respond..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionSent">
            <summary>
              Looks up a localized string similar to Petition sent.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionSignature">
            <summary>
              Looks up a localized string similar to Signature requested.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionSignatureInformationText">
            <summary>
              Looks up a localized string similar to A request for your signature has been received. Review the reason below, and the information about who sent the request, and then choose how you wish to respond..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionToViewContractWasDenied">
            <summary>
              Looks up a localized string similar to Petition to view contract was denied..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PetitionToViewLegalIdentityWasDenied">
            <summary>
              Looks up a localized string similar to Petition to view legal identity was denied..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Phone">
            <summary>
              Looks up a localized string similar to Phone.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PhotoIsTooLarge">
            <summary>
              Looks up a localized string similar to Photo is too large.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Photos">
            <summary>
              Looks up a localized string similar to Photos.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PickPhoto">
            <summary>
              Looks up a localized string similar to Pick photo.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinChanged">
            <summary>
              Looks up a localized string similar to PIN has been successfully changed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinContainsAddress">
            <summary>
              Looks up a localized string similar to A PIN must not contain any word from the identity address lines..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinContainsEMail">
            <summary>
              Looks up a localized string similar to A PIN must not contain the identity e-mail address..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinContainsName">
            <summary>
              Looks up a localized string similar to A PIN must not contain any word from the identity names..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinContainsPersonalNumber">
            <summary>
              Looks up a localized string similar to A PIN must not contain the identity personal number..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinContainsPhoneNumber">
            <summary>
              Looks up a localized string similar to A PIN must not contain the identity phone number..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinIsInvalid">
            <summary>
              Looks up a localized string similar to PIN is invalid. You have {0} remaining attempts..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinIsInvalidAplicationBlocked">
            <summary>
              Looks up a localized string similar to PIN attempts entering is exceded. Your application has been blocked till {0}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinIsInvalidAplicationBlockedForever">
            <summary>
              Looks up a localized string similar to PIN attempts entering is exceded. Your application has been blocked forever.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinIsInvalidAplicationBlockedForOneWeek">
            <summary>
              Looks up a localized string similar to PIN attempts entering is exceded. Your application has been blocked for one week.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinIsInvalidAplicationBlockedTillTomorrow">
            <summary>
              Looks up a localized string similar to PIN attempts entering is exceded. Your application has been blocked till tomorrow at {0}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinMustNotIncludeWhitespace">
            <summary>
              Looks up a localized string similar to PIN number must not include leading or trailing whitespace..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinOrPassword">
            <summary>
              Looks up a localized string similar to PIN or password.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinsDoNotMatch">
            <summary>
              Looks up a localized string similar to PINs do not match.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinTooShort">
            <summary>
              Looks up a localized string similar to PIN length must be at least {0} characters..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinWithNotEnoughDigitsLettersSigns">
            <summary>
              Looks up a localized string similar to At least {0} letters, digits or symbols must be used..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinWithNotEnoughDigitsOrSigns">
            <summary>
              Looks up a localized string similar to You must also use at least {0} digits or symbols..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinWithNotEnoughLettersOrDigits">
            <summary>
              Looks up a localized string similar to You must also use at least {0} letters or digits..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinWithNotEnoughLettersOrSigns">
            <summary>
              Looks up a localized string similar to You must also use at least {0} letters or symbols..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinWithTooManyIdenticalSymbols">
            <summary>
              Looks up a localized string similar to A PIN must not contain more than {0} identical symbols..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PinWithTooManySequencedSymbols">
            <summary>
              Looks up a localized string similar to A PIN must not contain more than {0} sequenced symbols, e.g. &quot;12&quot; or &quot;ab&quot;..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PleaseReviewAndCheckAllCheckboxes">
            <summary>
              Looks up a localized string similar to Please review all information above, and check the corresponding check boxes if the information is correct. This must be done before you can approve the information..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionReceived1">
            <summary>
              Looks up a localized string similar to You have received a presence subscription from:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionReceived2">
            <summary>
              Looks up a localized string similar to If you accept this request, they can see your online presence..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionReceived3">
            <summary>
              Looks up a localized string similar to If you reject this request, they will be notified that you do not consent to this request..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionReceived4">
            <summary>
              Looks up a localized string similar to You can also ignore the request by closing the dialog without returning a response..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionReceived5">
            <summary>
              Looks up a localized string similar to What do you want to do?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionRequest">
            <summary>
              Looks up a localized string similar to Presence Subscription Request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceSubscriptionRequestSent">
            <summary>
              Looks up a localized string similar to A presence subscription request has been sent. When the recipient accepts the request, the contact status will be updated..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PresenceUnsubscriptionRequestSent">
            <summary>
              Looks up a localized string similar to A request to unsibscribe from presence notification has been sent..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Present">
            <summary>
              Looks up a localized string similar to Present.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Privileges">
            <summary>
              Looks up a localized string similar to Privileges.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ProductInformation">
            <summary>
              Looks up a localized string similar to Product Information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Profiling">
            <summary>
              Looks up a localized string similar to Profiling.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ProhibitScreenCapture">
            <summary>
              Looks up a localized string similar to Prohibit Screen Capture.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Proposal">
            <summary>
              Looks up a localized string similar to Proposal.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Propose">
            <summary>
              Looks up a localized string similar to Propose.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Provider">
            <summary>
              Looks up a localized string similar to Provider.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ProvisioningServiceNotFound">
            <summary>
              Looks up a localized string similar to No provisioning service found on broker..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PublicKey">
            <summary>
              Looks up a localized string similar to Public key.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PublishMarketplace">
            <summary>
              Looks up a localized string similar to Publish on Marketplace.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Purpose">
            <summary>
              Looks up a localized string similar to Purpose.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PurposeEducationalOrExperimental">
            <summary>
              Looks up a localized string similar to Educational or experimental use..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PurposeReviewContract">
            <summary>
              Looks up a localized string similar to Reviewing contract where you are part..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PurposeReviewToken">
            <summary>
              Looks up a localized string similar to Reviewing token where you are part..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PurposeWorkEducationalOrExperimental">
            <summary>
              Looks up a localized string similar to This option allows you to use Tag ID for educational, experimental or test purposes. There are no costs incurred when using this option. The account may be removed when no longer used. There is no guarantee the educational or experimental service provider selected will continue operation for extended periods of time..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PurposeWorkOrPersonal">
            <summary>
              Looks up a localized string similar to Work or personal use..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.PurposeWorkOrPersonalDescription">
            <summary>
              Looks up a localized string similar to This option allows you to use Tag ID for work or personal purposes. You can use the app for three months at no cost. After this time period, certain operations may incur costs..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Qrcode">
            <summary>
              Looks up a localized string similar to QR Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.QrCodeNotUnderstood">
            <summary>
              Looks up a localized string similar to Code not understood.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.QrEnterManually">
            <summary>
              Looks up a localized string similar to Enter manually.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.QrScanCode">
            <summary>
              Looks up a localized string similar to Scan code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.QrScanOverlay">
            <summary>
              Looks up a localized string similar to Align the QR-Code within the frame.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.QrScanUri">
            <summary>
              Looks up a localized string similar to URI:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Question">
            <summary>
              Looks up a localized string similar to Question.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Range">
            <summary>
              Looks up a localized string similar to Range.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RangeText">
            <summary>
              Looks up a localized string similar to Apply this rule to:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReadoutRequestText">
            <summary>
              Looks up a localized string similar to {0} wants to read data from your device {1}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReadoutRequestText2">
            <summary>
              Looks up a localized string similar to A caller has requested sensor data from one of your things. Select how you wish the thing should respond to this type of request..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReadRequest">
            <summary>
              Looks up a localized string similar to Readout Request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReadSensor">
            <summary>
              Looks up a localized string similar to Read Sensor.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReceiveEDaler">
            <summary>
              Looks up a localized string similar to Receive eDaler.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Reference">
            <summary>
              Looks up a localized string similar to Reference.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Region">
            <summary>
              Looks up a localized string similar to Region or State.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Register">
            <summary>
              Looks up a localized string similar to Register.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Registry">
            <summary>
              Looks up a localized string similar to Registry.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Reject">
            <summary>
              Looks up a localized string similar to Reject.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RejectInformation">
            <summary>
              Looks up a localized string similar to Reject Information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoteParty">
            <summary>
              Looks up a localized string similar to Remote Party:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoveContact">
            <summary>
              Looks up a localized string similar to Remove Contact.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoveFromList">
            <summary>
              Looks up a localized string similar to Remove from list.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoveSubscription">
            <summary>
              Looks up a localized string similar to Remove Subscription?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoveSubscription1">
            <summary>
              Looks up a localized string similar to You still have an approved subscription request from:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoveSubscription2">
            <summary>
              Looks up a localized string similar to Do you want to revoke this permission also?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RemoveSubscriptionFrom">
            <summary>
              Looks up a localized string similar to Do you want to remove the presence subscription from {0}?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Repair">
            <summary>
              Looks up a localized string similar to Repair.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RepairAndContinue">
            <summary>
              Looks up a localized string similar to Repair and continue.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RepairRestart">
            <summary>
              Looks up a localized string similar to An inconsistency in the internal database has been detected. This can happen if the app is not closed properly. The app will therefore close. The next time you start the app, the database will be repaired..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RepeatNewPin">
            <summary>
              Looks up a localized string similar to Repeat New PIN.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Report">
            <summary>
              Looks up a localized string similar to Report.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReportAsCompromized">
            <summary>
              Looks up a localized string similar to Report as Compromised.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Reports">
            <summary>
              Looks up a localized string similar to Reports.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Request">
            <summary>
              Looks up a localized string similar to Request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestingEntity">
            <summary>
              Looks up a localized string similar to Requesting entity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestPayment">
            <summary>
              Looks up a localized string similar to Request Payment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestPaymentDescription">
            <summary>
              Looks up a localized string similar to To request payment from someone, fill in the details about the payment below, and click the Generate QR Code button. The generated code can be used by the other party, to generate a payment to your account..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestPaymentMessage">
            <summary>
              Looks up a localized string similar to Requesting payment of {0} {1}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestReview">
            <summary>
              Looks up a localized string similar to Request review.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestReviewFromAPeer">
            <summary>
              Looks up a localized string similar to Request another user to review your application..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestSignature">
            <summary>
              Looks up a localized string similar to Request signature.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestTimedOut">
            <summary>
              Looks up a localized string similar to The request timed out.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestToAccessContract">
            <summary>
              Looks up a localized string similar to Request to access contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestToAccessIdentity">
            <summary>
              Looks up a localized string similar to Request to access identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RequestWasCancelled">
            <summary>
              Looks up a localized string similar to The request was cancelled.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Reserved">
            <summary>
              Looks up a localized string similar to Reserved:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RetypePinOrPassword">
            <summary>
              Looks up a localized string similar to Retype PIN or password.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RevalidateEMail">
            <summary>
              Looks up a localized string similar to We need to revalidate your e-mail address. Please update your e-mail address if necessary and tap &quot;send code&quot; button..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RevalidatePhoneNr">
            <summary>
              Looks up a localized string similar to We need to revalidate your mobile phone number. Please update your mobile phone number if necessary (use international phone number format, without spaces) and tap &quot;send code&quot; button..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ReviewIdentityInformationText">
            <summary>
              Looks up a localized string similar to You have been requested to review the following personal information. If correct, check the corresponding boxes, and press the Approve button at the bottom. You can also press the Reject button if you find anything that is incorrect..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RevokeInformation">
            <summary>
              Looks up a localized string similar to Revoke.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Role">
            <summary>
              Looks up a localized string similar to Role.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Roles">
            <summary>
              Looks up a localized string similar to Roles.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RolesInfoText">
            <summary>
              Looks up a localized string similar to Below you can see the different roles defined for the contract. If more than one part is assumed for a role, this number will be shown in the description of the role..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Room">
            <summary>
              Looks up a localized string similar to Room.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.RulesDeleted">
            <summary>
              Looks up a localized string similar to Provisioning rules have been deleted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ScanInvitation">
            <summary>
              Looks up a localized string similar to Scan Invitation.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ScannedQrCode">
            <summary>
              Looks up a localized string similar to Scanned QR Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ScanQRCode">
            <summary>
              Looks up a localized string similar to Scan QR Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Security">
            <summary>
              Looks up a localized string similar to Security.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SecuritySettings">
            <summary>
              Looks up a localized string similar to Security Settings.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SecuritySettingsInformationText">
            <summary>
              Looks up a localized string similar to Below you can modify securit settings for the app. By enabling screen capture you can share the screen with others, but only for a limited time..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectContactToPay">
            <summary>
              Looks up a localized string similar to Below are all contacts in your contact book. Select the contact to whom you want to make the payment..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectedContactCannotBeAdded">
            <summary>
              Looks up a localized string similar to The selected contact cannot be added. It does not have a Legal ID registered..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectFromWhomToRequestPayment">
            <summary>
              Looks up a localized string similar to Select from whom to request payment..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectingAPhotoIsNotSupported">
            <summary>
              Looks up a localized string similar to Selecting a photo is not supported on this device.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectPurpose">
            <summary>
              Looks up a localized string similar to Select Purpose.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectServiceProviderBuyEDaler">
            <summary>
              Looks up a localized string similar to Select the Service Provider you want to use to buy eDaler..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectServiceProviderPeerReview">
            <summary>
              Looks up a localized string similar to Select where to send the review request..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectServiceProviderSellEDaler">
            <summary>
              Looks up a localized string similar to Select the Service Provider you want to use to sell eDaler..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectWhoShouldHaveAccessToThisContract">
            <summary>
              Looks up a localized string similar to Select who should have access to this contract..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectYourRole">
            <summary>
              Looks up a localized string similar to Select your role in this contract..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SelectYourRoleInThisContract">
            <summary>
              Looks up a localized string similar to Select your role in this contract..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Sell">
            <summary>
              Looks up a localized string similar to Sell.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SellEDaler">
            <summary>
              Looks up a localized string similar to Sell eDaler..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SellEDalerDescription">
            <summary>
              Looks up a localized string similar to Provide the amount of eDaler do you want to sell below, and press the Sell button. A web page may be opened where you have to fill in further information for the payment processor to validate your requst..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Seller">
            <summary>
              Looks up a localized string similar to Seller.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Send">
            <summary>
              Looks up a localized string similar to Send.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendCode">
            <summary>
              Looks up a localized string similar to Send Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendEmailWarning">
            <summary>
              Looks up a localized string similar to A code has been sent in an e-mail message to your e-mail adderss. If you don&apos;t receive it, please also check your spam folder..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendInformationTo">
            <summary>
              Looks up a localized string similar to Send Information To?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendPayment">
            <summary>
              Looks up a localized string similar to Send Payment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendPaymentTo">
            <summary>
              Looks up a localized string similar to Send Payment.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendPhoneNumberWarning">
            <summary>
              Looks up a localized string similar to A code has been sent as a text message to your phone..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SendToContact">
            <summary>
              Looks up a localized string similar to Send to Contact.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorData">
            <summary>
              Looks up a localized string similar to Sensor Data.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataAccepted">
            <summary>
              Looks up a localized string similar to Request has been accepted..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataCancelled">
            <summary>
              Looks up a localized string similar to Sensor Data readout has been cancelled..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataDone">
            <summary>
              Looks up a localized string similar to Sensor Data readout has completed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataFailure">
            <summary>
              Looks up a localized string similar to Sensor Data readout has failed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderComputed">
            <summary>
              Looks up a localized string similar to Computed.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderHistorical">
            <summary>
              Looks up a localized string similar to Historical.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderIdentity">
            <summary>
              Looks up a localized string similar to Identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderMomentary">
            <summary>
              Looks up a localized string similar to Momentary.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderOther">
            <summary>
              Looks up a localized string similar to Other.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderPeak">
            <summary>
              Looks up a localized string similar to Peak.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataHeaderStatus">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataReceiving">
            <summary>
              Looks up a localized string similar to Receiving Sensor Data..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataRequested">
            <summary>
              Looks up a localized string similar to Sensor Data has been requested..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataStarted">
            <summary>
              Looks up a localized string similar to Sensor Data readout has started..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorDataText">
            <summary>
              Looks up a localized string similar to Below is information and sensor data available to you, in accordance with your access privileges..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SensorServiceNotFound">
            <summary>
              Looks up a localized string similar to No sensor service found..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SerialNumber">
            <summary>
              Looks up a localized string similar to Serial Number.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ServerDoesNotSupportFileUpload">
            <summary>
              Looks up a localized string similar to The server does not seem to support File Uploading..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ServerSignature">
            <summary>
              Looks up a localized string similar to Server Signature.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ServerSignatureInformationInfoText">
            <summary>
              Looks up a localized string similar to The following is information related to a server signature..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ServerSignatures">
            <summary>
              Looks up a localized string similar to Server Signatures.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ServerSignaturesInfoText">
            <summary>
              Looks up a localized string similar to The integrity of the contract is protected by the server signature shown below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Service">
            <summary>
              Looks up a localized string similar to Service.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ServiceProviders">
            <summary>
              Looks up a localized string similar to Service Providers.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Share">
            <summary>
              Looks up a localized string similar to Share.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ShareDescription">
            <summary>
              Looks up a localized string similar to Below, you can find additional options for sharing the QR-code..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ShortId">
            <summary>
              Looks up a localized string similar to Short ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ShowCode">
            <summary>
              Looks up a localized string similar to Show Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ShowDetails">
            <summary>
              Looks up a localized string similar to Show Details.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ShowM2MInfo">
            <summary>
              Looks up a localized string similar to Show M2M Definition.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SignAfter">
            <summary>
              Looks up a localized string similar to Sign after.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SignAsRole">
            <summary>
              Looks up a localized string similar to Sign as {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Signature">
            <summary>
              Looks up a localized string similar to Signature.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SignatureInformation">
            <summary>
              Looks up a localized string similar to Signature information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SignaturePetitionDenied">
            <summary>
              Looks up a localized string similar to The signature petition was denied..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SignatureResponse">
            <summary>
              Looks up a localized string similar to Response to signature request.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SignBefore">
            <summary>
              Looks up a localized string similar to Sign before.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Skip">
            <summary>
              Looks up a localized string similar to Skip.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SomethingWentWrongWhenSendingEmailCode">
            <summary>
              Looks up a localized string similar to Something went wrong when sending a verification code to this email..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SomethingWentWrongWhenSendingPhoneCode">
            <summary>
              Looks up a localized string similar to Something went wrong when sending a verification code to this phone number..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Spam">
            <summary>
              Looks up a localized string similar to Spam.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.State">
            <summary>
              Looks up a localized string similar to State.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.StateChangedTo">
            <summary>
              Looks up a localized string similar to State changed to {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.StateDiagram">
            <summary>
              Looks up a localized string similar to State Diagram.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.States">
            <summary>
              Looks up a localized string similar to States.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.StatusValues">
            <summary>
              Looks up a localized string similar to Status Values.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.StreetName">
            <summary>
              Looks up a localized string similar to Street Name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.StreetNumber">
            <summary>
              Looks up a localized string similar to Street Number.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Submit">
            <summary>
              Looks up a localized string similar to Submit.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SubscribeTo">
            <summary>
              Looks up a localized string similar to Subscribe to.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SubscribeToPresence">
            <summary>
              Looks up a localized string similar to Subscribe to presence?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SubscribeToPresence1">
            <summary>
              Looks up a localized string similar to Do you want to subscribe to the presence of:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SubscribeToPresence2">
            <summary>
              Looks up a localized string similar to By subscribing to the presence of someone, and if they accept, you will be notified of their online presence..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SubscribeToPresence3">
            <summary>
              Looks up a localized string similar to What do you want to do?.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SuccessTitle">
            <summary>
              Looks up a localized string similar to Success.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.SwitchingToTestPhoneNumberNotAllowed">
            <summary>
              Looks up a localized string similar to Changing the phone number to a test one is not allowed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TagEngraved">
            <summary>
              Looks up a localized string similar to Tag Engraved with link to {0}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TagNotEngraved">
            <summary>
              Looks up a localized string similar to Unable to engrave tag with link to {0}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TagValueCopiedToClipboard">
            <summary>
              Looks up a localized string similar to Tag value copied to clipboard.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TakePhoto">
            <summary>
              Looks up a localized string similar to Take photo.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TakingAPhotoIsNotSupported">
            <summary>
              Looks up a localized string similar to Taking a photo is not supported on this device.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TemplateId">
            <summary>
              Looks up a localized string similar to Template ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TestOtpUsed">
            <summary>
              Looks up a localized string similar to A temporary OTP code has been used. The application will stop working in about a week. You&apos;ll have to reinstall the application to use it again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TextNote">
            <summary>
              Looks up a localized string similar to Text Note.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TheContractRequiresAtLeast_AddMoreParts">
            <summary>
              Looks up a localized string similar to The contract requires at least {0} part(s) of role {1}. Add more parts to the contract and try again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TheContractRequiresAtMost_RemoveParts">
            <summary>
              Looks up a localized string similar to The contract requires at most {0} part(s) of role {1}. Remove some of the parts from the contract and try again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ThePasswordForTheConnectionIs">
            <summary>
              Looks up a localized string similar to The password for the connection is {0}. This has been copied to the clipboard..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ThereIsNoNetwork">
            <summary>
              Looks up a localized string similar to There is no network.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TheSpecifiedCodeIsNotALegalIdentity">
            <summary>
              Looks up a localized string similar to You need to scan a different type of QR Code, one that represents a legal identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Thing">
            <summary>
              Looks up a localized string similar to Thing.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ThingDisowned">
            <summary>
              Looks up a localized string similar to This has been successfully disowned. It can now be claimed by a new owner..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ThingRegistryServiceNotFound">
            <summary>
              Looks up a localized string similar to No thing registry service found on broker..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Things">
            <summary>
              Looks up a localized string similar to Things.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ThingsDescription">
            <summary>
              Looks up a localized string similar to Below are all your things, and things in your contact book. Click on any to interact with that thing..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ThisCodeCannotBeClaimedAtThisTime">
            <summary>
              Looks up a localized string similar to This code represents a Tag ID invitation, and cannot be claimed at this time..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Time">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Timestamp">
            <summary>
              Looks up a localized string similar to Time stamp.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.To">
            <summary>
              Looks up a localized string similar to To.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ToConnectToDomainYouNeedAnAccount1">
            <summary>
              Looks up a localized string similar to Your service provider has been selected to be.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ToConnectToDomainYouNeedAnAccount2">
            <summary>
              Looks up a localized string similar to You can choose to create an account on this provider. Enter the name of the account you wish to create, and press the Create New button. You can also choose to scan an invitation or transfer code, to use an account that has already been prepared for you, on another service provider. Click the Scan Invitation button to scan an invitation code..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ToDevice">
            <summary>
              Looks up a localized string similar to To device, regardless of source.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenAdded">
            <summary>
              Looks up a localized string similar to A token has been added to your wallet..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenAdded2">
            <summary>
              Looks up a localized string similar to Token Added.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenCreationTemplates">
            <summary>
              Looks up a localized string similar to Token Templates.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenCreationTemplatesInfoText">
            <summary>
              Looks up a localized string similar to Below is a list of token templates that you have used or can use to create new tokens. Click on a template to create a new contract based on that template. Once the contract has been signed and approved, the corresponding token or tokens will be created..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenDetails">
            <summary>
              Looks up a localized string similar to Token Details.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenDetailsDescription">
            <summary>
              Looks up a localized string similar to Following are details encoded into the token. Click on any links for more information..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenEvents">
            <summary>
              Looks up a localized string similar to Token Events.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenEventsDescription">
            <summary>
              Looks up a localized string similar to Following are public events recorded for the token. Your private events are also included..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenId">
            <summary>
              Looks up a localized string similar to Token ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenIdMethod">
            <summary>
              Looks up a localized string similar to Token ID Method.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenPartsInfoText">
            <summary>
              Looks up a localized string similar to Following is a list of parties related to this token..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenPrivilegesInfoText">
            <summary>
              Looks up a localized string similar to Following are privileges engraved into the token..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenRemoved">
            <summary>
              Looks up a localized string similar to A token has been removed from your wallet..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenRemoved2">
            <summary>
              Looks up a localized string similar to Token Removed.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TokenVisibility">
            <summary>
              Looks up a localized string similar to Token Visibility.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ToService">
            <summary>
              Looks up a localized string similar to To service, regardless of source.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ToUser">
            <summary>
              Looks up a localized string similar to To user, regardless of source.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ToUser2">
            <summary>
              Looks up a localized string similar to To User.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TransactionAccepted">
            <summary>
              Looks up a localized string similar to Transaction has been accepted and processed..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TransactionId">
            <summary>
              Looks up a localized string similar to Transaction ID:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Transferable">
            <summary>
              Looks up a localized string similar to Transferable.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TransferId">
            <summary>
              Looks up a localized string similar to Transfer ID.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TransferIdentityInformationText">
            <summary>
              Looks up a localized string similar to Scan the QR invitation code below from a device that is being initialized, to transfer the Digital Identity on this device to the second device. Once the code is scanned and the identity transferred, it will be removed from this device..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Transferred">
            <summary>
              Looks up a localized string similar to Transferred.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TrustAnchorGroup">
            <summary>
              Looks up a localized string similar to Trust Anchor Group.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TrustProvider">
            <summary>
              Looks up a localized string similar to Trust Provider.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TrustProviderJid">
            <summary>
              Looks up a localized string similar to Trust Provider Address.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TypeOfReport">
            <summary>
              Looks up a localized string similar to TypeOfReport.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.TypeOfReport1">
            <summary>
              Looks up a localized string similar to Select type of report you want to file for:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToAccessInvitation">
            <summary>
              Looks up a localized string similar to Unable to access invitation information..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToAuthenticateWith">
            <summary>
              Looks up a localized string similar to Unable to authenticate with {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToChangePassword">
            <summary>
              Looks up a localized string similar to Unable to change network password..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToClaimThing">
            <summary>
              Looks up a localized string similar to Unable to claim thing.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToConnect">
            <summary>
              Looks up a localized string similar to Unable to connect..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToConnectTo">
            <summary>
              Looks up a localized string similar to Unable to connect to {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToExtractMachineReadableString">
            <summary>
              Looks up a localized string similar to Unable to extract machine-readable text from image..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToGetAccessToYourPrivateKeys">
            <summary>
              Looks up a localized string similar to The application was unable to get access to the private keys of the identity. This typically means the identity has been changed outside of the scope of the app. It can also be a result of a corruption of data. You can try one of two things. Press the Continue button, to continue, without the private keys. You get access to the app, but cannot sign anything. You can then choose to reapply for a new identity from the main menu, with new private keys. You can also try to repair the database, by pressing the R [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToGetHistory">
            <summary>
              Looks up a localized string similar to Unable to get history report..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToGetListOfMyDevices">
            <summary>
              Looks up a localized string similar to Unable to get list of my devices..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToGetPresent">
            <summary>
              Looks up a localized string similar to Unable to get present report..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToGetProfiling">
            <summary>
              Looks up a localized string similar to Unable to get profiling report..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToGetStateDiagram">
            <summary>
              Looks up a localized string similar to Unable to get state diagram report..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToOcrImage">
            <summary>
              Looks up a localized string similar to Unable to find any text in the image..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToProcessEDalerUri">
            <summary>
              Looks up a localized string similar to Unable to process eDaler code..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToRespond">
            <summary>
              Looks up a localized string similar to Unable to respond to request..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnableToVerifyCode">
            <summary>
              Looks up a localized string similar to The code was not correct..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnexpectedResponse">
            <summary>
              Looks up a localized string similar to An unexpected response was received..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnrecognizedEDalerURI">
            <summary>
              Looks up a localized string similar to Unrecognized eDaler URI..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnrecognizedEventType">
            <summary>
              Looks up a localized string similar to Unrecognized event type:.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnsubscribeFrom">
            <summary>
              Looks up a localized string similar to Unsubscribe from.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UnsupportedUriScheme">
            <summary>
              Looks up a localized string similar to The text does not conform to any of the supported URI schemes..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Updated">
            <summary>
              Looks up a localized string similar to Updated.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.User">
            <summary>
              Looks up a localized string similar to User.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.UserSignedAs">
            <summary>
              Looks up a localized string similar to {0} signed as {1}..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ValidateIdentityInfo1Text">
            <summary>
              Looks up a localized string similar to Your identity information has to be validated before it can be approved. This can be done manually by your operator. It can also be done by peers..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ValidateIdentityInfo2Text">
            <summary>
              Looks up a localized string similar to To invite a peer to review your application, you need to scan the ID code of the peer you wish to invite. They will be able to see and review your application. When sufficient peers have reviewed your information, and certified it is correct, the operator will automatically approve your application. The information about who reviewed your identity will be encoded into the reviewed identity itself..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ValidateIdentityInfo3Text">
            <summary>
              Looks up a localized string similar to You can see the current status of the application below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ValidatingInformation">
            <summary>
              Looks up a localized string similar to Validating information.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Valuation">
            <summary>
              Looks up a localized string similar to Valuation.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Valuator">
            <summary>
              Looks up a localized string similar to Valuator.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Value">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Variables">
            <summary>
              Looks up a localized string similar to Variables.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.VariablesUpdated">
            <summary>
              Looks up a localized string similar to Variables Updated.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.VerificationCode">
            <summary>
              Looks up a localized string similar to Verification Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.VerifiedButton">
            <summary>
              Looks up a localized string similar to Verified.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.VerifyCode">
            <summary>
              Looks up a localized string similar to Verify Code.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Version">
            <summary>
              Looks up a localized string similar to Version.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ViewContract">
            <summary>
              Looks up a localized string similar to View Contract.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ViewEvents">
            <summary>
              Looks up a localized string similar to View Events.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ViewIdentityInformationText">
            <summary>
              Looks up a localized string similar to Following is personal information registered with the legal identity. Signatures and payments are signed using this information..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ViewXmlInBrowser">
            <summary>
              Looks up a localized string similar to Click here to view the XML note in a browser..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Visibility">
            <summary>
              Looks up a localized string similar to Visibility.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Wallet">
            <summary>
              Looks up a localized string similar to Wallet.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WarningTitle">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WelcomeToTagEMailCodeSent">
            <summary>
              Looks up a localized string similar to A code has been sent to the e-mail address indicated above. When you receive it, please enter the verification code below to continue..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WelcomeToTagHeading">
            <summary>
              Looks up a localized string similar to Welcome to Neuro-Access!.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WelcomeToTagPhoneNrCodeSent">
            <summary>
              Looks up a localized string similar to A code has been sent to the number indicated above. When you receive it, please enter the verification code below to continue..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WelcomeToTagSubheading">
            <summary>
              Looks up a localized string similar to Before connecting to the Neuro-Access network, we need to select a service provider for you. To do this, we need to know the purpose for using the app. Select the most appropriate option below..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WelcomeToTagValidateEMail">
            <summary>
              Looks up a localized string similar to We also need to validate your e-mail address. Please enter your e-mail address below, without spaces..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.WelcomeToTagValidatePhoneNr">
            <summary>
              Looks up a localized string similar to We also need to validate your mobile phone number. Please enter your mobile phone number below, using international phone number format, without spaces..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Witness">
            <summary>
              Looks up a localized string similar to Witness.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XInY">
            <summary>
              Looks up a localized string similar to {0} in {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmlNote">
            <summary>
              Looks up a localized string similar to XML Note.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Authenticating">
            <summary>
              Looks up a localized string similar to Authenticating network identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Binding">
            <summary>
              Looks up a localized string similar to Binding connection.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Connected">
            <summary>
              Looks up a localized string similar to Connected.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_ConnectedTo">
            <summary>
              Looks up a localized string similar to Connected to {0}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Connecting">
            <summary>
              Looks up a localized string similar to Establishing connection.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Error">
            <summary>
              Looks up a localized string similar to Connection error.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_FetchingRoster">
            <summary>
              Looks up a localized string similar to Fetching roster.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Offline">
            <summary>
              Looks up a localized string similar to Disconnected.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_Registering">
            <summary>
              Looks up a localized string similar to Registering with broker.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_RequestingSession">
            <summary>
              Looks up a localized string similar to Requesting session.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_SettingPresence">
            <summary>
              Looks up a localized string similar to Setting presence.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_StartingEncryption">
            <summary>
              Looks up a localized string similar to Encrypting connection.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_StreamNegotiation">
            <summary>
              Looks up a localized string similar to Negotiating stream.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XmppState_StreamOpened">
            <summary>
              Looks up a localized string similar to Stream established.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.XOnY">
            <summary>
              Looks up a localized string similar to {0} on {1}.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.Yesterday">
            <summary>
              Looks up a localized string similar to Yesterday.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouCanProtectYourWalletPinInfo">
            <summary>
              Looks up a localized string similar to You can protect your wallet and sensitive information by adding an additional PIN number or password..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouCanProtectYourWalletPinInfoChange">
            <summary>
              Looks up a localized string similar to You can change the existing PIN if necessary. If you skip this step, the old PIN will be used..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouHaveNowBeenSignedOut">
            <summary>
              Looks up a localized string similar to You have now been signed out. To sign in again, use the menu in the top left corner..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouHaveReceivedAProposal">
            <summary>
              Looks up a localized string similar to You have received a proposal..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToApproveToAssociate">
            <summary>
              Looks up a localized string similar to You need to approve to associate your personal information with the identity you review. When third parties review the information in the identity, they will have access to the identity of the reviewers, for transparency..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToCheckCarefullyReviewed">
            <summary>
              Looks up a localized string similar to You need to check the box you have carefully reviewed all corresponding information above..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToProvideACountry">
            <summary>
              Looks up a localized string similar to You need to select a country.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToProvideAFirstName">
            <summary>
              Looks up a localized string similar to You need to provide a first name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToProvideALastName">
            <summary>
              Looks up a localized string similar to You need to provide at least one last name.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToProvideAPersonalNumber">
            <summary>
              Looks up a localized string similar to You need to provide a personal or social security number.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YouNeedToProvideAPhoto">
            <summary>
              Looks up a localized string similar to You need to provide a photo.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YourContractContainsErrors">
            <summary>
              Looks up a localized string similar to Your contract contains errors. Fix these errors and try again..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YourLegalIdentity">
            <summary>
              Looks up a localized string similar to Your legal identity.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YourLegalIdentityHasBeenCompromised">
            <summary>
              Looks up a localized string similar to Your legal identity has been marked as compromised. You have therefore been redirected to create a new account..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YourLegalIdentityHasBeenObsoleted">
            <summary>
              Looks up a localized string similar to Your legal identity has been marked obsolete. You have therefore been redirected to create a new account..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YourLegalIdentityHasInvalidOrMissingKeys">
            <summary>
              Looks up a localized string similar to Your legal identity&apos;s signing keys are invalid. You have therefore been redirected to create a new account..
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.YourRole">
            <summary>
              Looks up a localized string similar to Your Role.
            </summary>
        </member>
        <member name="P:IdApp.Resx.AppResources.ZipCode">
            <summary>
              Looks up a localized string similar to Zip or Postal Code.
            </summary>
        </member>
        <member name="T:IdApp.Resx.FontAwesome">
            <summary>
            A list of Unicode constants for the FontAwesome Solid Icons:
            https://fontawesome.com/v5/cheatsheet/free/solid
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Images">
            <summary>
            The images icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.TrashAlt">
            <summary>
            The trash can icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.ArrowACircleLeft">
            <summary>
            A left arrow with a circle around it
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Microphone">
            <summary>
            The microphone icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Camera">
            <summary>
            The camer icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.User">
            <summary>
            The user icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Home">
            <summary>
            The home (house) icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.ScanQr">
            <summary>
            The Scan QR icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Contract">
            <summary>
            The contract icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.SignedContract">
            <summary>
            The signed contract icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.NewContract">
            <summary>
            The new contract icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Times">
            <summary>
            The times ('x') icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Inspect">
            <summary>
            The inspect icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Share">
            <summary>
            The share icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Exit">
            <summary>
            The exit icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.QuestionCircle">
            <summary>
            The question mark in a circle icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Wallet">
            <summary>
            The wallet icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Contacts">
            <summary>
            The contacts icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Things">
            <summary>
            The things icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Network">
            <summary>
            network-wired
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.HandHolding">
            <summary>
            hand-holding
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.MoneyBill">
            <summary>
            money-bill
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.ArrowLeft">
            <summary>
            arrow-left
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Paragraph">
            <summary>
            paragraph
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Folder">
            <summary>
            folder
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.FolderOpen">
            <summary>
            folder-open
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.PaperPlane">
            <summary>
            paper-plane
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.PaperClip">
            <summary>
            paperclip
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.WindowClose">
            <summary>
            window-close
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Passport">
            <summary>
            passport
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Rotate">
            <summary>
            rotate
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.StarOfLife">
            <summary>
            star-of-life
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Eye">
            <summary>
            eye
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.EyeSlash">
            <summary>
            eye-slash
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.EllipsisH">
            <summary>
            ellipsis-h
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Calculator">
            <summary>
            calculator
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.UserShield">
            <summary>
            user-shield
            </summary>
        </member>
        <member name="F:IdApp.Resx.FontAwesome.Link">
            <summary>
            link
            </summary>
        </member>
        <member name="T:IdApp.Resx.Svgs">
            <summary>
            A list of svg resources
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.Passport">
            <summary>
            The passport icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.Images">
            <summary>
            The images icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.Camera">
            <summary>
            The camera icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.TrashCan">
            <summary>
            The trash-can icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.Xmark">
            <summary>
            The x-mark icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.Check">
            <summary>
            The check icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.Trash">
            <summary>
            The trash icon
            </summary>
        </member>
        <member name="F:IdApp.Resx.Svgs.QrCodePerson">
            <summary>
            A QR-Code with a person icon
            </summary>
        </member>
        <member name="T:IdApp.Services.AttachmentCache.AttachmentCacheService">
            <inheritdoc cref="T:IdApp.Services.AttachmentCache.IAttachmentCacheService"/>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.AttachmentCacheService.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Services.AttachmentCache.AttachmentCacheService"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.AttachmentCacheService.Load(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.AttachmentCacheService.TryGet(System.String)">
            <summary>
            Tries to get a cached image given the specified url.
            </summary>
            <param name="Url">The url of the image to get.</param>
            <returns>If entry was found in the cache, the binary data of the image together with the Content-Type of the data.</returns>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.AttachmentCacheService.Add(System.String,System.String,System.Boolean,System.Byte[],System.String)">
            <summary>
            Adds an image to the cache.
            </summary>
            <param name="Url">The url, which is the key for accessing it later.</param>
            <param name="ParentId">Associated Legal or Contract ID (Parent ID)</param>
            <param name="Permanent">If attachment is permanent or temporary.</param>
            <param name="Data">Binary data of image</param>
            <param name="ContentType">Content-Type of data.</param>
        </member>
        <member name="T:IdApp.Services.AttachmentCache.CacheEntry">
            <summary>
            Contains information about a file in the local cache.
            </summary>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.CacheEntry.#ctor">
            <summary>
            Contains information about a file in the local cache.
            </summary>
        </member>
        <member name="P:IdApp.Services.AttachmentCache.CacheEntry.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:IdApp.Services.AttachmentCache.CacheEntry.Expires">
            <summary>
            Timestamp of entry
            </summary>
        </member>
        <member name="P:IdApp.Services.AttachmentCache.CacheEntry.ParentId">
            <summary>
            Associated Legal or Contract ID (Parent ID)
            </summary>
        </member>
        <member name="P:IdApp.Services.AttachmentCache.CacheEntry.LocalFileName">
            <summary>
            Local file name.
            </summary>
        </member>
        <member name="P:IdApp.Services.AttachmentCache.CacheEntry.Url">
            <summary>
            Local file name.
            </summary>
        </member>
        <member name="P:IdApp.Services.AttachmentCache.CacheEntry.ContentType">
            <summary>
            Content-Type
            </summary>
        </member>
        <member name="T:IdApp.Services.AttachmentCache.IAttachmentCacheService">
            <summary>
            Represents a service that caches images downloaded via http calls.
            They are stored for a certain duration.
            </summary>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.IAttachmentCacheService.TryGet(System.String)">
            <summary>
            Tries to get a cached image given the specified url.
            </summary>
            <param name="Url">The url of the image to get.</param>
            <returns>If entry was found in the cache, the binary data of the image together with the Content-Type of the data.</returns>
        </member>
        <member name="M:IdApp.Services.AttachmentCache.IAttachmentCacheService.Add(System.String,System.String,System.Boolean,System.Byte[],System.String)">
            <summary>
            Adds an image to the cache.
            </summary>
            <param name="Url">The url, which is the key for accessing it later.</param>
            <param name="ParentId">Associated Legal or Contract ID (Parent ID)</param>
            <param name="Permanent">If attachment is permanent or temporary.</param>
            <param name="Data">Binary data of image</param>
            <param name="ContentType">Content-Type of data.</param>
        </member>
        <member name="T:IdApp.Services.ContactInfo">
            <summary>
            Contains information about a contact.
            </summary>
        </member>
        <member name="M:IdApp.Services.ContactInfo.#ctor">
            <summary>
            Contains information about a contact.
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.BareJid">
            <summary>
            Bare JID of contact.
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.LegalId">
            <summary>
            Legal ID of contact.
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.LegalIdentity">
            <summary>
            Legal Identity object.
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.FriendlyName">
            <summary>
            Friendly name.
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.SourceId">
            <summary>
            Source ID
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.Partition">
            <summary>
            Partition
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.NodeId">
            <summary>
            Node ID
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.RegistryJid">
            <summary>
            Registry JID
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.SubcribeTo">
            <summary>
            Subscribe to this contact
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.AllowSubscriptionFrom">
            <summary>
            Allow subscriptions from this contact
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.IsThing">
            <summary>
            The contact is a thing
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.IsSensor">
            <summary>
            The contact is a sensor
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.SupportsSensorEvents">
            <summary>
            The contact supports sensor events
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.IsActuator">
            <summary>
            The contact is a actuator
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.IsConcentrator">
            <summary>
            The contact is a concentrator
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.Owner">
            <summary>
            If the account is registered as the owner of the thing.
            </summary>
        </member>
        <member name="P:IdApp.Services.ContactInfo.MetaData">
            <summary>
            Meta-data related to a thing.
            </summary>
        </member>
        <member name="M:IdApp.Services.ContactInfo.FindByBareJid(System.String)">
            <summary>
            Finds information about a contact, given its Bare JID.
            </summary>
            <param name="BareJid">Bare JID</param>
            <returns>Contact information, if found.</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.FindByBareJid(System.String,System.String,System.String,System.String)">
            <summary>
            Finds information about a contact, given its Bare JID.
            </summary>
            <param name="BareJid">Bare JID</param>
            <param name="SourceId">Source ID</param>
            <param name="Partition">Partition</param>
            <param name="NodeId">Node ID</param>
            <returns>Contact information, if found.</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.FindByLegalId(System.String)">
            <summary>
            Finds information about a contact, given its Legal ID.
            </summary>
            <param name="LegalId">Legal ID</param>
            <returns>Contact information, if found.</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetFriendlyName(Waher.Persistence.CaseInsensitiveString,IdApp.Services.IServiceReferences)">
            <summary>
            Gets the friendly name of a remote identity (Legal ID or Bare JID).
            </summary>
            <param name="RemoteId">Remote Identity</param>
            <param name="Ref">Service references</param>
            <returns>Friendly name.</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetFriendlyName(Waher.Persistence.CaseInsensitiveString,IdApp.Services.Xmpp.IXmppService,IdApp.Services.Tag.ITagProfile)">
            <summary>
            Gets the friendly name of a remote identity (Legal ID or Bare JID).
            </summary>
            <param name="RemoteId">Remote Identity</param>
            <param name="XmppService">XMPP Service</param>
            <param name="TagProfile">TAG Profile</param>
            <returns>Friendly name.</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetFriendlyName(System.String[],IdApp.Services.IServiceReferences)">
            <summary>
            Gets the friendly name of a remote identity (Legal ID or Bare JID).
            </summary>
            <param name="RemoteId">Remote Identity</param>
            <param name="Ref">Service references</param>
            <returns>Friendly name.</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetFriendlyName(System.Collections.Generic.IEnumerable{Waher.Networking.XMPP.Contracts.Property})">
            <summary>
            Gets the friendly name from a set of meta-data tags.
            </summary>
            <param name="MetaData">Meta-data tags.</param>
            <returns>Friendly name</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetFriendlyName(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Gets the friendly name of a legal identity.
            </summary>
            <param name="Identity">Legal Identity</param>
            <returns>Friendly name</returns>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetFriendlyName(Waher.Persistence.CaseInsensitiveString,System.String,System.String,System.String,IdApp.Services.IServiceReferences)">
            <summary>
            Gets the friendly name of a thing.
            </summary>
            <param name="BareJid">Bare JID of device</param>
            <param name="SourceId">Source ID of device.</param>
            <param name="PartitionId">Partition of device.</param>
            <param name="NodeId">Node ID of device.</param>
            <param name="Ref">Service References.</param>
            <returns>Friendly name.</returns>
        </member>
        <member name="P:IdApp.Services.ContactInfo.Item(System.String)">
            <summary>
            Access to meta-data properties.
            </summary>
            <param name="PropertyName">Name of property</param>
            <returns>Property value.</returns>
        </member>
        <member name="P:IdApp.Services.ContactInfo.ThingNotificationCategoryKey">
            <summary>
            Category key used for thing notifications.
            </summary>
        </member>
        <member name="M:IdApp.Services.ContactInfo.GetThingNotificationCategoryKey(System.String,System.String,System.String,System.String)">
            <summary>
            Category key used for thing notifications.
            </summary>
            <param name="BareJid">Bare JID of device</param>
            <param name="NodeId">Node ID of device.</param>
            <param name="SourceId">Source ID of device.</param>
            <param name="Partition">Partition of device.</param>
            <returns>Key</returns>
        </member>
        <member name="M:IdApp.Services.Contracts.ContractOrchestratorService.TagSignature(System.String)">
            <summary>
            TAG Signature request scanned.
            </summary>
            <param name="Request">Request string.</param>
        </member>
        <member name="T:IdApp.Services.Contracts.IContractOrchestratorService">
            <summary>
            Orchestrates operations on contracts upon receiving certain events, like approving or rejecting other peers' review requests.
            Also keeps track of the <see cref="T:IdApp.Services.Tag.ITagProfile"/> for the current user, and applies the correct navigation should the legal identity be compromised or revoked.
            </summary>
        </member>
        <member name="M:IdApp.Services.Contracts.IContractOrchestratorService.OpenLegalIdentity(System.String,System.String)">
            <summary>
            Downloads the specified <see cref="T:Waher.Networking.XMPP.Contracts.LegalIdentity"/> and opens the corresponding page in the app to show it.
            </summary>
            <param name="LegalId">The id of the legal identity to show.</param>
            <param name="Purpose">The purpose to state if the identity can't be downloaded and needs to be petitioned instead.</param>
        </member>
        <member name="M:IdApp.Services.Contracts.IContractOrchestratorService.TagSignature(System.String)">
            <summary>
            TAG Signature request scanned.
            </summary>
            <param name="Request">Request string.</param>
        </member>
        <member name="T:IdApp.Services.Crypto.CryptoService">
            <summary>
            Cryptographic service that helps create passwords and other security related tasks.
            </summary>
        </member>
        <member name="P:IdApp.Services.Crypto.CryptoService.DeviceID">
            <summary>
            Device ID
            </summary>
        </member>
        <member name="M:IdApp.Services.Crypto.CryptoService.#ctor">
            <summary>
            Cryptographic service that helps create passwords and other security related tasks.
            </summary>
        </member>
        <member name="M:IdApp.Services.Crypto.CryptoService.GetCustomKey(System.String)">
            <summary>
            Returns a cryptographic authorization key for the given filename.
            </summary>
            <param name="fileName">The filename to get a key for.</param>
            <returns>A cryptographic key.</returns>
        </member>
        <member name="M:IdApp.Services.Crypto.CryptoService.CreateRandomPassword">
            <summary>
            Generates a random password to use.
            </summary>
            <returns>Random password</returns>
        </member>
        <member name="T:IdApp.Services.Crypto.ICryptoService">
            <summary>
            Cryptographic service that helps create passwords and other security related tasks.
            </summary>
        </member>
        <member name="P:IdApp.Services.Crypto.ICryptoService.DeviceID">
            <summary>
            Device ID
            </summary>
        </member>
        <member name="M:IdApp.Services.Crypto.ICryptoService.GetCustomKey(System.String)">
            <summary>
            Returns a cryptographic authorization key for the given filename.
            </summary>
            <param name="fileName">The filename to get a key for.</param>
            <returns>A cryptographic key.</returns>
        </member>
        <member name="M:IdApp.Services.Crypto.ICryptoService.CreateRandomPassword">
            <summary>
            Generates a random password to use.
            </summary>
            <returns>Random password</returns>
        </member>
        <member name="T:IdApp.Services.Data.Countries.ISO_3166_1">
            <summary>
            Conversion between Country Names and ISO-3166-1 2-letter country codes.
            </summary>
        </member>
        <member name="P:IdApp.Services.Data.Countries.ISO_3166_1.Codes">
            <summary>
            Available country codes, ordered alphabetically
            </summary>
        </member>
        <member name="P:IdApp.Services.Data.Countries.ISO_3166_1.Countries">
            <summary>
            Available counties, ordered alphabetically
            </summary>
        </member>
        <member name="M:IdApp.Services.Data.Countries.ISO_3166_1.TryGetCountry(System.String,System.String@)">
            <summary>
            Tries to get the country name, given its country code.
            </summary>
            <param name="CountryCode">ISO-3166-1 Country code (case insensitive).</param>
            <param name="Country">Country name, if found.</param>
            <returns>If a country was found matching the country code.</returns>
        </member>
        <member name="M:IdApp.Services.Data.Countries.ISO_3166_1.TryGetCode(System.String,System.String@)">
            <summary>
            Tries to get the ISO-3166-1 country code, given its country name.
            </summary>
            <param name="Country">Country name (case insensitive).</param>
            <param name="CountryCode">ISO-3166-1 Country code, if found.</param>
            <returns>If a country code was found matching the country name.</returns>
        </member>
        <member name="M:IdApp.Services.Data.Countries.ISO_3166_1.ToName(System.String)">
            <summary>
            Converts the code to a country name (if found). If not found, returns the original code.
            </summary>
            <param name="CountryCode">Country code.</param>
            <returns>Country name, or if not found, the original code.</returns>
        </member>
        <member name="M:IdApp.Services.Data.Countries.ISO_3166_1.ToCode(System.String)">
            <summary>
            Converts the name to a country code (if found). If not found, returns the original name.
            </summary>
            <param name="Country">Country name.</param>
            <returns>Country code, or if not found, the original name.</returns>
        </member>
        <member name="T:IdApp.Services.Data.PersonalNumbers.NumberInformation">
            <summary>
            Personal number information
            </summary>
        </member>
        <member name="F:IdApp.Services.Data.PersonalNumbers.NumberInformation.PersonalNumber">
            <summary>
            String representation of the personal number.
            </summary>
        </member>
        <member name="F:IdApp.Services.Data.PersonalNumbers.NumberInformation.IsValid">
            <summary>
            true = valid: PersonalNumber may be normalized.
            false = invalid
            null = scheme not applicable, or no registered schemes for country
            </summary>
        </member>
        <member name="F:IdApp.Services.Data.PersonalNumbers.NumberInformation.DisplayString">
            <summary>
            A string that can be displayed to a user, informing the user about the approximate format expected.
            </summary>
        </member>
        <member name="T:IdApp.Services.Data.PersonalNumbers.PersonalNumberScheme">
            <summary>
            Checks personal numbers against a personal number scheme.
            </summary>
        </member>
        <member name="M:IdApp.Services.Data.PersonalNumbers.PersonalNumberScheme.#ctor(System.String,System.String,Waher.Script.Expression,Waher.Script.Expression,Waher.Script.Expression)">
            <summary>
            Checks personal numbers against a personal number scheme.
            </summary>
            <param name="variableName">Name of variable to use in script for the personal number.</param>
            <param name="displayString">A string that can be displayed to a user, informing the user about the approximate format expected.</param>
            <param name="pattern">Expression checking if the scheme applies to a personal number.</param>
            <param name="check">Optional expression, checking if the contents of the personal number is valid.</param>
            <param name="normalize">Optional normalization expression.</param>
        </member>
        <member name="P:IdApp.Services.Data.PersonalNumbers.PersonalNumberScheme.DisplayString">
            <summary>
            A string that can be displayed to a user, informing the user about the approximate format expected.
            </summary>
        </member>
        <member name="M:IdApp.Services.Data.PersonalNumbers.PersonalNumberScheme.Validate(System.String)">
            <summary>
            Checks if a personal number is valid according to the personal number scheme.
            </summary>
            <returns>Validation information about the number.</returns>
        </member>
        <member name="T:IdApp.Services.Data.PersonalNumbers.PersonalNumberSchemes">
            <summary>
            Personal Number Schemes available in different countries.
            </summary>
        </member>
        <member name="M:IdApp.Services.Data.PersonalNumbers.PersonalNumberSchemes.Validate(System.String,System.String)">
            <summary>
            Checks if a personal number is valid, in accordance with registered personal number schemes.
            </summary>
            <param name="CountryCode">ISO 3166-1 Country Codes.</param>
            <param name="PersonalNumber">Personal Number</param>
            <returns>Validation information about the number.</returns>
        </member>
        <member name="M:IdApp.Services.Data.PersonalNumbers.PersonalNumberSchemes.DisplayStringForCountry(System.String)">
            <summary>
            Gets the expected personal number format for the given country.
            </summary>
            <param name="countryCode">ISO 3166-1 Country Codes.</param>
            <returns>A string that can be displayed to a user, informing the user about the approximate format expected.</returns>
        </member>
        <member name="T:IdApp.Services.EventLog.ILogService">
            <summary>
            A log implementation for logging warnings, exceptions and events.
            </summary>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.AddListener(Waher.Events.IEventSink)">
            <summary>
            Adds an <see cref="T:Waher.Events.IEventSink"/> to the log service. Any listeners will be called
            whenever any log event occurs.
            </summary>
            <param name="eventSink">The listener to add.</param>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.RemoveListener(Waher.Events.IEventSink)">
            <summary>
            Removes an <see cref="T:Waher.Events.IEventSink"/> to the log service.
            </summary>
            <param name="eventSink">The listener to remove.</param>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.LogWarning(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Invoke this method to add a warning statement to the log.
            </summary>
            <param name="Message">Warning message.</param>
            <param name="Tags">Tags to log together with message.</param>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.LogException(System.Exception)">
            <summary>
            Invoke this method to add an <see cref="T:System.Exception"/> entry to the log.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.LogException(System.Exception,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Invoke this method to add an <see cref="T:System.Exception"/> entry to the log.
            </summary>
            <param name="e">The exception to log.</param>
            <param name="extraParameters">Any extra parameters that are added to the log.</param>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.SaveExceptionDump(System.String,System.String)">
            <summary>
            Saves an exception dump to disc, completely offline. A last resort operation.
            </summary>
            <param name="title">The title of the stack trace.</param>
            <param name="stackTrace">The actual stack trace.</param>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.LoadExceptionDump">
            <summary>
            Restores any exception dump that has previously been persisted with the <see cref="M:IdApp.Services.EventLog.ILogService.SaveExceptionDump(System.String,System.String)"/> method.
            </summary>
            <returns>The exception dump, if it exists, or <c>null</c>.</returns>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.DeleteExceptionDump">
            <summary>
            Removes any exception dump from disc, if it exists.
            </summary>
        </member>
        <member name="M:IdApp.Services.EventLog.ILogService.GetParameters(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Gets a list of extra parameters that are useful when logging: Platform, RuntimeVersion, AppVersion.
            </summary>
            <param name="Tags">Extra tags</param>
            <returns>Parameters</returns>
        </member>
        <member name="M:IdApp.Services.EventLog.LogService.GetParameters(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Services.ILoadableService">
            <summary>
            A service that can be loaded and unloaded at will. Typically during startup and shutdown of an application.
            </summary>
        </member>
        <member name="M:IdApp.Services.ILoadableService.Load(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Loads the specified service.
            </summary>
            <param name="isResuming">Set to <c>true</c> to indicate the app is resuming as opposed to starting cold.</param>
            <param name="cancellationToken">Will stop the service load if the token is set.</param>
        </member>
        <member name="M:IdApp.Services.ILoadableService.Unload">
            <summary>
            Unloads the specified service.
            </summary>
        </member>
        <member name="E:IdApp.Services.ILoadableService.Loaded">
            <summary>
            Fires whenever the loading state of the service changes.
            </summary>
        </member>
        <member name="T:IdApp.Services.IServiceReferences">
            <summary>
            Interface for classes that reference services in the app.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.UiSerializer">
            <summary>
            The dispatcher to use for alerts and accessing the main thread.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.XmppService">
            <summary>
            The XMPP service for XMPP communication.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.TagProfile">
            <summary>
            TAG Profie service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.NavigationService">
            <summary>
            Navigation service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.LogService">
            <summary>
            Log service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.NetworkService">
            <summary>
            Network service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.ContractOrchestratorService">
            <summary>
            Contract orchestrator service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.AttachmentCacheService">
            <summary>
            AttachmentCache service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.CryptoService">
            <summary>
            Crypto service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.SettingsService">
            <summary>
            Settings service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.StorageService">
            <summary>
            Storage service.
            </summary>
        </member>
        <member name="P:IdApp.Services.IServiceReferences.NfcService">
            <summary>
            Near-Field Communication (NFC) service.
            </summary>
        </member>
        <member name="T:IdApp.Services.LoadableService">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.LoadableService.IsLoaded">
            <summary>
            Gets whether the service is loaded.
            </summary>
        </member>
        <member name="P:IdApp.Services.LoadableService.IsLoading">
            <summary>
            Gets whether the service is being loaded.
            </summary>
        </member>
        <member name="P:IdApp.Services.LoadableService.IsUnloading">
            <summary>
            Gets whether the service is being unloaded.
            </summary>
        </member>
        <member name="M:IdApp.Services.LoadableService.BeginLoad(System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="P:IdApp.Services.LoadableService.IsLoading"/> flag if the service isn't already loading.
            </summary>
            <returns><c>true</c> if the service will load, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IdApp.Services.LoadableService.EndLoad(System.Boolean)">
            <summary>
            Sets the <see cref="P:IdApp.Services.LoadableService.IsLoading"/> and <see cref="P:IdApp.Services.LoadableService.IsLoaded"/> flags and fires an event
            representing the current load state of the service.
            </summary>
            <param name="isLoaded">The current loaded state to set.</param>
        </member>
        <member name="M:IdApp.Services.LoadableService.BeginUnload">
            <summary>
            Sets the <see cref="P:IdApp.Services.LoadableService.IsLoading"/> flag if the service isn't already unloading.
            </summary>
            <returns><c>true</c> if the service will unload, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IdApp.Services.LoadableService.EndUnload">
            <summary>
            Sets the <see cref="P:IdApp.Services.LoadableService.IsLoading"/> and <see cref="P:IdApp.Services.LoadableService.IsLoaded"/> flags and fires an event
            representing the current load state of the service.
            </summary>
        </member>
        <member name="M:IdApp.Services.LoadableService.Load(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.LoadableService.Unload">
            <inheritdoc/>
        </member>
        <member name="E:IdApp.Services.LoadableService.Loaded">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Services.LoadedEventArgs">
            <summary>
            Represents the current 'is loaded' changed state.
            </summary>
        </member>
        <member name="M:IdApp.Services.LoadedEventArgs.#ctor(System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:IdApp.Services.LoadedEventArgs"/>.
            </summary>
            <param name="isLoaded">The current loaded state.</param>
        </member>
        <member name="P:IdApp.Services.LoadedEventArgs.IsLoaded">
            <summary>
            The current loaded state.
            </summary>
        </member>
        <member name="T:IdApp.Services.Navigation.INavigationService">
            <summary>
            The navigation service is a wafer-thin wrapper around the <see cref="T:Xamarin.Forms.Shell"/>'s <c>GoToAsync()</c> methods.
            It also provides a uniform way of passing arguments to pages.
            Allows for easy mocking when unit testing.
            </summary>
        </member>
        <member name="M:IdApp.Services.Navigation.INavigationService.GoToAsync(System.String)">
            <summary>
            Navigates the AppShell to the specified route.
            </summary>
            <param name="route">The route whose matching page to navigate to.</param>
        </member>
        <member name="M:IdApp.Services.Navigation.INavigationService.GoToAsync``1(System.String,``0)">
            <summary>
            Navigates the AppShell to the specified route, with page arguments to match.
            </summary>
            <param name="route">The route whose matching page to navigate to.</param>
            <param name="args">The specific args to pass to the page.</param>
        </member>
        <member name="M:IdApp.Services.Navigation.INavigationService.GoBackAsync">
            <summary>
            Returns to the previous page/route.
            </summary>
        </member>
        <member name="M:IdApp.Services.Navigation.INavigationService.GoBackAsync(System.Boolean)">
            <summary>
            Returns to the previous page/route.
            </summary>
            <param name="Animate">If animation should be used.</param>
        </member>
        <member name="M:IdApp.Services.Navigation.INavigationService.TryPopArgs``1(``0@,System.String)">
            <summary>
            Tries to pop/read page arguments from the (one-level) deep navigation stack.
            </summary>
            <typeparam name="TArgs">The type of arguments to pass. Must be a subclass of <see cref="T:IdApp.Services.Navigation.NavigationArgs"/>.</typeparam>
            <param name="args">The actual args.</param>
            <param name="UniqueId">Views unique ID.</param>
        </member>
        <member name="M:IdApp.Services.Navigation.INavigationService.GetPopArgs``1(System.String)">
            <summary>
            Returns the pages arguments from the (one-level) deep navigation stack.
            </summary>
            <param name="UniqueId">Views unique ID.</param>
        </member>
        <member name="P:IdApp.Services.Navigation.INavigationService.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="T:IdApp.Services.Navigation.NavigationArgs">
            <summary>
            An base class holding page specific navigation parameters.
            </summary>
        </member>
        <member name="M:IdApp.Services.Navigation.NavigationArgs.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Services.Navigation.NavigationArgs"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Services.Navigation.NavigationArgs.ReturnRoute">
            <summary>
            The route to use when going back, if any.
            </summary>
        </member>
        <member name="P:IdApp.Services.Navigation.NavigationArgs.ReturnCounter">
            <summary>
            Set it to 1 to start a counter of the number of times to pop when going back.
            It will be incremented on every push using the <see cref="M:IdApp.Services.Navigation.INavigationService.GoToAsync(System.String)"/> method.
            If this parameter exist, it supercedes the <see cref="P:IdApp.Services.Navigation.NavigationArgs.ReturnRoute"/>
            </summary>
        </member>
        <member name="P:IdApp.Services.Navigation.NavigationArgs.CancelReturnCounter">
            <summary>
            Set it to true to start a new <see cref="P:IdApp.Services.Navigation.NavigationArgs.ReturnCounter"/> session.
            If the ReturnCounter is zero, it will stop the further counting.
            </summary>
        </member>
        <member name="P:IdApp.Services.Navigation.NavigationArgs.UniqueId">
            <summary>
            An untique view identificator used to search the args of similar view types.
            </summary>
        </member>
        <member name="P:IdApp.Services.Navigation.NavigationArgs.ViewInitialized">
            <summary>
            If view has been initialized by the arguments.
            </summary>
        </member>
        <member name="M:IdApp.Services.Navigation.NavigationService.Load(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Navigation.NavigationService.Unload">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Navigation.NavigationService.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="T:IdApp.Services.Network.INetworkService">
            <summary>
            The network service is a wafer-thin wrapper around the <see cref="T:Xamarin.Essentials.Connectivity"/> object.
            It exposes an event handler for monitoring connected state, and a DNS lookup method.
            It also has helper methods to make network requests and catch and display errors if they fail.
            </summary>
        </member>
        <member name="E:IdApp.Services.Network.INetworkService.ConnectivityChanged">
            <summary>
            Triggers whenever network connectivity changes.
            </summary>
        </member>
        <member name="M:IdApp.Services.Network.INetworkService.LookupXmppHostnameAndPort(System.String)">
            <summary>
            Performs a DNS lookup for the specified domain name.
            </summary>
            <param name="domainName">The domain name whose name to resolve.</param>
            <returns>Host Name, TCP Port number, and if the host is an IP Address or not.</returns>
        </member>
        <member name="P:IdApp.Services.Network.INetworkService.IsOnline">
            <summary>
            Determines whether we have network (wifi/cellular/other) or not.
            </summary>
        </member>
        <member name="M:IdApp.Services.Network.INetworkService.TryRequest(System.Func{System.Threading.Tasks.Task},System.Boolean,System.Boolean,System.String)">
            <summary>
            Tries to execute a arbitrary request. If there's an error this method catches it, logs it, and displays an alert to the user.
            </summary>
            <param name="func">The <c>Func</c> to execute.</param>
            <param name="rethrowException">Set to <c>true</c> if the exception should be rethrown, <c>false</c> otherwise.</param>
            <param name="displayAlert">Set to <c>true</c> if an alert should be displayed to the user, <c>false</c> otherwise.</param>
            <param name="memberName">(Optional) a method name to use.</param>
            <returns>If request was successful</returns>
        </member>
        <member name="M:IdApp.Services.Network.INetworkService.TryRequest``1(System.Func{System.Threading.Tasks.Task{``0}},System.Boolean,System.Boolean,System.String)">
            <summary>
            Tries to execute a arbitrary request. If there's an error this method catches it, logs it, and displays an alert to the user.
            </summary>
            <typeparam name="TReturn">The return type.</typeparam>
            <param name="func">The <c>Func</c> to execute.</param>
            <param name="rethrowException">Set to <c>true</c> if the exception should be rethrown, <c>false</c> otherwise.</param>
            <param name="displayAlert">Set to <c>true</c> if an alert should be displayed to the user, <c>false</c> otherwise.</param>
            <param name="memberName">(Optional) a method name to use.</param>
            <returns>If request was successful, and if so, the return value.</returns>
        </member>
        <member name="M:IdApp.Services.Network.NetworkService.Load(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Network.NetworkService.Unload">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Services.Nfc.INfcService">
            <summary>
            Interface for the Near-Field Communication (NFC) Service.
            </summary>
        </member>
        <member name="M:IdApp.Services.Nfc.INfcService.TagDetected(IdApp.Nfc.INfcTag)">
            <summary>
            Method called when a new NFC Tag has been detected.
            </summary>
            <param name="Tag">NFC Tag</param>
        </member>
        <member name="T:IdApp.Services.Nfc.NfcService">
            <summary>
            Near-Field Communication (NFC) Service.
            </summary>
        </member>
        <member name="M:IdApp.Services.Nfc.NfcService.#ctor">
            <summary>
            Near-Field Communication (NFC) Service.
            </summary>
        </member>
        <member name="M:IdApp.Services.Nfc.NfcService.TagDetected(IdApp.Nfc.INfcTag)">
            <summary>
            Method called when a new NFC Tag has been detected.
            </summary>
            <param name="Tag">NFC Tag</param>
        </member>
        <member name="T:IdApp.Services.Nfc.NfcTag">
            <summary>
            Class defining interaction with an NFC Tag.
            </summary>
        </member>
        <member name="M:IdApp.Services.Nfc.NfcTag.#ctor(System.Byte[],IdApp.Nfc.INfcInterface[])">
            <summary>
            Class defining interaction with an NFC Tag.
            </summary>
            <param name="ID">ID of Tag</param>
            <param name="Interfaces">Available communication interfaces.</param>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTag.ID">
            <summary>
            ID of Tag
            </summary>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTag.Interfaces">
            <summary>
            Available communication interfaces.
            </summary>
        </member>
        <member name="M:IdApp.Services.Nfc.NfcTag.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="T:IdApp.Services.Nfc.NfcTagReference">
            <summary>
            Contains information about a contact.
            </summary>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTagReference.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTagReference.TagId">
            <summary>
            Bare JID of contact.
            </summary>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTagReference.FriendlyName">
            <summary>
            Friendly name.
            </summary>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTagReference.MetaData">
            <summary>
            Meta-data related to a thing.
            </summary>
        </member>
        <member name="M:IdApp.Services.Nfc.NfcTagReference.FindByTagId(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Finds information about a contact, given its Bare JID.
            </summary>
            <param name="TagId">Tag ID</param>
            <returns>Tag reference, if found.</returns>
        </member>
        <member name="P:IdApp.Services.Nfc.NfcTagReference.Item(System.String)">
            <summary>
            Access to meta-data properties.
            </summary>
            <param name="PropertyName">Name of property</param>
            <returns>Property value.</returns>
        </member>
        <member name="T:IdApp.Services.Ocr.IOcrService">
            <summary>
            Interface for the Optical Character Recognition (OCR) Service.
            </summary>
        </member>
        <member name="M:IdApp.Services.Ocr.IOcrService.ProcessImage(IdApp.Cv.IMatrix,System.String,System.Nullable{IdApp.Services.Ocr.PageSegmentationMode})">
            <summary>
            Processes an image and tries to extract strings of characters from it.
            </summary>
            <param name="Image">Pre-processed image.</param>
            <param name="Language">Expected language on text in image.</param>
            <param name="PageSegmentationMode">Optional page segmentationmode.</param>
            <returns>Any lines of text found.</returns>
        </member>
        <member name="T:IdApp.Services.Ocr.OcrService">
            <summary>
            Optical Character Recognition (OCR) Service.
            </summary>
        </member>
        <member name="M:IdApp.Services.Ocr.OcrService.#ctor">
            <summary>
            Optical Character Recognition (OCR) Service.
            </summary>
        </member>
        <member name="M:IdApp.Services.Ocr.OcrService.ProcessImage(IdApp.Cv.IMatrix,System.String,System.Nullable{IdApp.Services.Ocr.PageSegmentationMode})">
            <summary>
            Processes an image and tries to extract strings of characters from it.
            </summary>
            <param name="Image">Pre-processed image.</param>
            <param name="Language">Expected language on text in image.</param>
            <param name="PageSegmentationMode">Optional page segmentationmode.</param>
            <returns>Any lines of text found.</returns>
        </member>
        <member name="T:IdApp.Services.Ocr.PageSegmentationMode">
            <summary>
            Page Segmentation Mode
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.DetectOrientationAndScript">
            <summary>
            Orientation and script detection (OSD) only
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.AutomaticPageSegmentationWithOsd">
            <summary>
            Automatic page segmentation with OSD.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.AutomaticPageSegmentationNoOsdOrOsr">
            <summary>
            Automatic page segmentation, but no OSD, or OCR.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.FullyAutomaticPageSegmentationNoOsd">
            <summary>
            Fully automatic page segmentation, but no OSD. (Default)
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleColumnOfText">
            <summary>
            Assume a single column of text of variable sizes.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleUniformBlockOfVerticallyAlignedText">
            <summary>
            Assume a single uniform block of vertically aligned text.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleUniformBlockOfText">
            <summary>
            Assume a single uniform block of text.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleLineOfText">
            <summary>
            Treat the image as a single text line.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleWord">
            <summary>
            Treat the image as a single word.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleWordInCircle">
            <summary>
            Treat the image as a single word in a circle.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SingleCharacter">
            <summary>
            Treat the image as a single character.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SparseText">
            <summary>
            Sparse text. Find as much text as possible in no particular order.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.SparseTextWithOsd">
            <summary>
            Sparse text with OSD.
            </summary>
        </member>
        <member name="F:IdApp.Services.Ocr.PageSegmentationMode.RawLine">
            <summary>
            Raw line. Treat the image as a single text line,
            bypassing hacks that are Tesseract-specific.
            </summary>
        </member>
        <member name="T:IdApp.Services.ServiceReferences">
            <summary>
            Abstract base class for (bindable) classes that reference services in the app.
            </summary>
        </member>
        <member name="M:IdApp.Services.ServiceReferences.#ctor">
            <summary>
            Abstract base class for (bindable) classes that reference services in the app.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.UiSerializer">
            <summary>
            The dispatcher to use for alerts and accessing the main thread.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.XmppService">
            <summary>
            The XMPP service for XMPP communication.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.TagProfile">
            <summary>
            TAG Profie service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.NavigationService">
            <summary>
            Navigation service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.LogService">
            <summary>
            Log service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.NetworkService">
            <summary>
            Network service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.ContractOrchestratorService">
            <summary>
            Contract orchestrator service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.AttachmentCacheService">
            <summary>
            AttachmentCache service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.CryptoService">
            <summary>
            Crypto service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.SettingsService">
            <summary>
            Settings service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.StorageService">
            <summary>
            Storage service.
            </summary>
        </member>
        <member name="P:IdApp.Services.ServiceReferences.NfcService">
            <summary>
            Near-Field Communication (NFC) service.
            </summary>
        </member>
        <member name="T:IdApp.Services.Settings.ISettingsService">
            <summary>
            Handles common UI settings that need to be persisted during sessions.
            </summary>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.String)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.Int64)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.Double)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.Boolean)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.DateTime)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.TimeSpan)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.Enum)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.SaveState(System.String,System.Object)">
            <summary>
            Saves state with the given key.
            </summary>
            <param name="key">The key to use.</param>
            <param name="state">The state to save.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreStringState(System.String,System.String)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreLongState(System.String,System.Int64)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreDoubleState(System.String,System.Double)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreBoolState(System.String,System.Boolean)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreDateTimeState(System.String,System.DateTime)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreTimeSpanState(System.String,System.TimeSpan)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreEnumState(System.String,System.Enum)">
            <summary>
            Restores state for the specified key.
            </summary>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreState``1(System.String,``0)">
            <summary>
            Restores state for the specified key.
            </summary>
            <typeparam name="T">The state type.</typeparam>
            <param name="key">The state id.</param>
            <param name="defaultValueIfNotFound">The default value to use if the state isn't found.</param>
            <returns>Value corresponding to the key.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RestoreStateWhereKeyStartsWith``1(System.String)">
            <summary>
            Returns any states whose key matches the specified predicate.
            </summary>
            <typeparam name="T">The state type.</typeparam>
            <param name="keyPrefix">The string value the key should start with, like "Foo". Do not include wildcards.</param>
            <returns>a list of matching states.</returns>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RemoveState(System.String)">
            <summary>
            Removes a given state.
            </summary>
            <param name="key">The state identifier.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.RemoveStateWhereKeyStartsWith(System.String)">
            <summary>
            Removes any states whose key matches the specified predicate.
            </summary>
            <param name="keyPrefix">The string value the key should start with, like "Foo". Do not include wildcards.</param>
        </member>
        <member name="M:IdApp.Services.Settings.ISettingsService.WaitInitDone">
            <summary>
            Waits for initialization of the storage service to be completed.
            </summary>
            <returns>If storage service is OK, or failed to initialize.</returns>
        </member>
        <member name="T:IdApp.Services.Storage.IStorageService">
            <summary>
            Wraps the <see cref="T:Waher.Persistence.Database"/> for easy access to persistent encrypted storage. Use this for any sensitive data.
            </summary>
        </member>
        <member name="P:IdApp.Services.Storage.IStorageService.DataFolder">
            <summary>
            Folder for database.
            </summary>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.Init(Waher.Runtime.Profiling.ProfilerThread,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Initializes the persistent storage on a background task. This call is asynchronous.
            </summary>
            <param name="Thread"></param>
            <param name="cancellationToken">Will stop the service load if the token is set.</param>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.WaitInitDone">
            <summary>
            Waits for initialization of the storage service to be completed.
            </summary>
            <returns>If storage service is OK, or failed to initialize.</returns>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.Shutdown">
            <summary>
            Shuts down this persistent storage instance.
            </summary>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.Insert(System.Object)">
            <summary>
            Inserts an object into the database.
            </summary>
            <param name="obj">The object to store.</param>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.Update(System.Object)">
            <summary>
            Updates an object in the database.
            </summary>
            <param name="obj">The object to update.</param>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.FindFirstDeleteRest``1">
            <summary>
            Returns the first match (if any) of the given type. Deletes the other matching entries.
            </summary>
            <typeparam name="T">The type of the objects to retrieve.</typeparam>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.FindFirstIgnoreRest``1">
            <summary>
            Returns the first match (if any) of the given type. Ignores (leaves) the other matching entries.
            </summary>
            <typeparam name="T">The type of the objects to retrieve.</typeparam>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.Export(Waher.Persistence.Serialization.IDatabaseExport)">
            <summary>
            Exports the contents of the database to <paramref name="exportOutput"/>.
            </summary>
            <param name="exportOutput">Receives the contents of the database.</param>
        </member>
        <member name="M:IdApp.Services.Storage.IStorageService.FlagForRepair">
            <summary>
            Flags the database for repair, so that the next time the app is opened, the database will be repaired.
            </summary>
        </member>
        <member name="M:IdApp.Services.Storage.StorageService.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Services.Storage.StorageService"/> class.
            </summary>
        </member>
        <member name="P:IdApp.Services.Storage.StorageService.DataFolder">
            <summary>
            Folder for database.
            </summary>
        </member>
        <member name="M:IdApp.Services.Storage.StorageService.Init(Waher.Runtime.Profiling.ProfilerThread,System.Nullable{System.Threading.CancellationToken})">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Services.Storage.StorageService.WaitInitDone">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Services.Storage.StorageService.Shutdown">
            <inheritdoc />
        </member>
        <member name="M:IdApp.Services.Storage.StorageService.FlagForRepair">
            <summary>
            Flags the database for repair, so that the next time the app is opened, the database will be repaired.
            </summary>
        </member>
        <member name="T:IdApp.Services.Tag.ITagProfile">
            <summary>
            The TAG Profile is the heart of the digital identity for a specific user/device.
            Use this instance to add and make a profile more complete.
            The TAG Profile holds relevant data connected to not only where the user is in the registration process,
            but also Xmpp identifiers.
            </summary>
        </member>
        <member name="E:IdApp.Services.Tag.ITagProfile.StepChanged">
            <summary>
            An event that triggers during the registration/profile build process, as the profile becomes more/less complete.
            </summary>
        </member>
        <member name="E:IdApp.Services.Tag.ITagProfile.Changed">
            <summary>
            An event that fires whenever any property on the <see cref="T:IdApp.Services.Tag.ITagProfile"/> changes.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.Domain">
            <summary>
            The domain this profile is connected to.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.ApiKey">
            <summary>
            API Key, for creating new account.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.ApiSecret">
            <summary>
            API Secret, for creating new account.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.PhoneNumber">
            <summary>
            Verified phone number.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.EMail">
            <summary>
            Verified e-mail address.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.DefaultXmppConnectivity">
            <summary>
            If connecting to the domain can be done using default parameters (host=domain, default c2s port).
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.Account">
            <summary>
            The account name for this profile
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.PasswordHash">
            <summary>
            A hash of the current password.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.PasswordHashMethod">
            <summary>
            The hash method used for hashing the password.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.LegalJid">
            <summary>
            The Jabber Legal JID for this user/profile.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.HttpFileUploadJid">
            <summary>
            The XMPP server's file upload Jid.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.HttpFileUploadMaxSize">
            <summary>
            The XMPP server's max size for file uploads.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.LogJid">
            <summary>
            The XMPP server's log Jid.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.Step">
            <summary>
            This profile's current registration step.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.FileUploadIsSupported">
            <summary>
            Returns <c>true</c> if file upload is supported for the specified XMPP server, <c>false</c> otherwise.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.Pin">
            <summary>
            The user's PIN value.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.PinHash">
            <summary>
            A hashed version of the user's <see cref="P:IdApp.Services.Tag.ITagProfile.Pin"/>.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.HasPin">
            <summary>
            Indicates if the user has a <see cref="P:IdApp.Services.Tag.ITagProfile.Pin"/>.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.IsTest">
            <summary>
            Returns <c>true</c> if the user choose the educational or experimental purpose.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.TestOtpTimestamp">
            <summary>
            Returns a timestamp if the user used a Test OTP Code.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.LegalIdentity">
            <summary>
            The legal identity of the curren user/profile.
            </summary>
        </member>
        <member name="P:IdApp.Services.Tag.ITagProfile.IsDirty">
            <summary>
            Returns <c>true</c> if the current <see cref="T:IdApp.Services.Tag.ITagProfile"/> has changed values and need saving, <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ToConfiguration">
            <summary>
            Converts the current <see cref="T:IdApp.Services.Tag.ITagProfile"/> to a <see cref="T:IdApp.Services.TagConfiguration"/> object that can be persisted to the <see cref="T:IdApp.Services.Storage.IStorageService"/>.
            </summary>
            <returns>Configuration object</returns>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.FromConfiguration(IdApp.Services.TagConfiguration)">
            <summary>
            Copies values from the <see cref="T:IdApp.Services.TagConfiguration"/> to this instance.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.NeedsUpdating">
            <summary>
            Returns <c>true</c> if the current <see cref="T:IdApp.Services.Tag.ITagProfile"/> needs to have its values updated, <c>false</c> otherwise.
            </summary>
            <returns>If values need updating</returns>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.LegalIdentityNeedsUpdating">
            <summary>
            Returns <c>true</c> if the current <see cref="T:IdApp.Services.Tag.ITagProfile"/> needs to have its legal identity updated, <c>false</c> otherwise.
            </summary>
            <returns>If legal identity need updating</returns>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.IsCompleteOrWaitingForValidation">
            <summary>
            Returns <c>true</c> if the registration process for this <see cref="T:IdApp.Services.Tag.ITagProfile"/> is either fully complete or is just awaiting validation, <c>false</c> otherwise.
            </summary>
            <returns><c>true</c> if the registration process for this <see cref="T:IdApp.Services.Tag.ITagProfile"/> is either fully complete or is just awaiting validation, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.IsComplete">
            <summary>
            Returns <c>true</c> if the registration process for this <see cref="T:IdApp.Services.Tag.ITagProfile"/> is either fully complete, <c>false</c> otherwise.
            </summary>
            <returns><c>true</c> if the registration process for this <see cref="T:IdApp.Services.Tag.ITagProfile"/> is either fully complete, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ResetIsDirty">
            <summary>
            Resets the <see cref="P:IdApp.Services.Tag.ITagProfile.IsDirty"/> flag, can be used after persisting values to <see cref="T:IdApp.Services.Storage.IStorageService"/>.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetPhone(System.String)">
            <summary>
            Step 1 - sets the phone number used for contacting the user.
            </summary>
            <param name="PhoneNumber">Verified phone number.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetEMail(System.String)">
            <summary>
            Step 1 - sets the e-mail address used for contacting the user.
            </summary>
            <param name="EMail">Verified e-mail address.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetDomain(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Step 1 - set the domain name to connect to.
            </summary>
            <param name="domainName">The domain name.</param>
            <param name="defaultXmppConnectivity">If connecting to the domain can be done using default parameters (host=domain, default c2s port).</param>
            <param name="Key">Key to use, if an account is to be created.</param>
            <param name="Secret">Secret to use, if an account is to be created.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ClearDomain">
            <summary>
            Revert Step 1.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.RevalidateContactInfo">
            <summary>
            An alternative Step 1, used for accounts with an obsoleted identity, - validate contact info (the same or updated) without changing account data.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.InvalidateContactInfo">
            <summary>
            Revert an alternative Step 1, used for accounts with an obsoleted identity, - invalidate contact info without erasing the legal identity or otherwise changing the account.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetAccount(System.String,System.String,System.String)">
            <summary>
            Step 2 - set the account name and password for a <em>new</em> account.
            </summary>
            <param name="accountName">The account/user name.</param>
            <param name="clientPasswordHash">The password hash (never send the real password).</param>
            <param name="clientPasswordHashMethod">The hash method used when hashing the password.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetAccountAndLegalIdentity(System.String,System.String,System.String,Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Step 2 and 3 - set the account name and password for an <em>existing</em> account.
            </summary>
            <param name="accountName">The account/user name.</param>
            <param name="clientPasswordHash">The password hash (never send the real password).</param>
            <param name="clientPasswordHashMethod">The hash method used when hashing the password.</param>
            <param name="identity">The new identity.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ClearAccount(System.Boolean)">
            <summary>
            Revert Step 2.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetLegalIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Step 3 - set the legal identity of a newly created account.
            </summary>
            <param name="legalIdentity">The legal identity to use.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ClearLegalIdentity">
            <summary>
            Revert Step 3.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetIsValidated">
            <summary>
            Step 4 - set the current legal identity as validated.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ClearIsValidated">
            <summary>
            Revert Step 4.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.CompletePinStep(System.String,System.Boolean)">
            <summary>
             Step 5 - Set a pin to use for protecting the account.
            </summary>
            <param name="Pin">The pin to use.</param>
            <param name="AddOrUpdatePin">
            If we should use <paramref name="Pin"/> to set or clear pin or we should ignore <paramref name="Pin"/> and just complete th step.
            </param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.RevertPinStep">
            <summary>
            Revert Step 5.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetIsTest(System.Boolean)">
            <summary>
            Step 1 - Set if the user choose the educational or experimental purpose.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetTestOtpTimestamp(System.Nullable{System.DateTime})">
            <summary>
            Step 1 - Set if the user used a Test OTP Code.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.RevokeLegalIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Sets the current <see cref="P:IdApp.Services.Tag.ITagProfile.LegalIdentity"/> to the revoked identity, and reverses the <see cref="P:IdApp.Services.Tag.ITagProfile.Step"/> property.
            </summary>
            <param name="revokedIdentity">The revoked identity to use.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.CompromiseLegalIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Sets the current <see cref="P:IdApp.Services.Tag.ITagProfile.LegalIdentity"/> to the compromised identity, and reverses the <see cref="P:IdApp.Services.Tag.ITagProfile.Step"/> property.
            </summary>
            <param name="compromisedIdentity">The compromised identity to use.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetLegalJid(System.String)">
            <summary>
            Used during XMPP service discovery. Sets the legal id.
            </summary>
            <param name="legalJid">The legal id.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetFileUploadParameters(System.String,System.Nullable{System.Int64})">
            <summary>
            Used during XMPP service discovery. Sets the file upload parameters.
            </summary>
            <param name="httpFileUploadJid">The http file upload id.</param>
            <param name="maxSize">The max size allowed.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.SetLogJid(System.String)">
            <summary>
            Used during XMPP service discovery. Sets the log id.
            </summary>
            <param name="logJid">The log id.</param>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ComputePinHash(System.String)">
            <summary>
            Computes a hash of the specified PIN.
            </summary>
            <param name="pin">The PIN whose hash to compute.</param>
            <returns>Hash Digest</returns>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ClearAll">
            <summary>
            Clears the entire profile.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.ITagProfile.ValidatePinStrength(System.String)">
            <summary>
            Validates if the <paramref name="Pin"/> is strong enough.
            </summary>
            <param name="Pin">PIN to validate.</param>
            <returns>A <see cref="T:IdApp.Services.Tag.PinStrength"/> value indicating if the <paramref name="Pin"/> is strong enough.</returns>
        </member>
        <member name="T:IdApp.Services.Tag.PinStrength">
            <summary>
            Represents a result of validating PIN strength.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.Strong">
            <summary>
            A PIN is strong enough.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.NotEnoughDigitsLettersSigns">
            <summary>
            A PIN is <c>null</c> or contains not enough symbols from all character classes (digits, letters or signs).
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.NotEnoughLettersOrSigns">
            <summary>
            A PIN contains enough digits but not enough letters or signs.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.NotEnoughLettersOrDigits">
            <summary>
            A PIN contains enough signs but not enough letters or digits.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.NotEnoughDigitsOrSigns">
            <summary>
            A PIN contains enough letters but not enough digits or signs.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.TooShort">
            <summary>
            A PIN is too short.
            <para>
            <see cref="F:IdApp.Services.Tag.PinStrength.TooShort"/> corresponds to a PIN which has enough digits, letters or signs to satisfy the variety rule
            but is still too short to be acceptable.
            </para>
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.TooManyIdenticalSymbols">
            <summary>
            A PIN contains too many identical symbols.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.TooManySequencedSymbols">
            <summary>
            A PIN contains too many sequenced symbols.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.ContainsPersonalNumber">
            <summary>
            A PIN contains the legal identity personal number.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.ContainsPhoneNumber">
            <summary>
            A PIN contains the legal identity phone number.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.ContainsEMail">
            <summary>
            A PIN contains the legal identity e-mail.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.ContainsName">
            <summary>
            A PIN contains a word from the legal identity name.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.PinStrength.ContainsAddress">
            <summary>
            A PIN contains a word from the legal identity address.
            </summary>
        </member>
        <member name="T:IdApp.Services.Tag.RegistrationStep">
            <summary>
            The different steps of a TAG Profile registration journey.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.RegistrationStep.ValidateContactInfo">
            <summary>
            Validate Phone Number and e-mail address
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.RegistrationStep.Account">
            <summary>
            Create or connect to an account
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.RegistrationStep.RegisterIdentity">
            <summary>
            Register an identity
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.RegistrationStep.ValidateIdentity">
            <summary>
            Have the identity validated.
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.RegistrationStep.Pin">
            <summary>
            Create a PIN code
            </summary>
        </member>
        <member name="F:IdApp.Services.Tag.RegistrationStep.Complete">
            <summary>
            Profile is completed.
            </summary>
        </member>
        <member name="T:IdApp.Services.Tag.TagProfile">
            <inheritdoc/>
        </member>
        <member name="E:IdApp.Services.Tag.TagProfile.StepChanged">
            <summary>
            An event that fires every time the <see cref="P:IdApp.Services.Tag.TagProfile.Step"/> property changes.
            </summary>
        </member>
        <member name="E:IdApp.Services.Tag.TagProfile.Changed">
            <summary>
            An event that fires every time any property changes.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.#ctor">
            <summary>
            Creates an instance of a <see cref="T:IdApp.Services.Tag.TagProfile"/>.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.OnStepChanged(System.EventArgs)">
            <summary>
            Invoked whenever the current <see cref="P:IdApp.Services.Tag.TagProfile.Step"/> changes, to fire the <see cref="E:IdApp.Services.Tag.TagProfile.StepChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.OnChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked whenever any property changes, to fire the <see cref="E:IdApp.Services.Tag.TagProfile.Changed"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ToConfiguration">
            <summary>
            Converts the current instance into a <see cref="T:IdApp.Services.TagConfiguration"/> object for serialization.
            </summary>
            <returns>Configuration object</returns>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.FromConfiguration(IdApp.Services.TagConfiguration)">
            <summary>
            Parses an instance of a <see cref="T:IdApp.Services.TagConfiguration"/> object to update this instance's properties.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.NeedsUpdating">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.LegalIdentityNeedsUpdating">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.IsCompleteOrWaitingForValidation">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.IsComplete">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.DefaultXmppConnectivity">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.Domain">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.ApiKey">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.ApiSecret">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.PhoneNumber">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.EMail">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.Account">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.PasswordHash">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.PasswordHashMethod">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.LegalJid">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.HttpFileUploadJid">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.HttpFileUploadMaxSize">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.LogJid">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.Step">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.FileUploadIsSupported">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.Pin">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.PinHash">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.HasPin">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.IsTest">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.TestOtpTimestamp">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.LegalIdentity">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.Tag.TagProfile.IsDirty">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ResetIsDirty">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetPhone(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetEMail(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetDomain(System.String,System.Boolean,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ClearDomain">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.RevalidateContactInfo">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.InvalidateContactInfo">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetAccount(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetAccountAndLegalIdentity(System.String,System.String,System.String,Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ClearAccount(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetLegalIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ClearLegalIdentity">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.RevokeLegalIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.CompromiseLegalIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetIsValidated">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ClearIsValidated">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.CompletePinStep(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.RevertPinStep">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetIsTest(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetTestOtpTimestamp(System.Nullable{System.DateTime})">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetLegalJid(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetFileUploadParameters(System.String,System.Nullable{System.Int64})">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.SetLogJid(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ComputePinHash(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ClearAll">
            <summary>
            Clears the entire profile.
            </summary>
        </member>
        <member name="M:IdApp.Services.Tag.TagProfile.ValidatePinStrength(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Services.LegalIdentityAttachment">
            <summary>
            Represent an attachment to a <see cref="T:Waher.Networking.XMPP.Contracts.LegalIdentity"/>.
            </summary>
        </member>
        <member name="M:IdApp.Services.LegalIdentityAttachment.#ctor">
            <summary>
            Creates an instance of a <see cref="T:IdApp.Services.LegalIdentityAttachment"/>.
            </summary>
        </member>
        <member name="M:IdApp.Services.LegalIdentityAttachment.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Creates an instance of a <see cref="T:IdApp.Services.LegalIdentityAttachment"/>.
            </summary>
            <param name="fileName">The actual filename</param>
            <param name="contentType">The content type.</param>
            <param name="data">The raw file data.</param>
        </member>
        <member name="P:IdApp.Services.LegalIdentityAttachment.Filename">
            <summary>
            The raw filename.
            </summary>
        </member>
        <member name="P:IdApp.Services.LegalIdentityAttachment.ContentType">
            <summary>
            Content type (mime) of the attachment.
            </summary>
        </member>
        <member name="P:IdApp.Services.LegalIdentityAttachment.Data">
            <summary>
            The raw file data.
            </summary>
        </member>
        <member name="P:IdApp.Services.LegalIdentityAttachment.ContentLength">
            <summary>
            Attachment content length.
            </summary>
        </member>
        <member name="T:IdApp.Services.TagConfiguration">
            <summary>
            A simple POCO object for serializing and deserializing configuration properties.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.ObjectId">
            <summary>
            The primary key in persistent storage.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.Domain">
            <summary>
            Current domain
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.ApiKey">
            <summary>
            API Key
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.ApiSecret">
            <summary>
            API Secret
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.PhoneNumber">
            <summary>
            Verified Phone Number
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.EMail">
            <summary>
            Verified e-mail address
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.DefaultXmppConnectivity">
            <summary>
            If connecting to the domain can be done using default parameters (host=domain, default c2s port).
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.Account">
            <summary>
            Account name
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.PasswordHash">
            <summary>
            Password hash
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.PasswordHashMethod">
            <summary>
            Password hash method
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.LegalJid">
            <summary>
            Legal Jabber Id
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.HttpFileUploadJid">
            <summary>
            Http File Upload Jabber Id
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.HttpFileUploadMaxSize">
            <summary>
            Http File Upload max file size
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.LogJid">
            <summary>
            Log Jabber JID
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.PinHash">
            <summary>
            The hash of the user's pin.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.UsePin">
            <summary>
            Set to true if the PIN should be used.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.IsTest">
            <summary>
            Set to true if the user choose the educational or experimental purpose.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.TestOtpTimestamp">
            <summary>
            Set to current timestamp if the user used a Test OTP Code.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.LegalIdentity">
            <summary>
            User's current legal identity.
            </summary>
        </member>
        <member name="P:IdApp.Services.TagConfiguration.Step">
            <summary>
            Current step in the registration process.
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.IUiSerializer">
            <summary>
            A wafer-thin wrapper around the UI (main) thread.
            Provides methods for displaying alerts to the user in a thread-safe way. Queues them up if there's more than one.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.BeginInvokeOnMainThread(System.Action)">
            <summary>
            Does a begin-invoke on the main thread of the specified action.
            </summary>
            <param name="action">The action to execute asynchronously.</param>
        </member>
        <member name="P:IdApp.Services.UI.IUiSerializer.IsRunningInTheBackground">
            <summary>
            Determines whether the app is running in the background.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayAlert(System.String,System.String,System.String,System.String)">
            <summary>
            Displays an alert/message box to the user.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
            <param name="accept">The accept/ok button text.</param>
            <param name="cancel">The cancel button text.</param>
            <returns>If Accept or Cancel was pressed</returns>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayAlert(System.String,System.String,System.String)">
            <summary>
            Displays an alert/message box to the user.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
            <param name="accept">The accept/ok button text.</param>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayAlert(System.String,System.String)">
            <summary>
            Displays an alert/message box to the user.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayAlert(System.String,System.String,System.Exception)">
            <summary>
            Displays an alert/message box to the user.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
            <param name="exception">The exception to display.</param>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayAlert(System.String,System.Exception)">
            <summary>
            Displays an alert/message box to the user.
            </summary>
            <param name="title">The title to display.</param>
            <param name="exception">The exception to display.</param>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayAlert(System.Exception)">
            <summary>
            Displays an alert/message box to the user.
            </summary>
            <param name="exception">The exception to display.</param>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayPrompt(System.String,System.String,System.String,System.String)">
            <summary>
            Prompts the user for some input.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
            <param name="accept">The accept/ok button text.</param>
            <param name="cancel">The cancel button text.</param>
            <returns>User input</returns>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayPrompt(System.String,System.String,System.String)">
            <summary>
            Prompts the user for some input.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
            <param name="accept">The accept/ok button text.</param>
            <returns>User input</returns>
        </member>
        <member name="M:IdApp.Services.UI.IUiSerializer.DisplayPrompt(System.String,System.String)">
            <summary>
            Prompts the user for some input.
            </summary>
            <param name="title">The title to display.</param>
            <param name="message">The message to display.</param>
            <returns>User input</returns>
        </member>
        <member name="T:IdApp.Services.UI.Photos.Photo">
            <summary>
            Class containing information about a photo.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Photos.Photo.#ctor(System.Byte[])">
            <summary>
            Class containing information about a photo.
            </summary>
            <param name="Source">Image source</param>
        </member>
        <member name="M:IdApp.Services.UI.Photos.Photo.#ctor(System.Byte[],System.Int32)">
            <summary>
            Class containing information about a photo.
            </summary>
            <param name="Source">Image source</param>
            <param name="Rotation">Rotation</param>
        </member>
        <member name="M:IdApp.Services.UI.Photos.Photo.#ctor(Xamarin.Forms.ImageSource,System.Int32)">
            <summary>
            Class containing information about a photo.
            </summary>
            <param name="Source">Image source</param>
            <param name="Rotation">Rotation</param>
        </member>
        <member name="P:IdApp.Services.UI.Photos.Photo.Source">
            <summary>
            Image source
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Photos.Photo.Rotation">
            <summary>
            Rotation
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.Photos.PhotosLoader">
            <summary>
            This is a helper class for downloading photos via http requests.
            It loads photos in the background, typically photo attachments connected to a
            digital identity. When the photos are loaded, they are added to an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> on the main thread.
            This class also handles errors when trying to load photos, and internally it uses a <see cref="T:IdApp.Services.AttachmentCache.IAttachmentCacheService"/>.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Services.UI.Photos.PhotosLoader"/> class.
            Use this constructor for when you want to load a a <b>single photo</b>.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.#ctor(System.Collections.ObjectModel.ObservableCollection{IdApp.Services.UI.Photos.Photo})">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Services.UI.Photos.PhotosLoader"/> class.
            Use this constructor for when you want to load a <b>list of photos</b>.
            </summary>
            <param name="Photos">The collection the photos should be added to when downloaded.</param>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.LoadPhotos(Waher.Networking.XMPP.Contracts.Attachment[],Waher.Networking.XMPP.Contracts.SignWith,System.Action)">
            <summary>
            Loads photos from the specified list of attachments.
            </summary>
            <param name="Attachments">The attachments whose files to download.</param>
            <param name="SignWith">How the requests are signed. For identity attachments, especially for attachments to an identity being created, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.CurrentKeys"/> should be used. For requesting attachments relating to a contract, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.LatestApprovedId"/> should be used.</param>
            <param name="WhenDoneAction">A callback that is called when the photo load operation is done.</param>
            <returns>Returns the first photo, if available, null if no photos available.</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.CancelLoadPhotos">
            <summary>
            Cancels any ongoing download of photos in progress. Also
            clears the collection of photos from its content.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.LoadOnePhoto(Waher.Networking.XMPP.Contracts.Attachment,Waher.Networking.XMPP.Contracts.SignWith)">
            <summary>
            Downloads one photo and stores in cache.
            </summary>
            <param name="Attachment">The attachment to download.</param>
            <param name="SignWith">How the requests are signed. For identity attachments, especially for attachments to an identity being created, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.CurrentKeys"/> should be used. For requesting attachments relating to a contract, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.LatestApprovedId"/> should be used.</param>
            <returns>Binary content (or null), Content-Type, Rotation</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.GetImageRotation(System.Byte[])">
            <summary>
            Gets the rotation angle to use, to display the image correctly in Xamarin Forms.
            </summary>
            <param name="JpegImage">Binary representation of JPEG image.</param>
            <returns>Rotation angle (degrees).</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.GetImageRotation(Waher.Content.Images.Exif.ExifTag[])">
            <summary>
            Gets the rotation angle to use, to display the image correctly in Xamarin Forms.
            </summary>
            <param name="Tags">EXIF Tags encoded in image.</param>
            <returns>Rotation angle (degrees).</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.LoadPhoto(Waher.Networking.XMPP.Contracts.Attachment)">
            <summary>
            Loads a photo attachment.
            </summary>
            <param name="Attachment">Attachment containing photo.</param>
            <returns>Photo, Content-Type, Rotation</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.LoadPhotoAsTemporaryFile(Waher.Networking.XMPP.Contracts.Attachment[],System.Int32,System.Int32)">
            <summary>
            Tries to load a photo from a set of attachments.
            </summary>
            <param name="Attachments">Attachments</param>
            <param name="MaxWith">Maximum width when displaying photo.</param>
            <param name="MaxHeight">Maximum height when displaying photo.</param>
            <returns>Filename, Width, Height, if loaded, (null,0,0) if not.</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.LoadPhotoAsTemporaryFile(Waher.Networking.XMPP.Contracts.Attachment,System.Int32,System.Int32)">
            <summary>
            Tries to load a photo from an attachments.
            </summary>
            <param name="Attachment">Attachment</param>
            <param name="MaxWith">Maximum width when displaying photo.</param>
            <param name="MaxHeight">Maximum height when displaying photo.</param>
            <returns>Filename, Width, Height, if loaded, (null,0,0) if not.</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.GetTemporaryFile(System.Byte[])">
            <summary>
            Stores an image in binary form as a temporary file. Files will be deleted when application closes.
            </summary>
            <param name="BinaryImage">Binary image.</param>
            <returns>Temporary file name.</returns>
        </member>
        <member name="M:IdApp.Services.UI.Photos.PhotosLoader.GetTemporaryFile(System.Byte[],System.String)">
            <summary>
            Stores an image in binary form as a temporary file. Files will be deleted when application closes.
            </summary>
            <param name="BinaryImage">Binary image.</param>
            <param name="FileExtension">File extension.</param>
            <returns>Temporary file name.</returns>
        </member>
        <member name="T:IdApp.Services.UI.QR.CustomColoring">
            <summary>
            Performs custom coloring of QR codes
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.QR.CustomColoring.#ctor(System.String,System.Int32,System.Int32,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor)">
            <summary>
            Performs custom coloring of QR codes
            </summary>
            <param name="SvgIconPath">Optional Icon to overlay the QR code. Must be in SVG Path format.</param>
            <param name="IconWidth">Width of icon.</param>
            <param name="IconHeight">Height of icon.</param>
            <param name="IconFg">Icon foreground color.</param>
            <param name="IconBg">Icon background color.</param>
            <param name="CodeFg">Code foreground color.</param>
            <param name="CodeBg">Code background color.</param>
            <param name="MarkerOuterFg">Outer marker foreground color.</param>
            <param name="MarkerInnerFg">Inner marker foreground color.</param>
            <param name="MarkerBg">Marker background color.</param>
            <param name="AlignmentOuterFg">Outer alignment foreground color.</param>
            <param name="AlignmentInnerFg">Inner alignment foreground color.</param>
            <param name="AlignmentBg">Alignment background color.</param>
        </member>
        <member name="M:IdApp.Services.UI.QR.CustomColoring.ColorFunction(System.Single,System.Single,System.Single,System.Single,Waher.Content.QR.DotType)">
            <summary>
            Color function called from the QR-code image generator.
            </summary>
            <param name="CodeX">Normalized [0-1] X-coordinate into QR-code.</param>
            <param name="CodeY">Normalized [0-1] Y-coordinate into QR-code.</param>
            <param name="DotX">Normalized [0-1] X-coordinate into current dot.</param>
            <param name="DotY">Normalized [0-1] Y-coordinate into current dot.</param>
            <param name="Type">Type of dot currently being drawn.</param>
            <returns>32-but unsigned integer representing the color of the current pixel, in AABBGGRR format
            (most significant byte first).</returns>
        </member>
        <member name="T:IdApp.Services.UI.QR.QrCode">
            <summary>
            Helper class to perform scanning of QR Codes by displaying the UI and handling async results.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.QR.QrCode.ScanQrCodeAndHandleResult(System.Boolean)">
            <summary>
            Scans a QR Code, and depending on the actual result, takes different actions. 
            This typically means navigating to an appropriate page.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.QR.QrCode.OpenUrl(System.String)">
            <summary>
            Scans a QR Code, and depending on the actual result, takes different actions. 
            This typically means navigating to an appropriate page.
            </summary>
            <param name="Url">URL to open.</param>
            <returns>If URL was handled.</returns>
        </member>
        <member name="M:IdApp.Services.UI.QR.QrCode.ScanQrCode(System.String,System.Func{System.String,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
            Navigates to the Scan QR Code Page, waits for scan to complete, and returns the result.
            This is seemingly simple, but performs several operations, namely:
            <list type="bullet">
            <item>
            <description>Display the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage"/></description>
            </item>
            <item>
            <description>Wait for the user to scan a QR code or enter it manually, or cancel.</description>
            </item>
            <item>
            <description>Navigate back to the calling page.</description>
            </item>
            </list>
            In order to handle processing in the correct order, you may need to use the <c>action</c> parameter. It is provided
            to do additional processing <em>before</em> the <see cref="T:IdApp.Pages.Main.ScanQrCode.ScanQrCodePage"/> is navigated away from.
            </summary>
            <param name="CommandName">The localized name of the command to display when scanning.</param>
            <param name="Action">
            The asynchronous action to invoke right after a QR Code has been scanned, but before the Scan Page closes.
            <para>
            <paramref name="Action"/> should not navigate and (!) should not post navigation using BeginInvokeOnMainThread or
            similar methods. Otherwise, trying to navigate back from the QR code page can actually navigate from the wrong page.
            </para>
            </param>
            <param name="UseShellNavigationService">A Boolean flag indicating if Shell navigation should be used or a simple <c>PushAsync</c>.</param>
            <returns>Decoded string</returns>
        </member>
        <member name="M:IdApp.Services.UI.QR.QrCode.GeneratePng(System.String,System.Int32,System.Int32)">
            <summary>
            Generates a QR Code png image with the specified width and height.
            </summary>
            <param name="text">The QR Code</param>
            <param name="width">Required image width.</param>
            <param name="height">Required image height.</param>
            <returns>Binary encoding of PNG</returns>
        </member>
        <member name="M:IdApp.Services.UI.QR.QrCode.GenerateJpg(System.String,System.Int32,System.Int32)">
            <summary>
            Generates a QR Code jpeg image with the specified width and height.
            </summary>
            <param name="text">The QR Code</param>
            <param name="width">Required image width.</param>
            <param name="height">Required image height.</param>
            <returns>Binary encoding of JPG</returns>
        </member>
        <member name="T:IdApp.Services.UI.Tasks.DisplayAlert">
            <summary>
            Displays an alert message.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Tasks.DisplayAlert.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Displays an alert message.
            </summary>
            <param name="Title">Title string</param>
            <param name="Message">Message string</param>
            <param name="Accept">Accept string</param>
            <param name="Cancel">Cancel string</param>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayAlert.Title">
            <summary>
            Title string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayAlert.Message">
            <summary>
            Message string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayAlert.Accept">
            <summary>
            Accept string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayAlert.Cancel">
            <summary>
            Cancel string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayAlert.CompletionSource">
            <summary>
            Completion source indicating when task has been completed.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Tasks.DisplayAlert.Execute">
            <summary>
            Executes the task.
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.Tasks.DisplayPrompt">
            <summary>
            Prompts the user for input.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Tasks.DisplayPrompt.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="Title">Title string</param>
            <param name="Message">Message string</param>
            <param name="Accept">Accept string</param>
            <param name="Cancel">Cancel string</param>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayPrompt.Title">
            <summary>
            Title string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayPrompt.Message">
            <summary>
            Message string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayPrompt.Accept">
            <summary>
            Accept string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayPrompt.Cancel">
            <summary>
            Cancel string
            </summary>
        </member>
        <member name="P:IdApp.Services.UI.Tasks.DisplayPrompt.CompletionSource">
            <summary>
            Completion source indicating when task has been completed.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Tasks.DisplayPrompt.Execute">
            <summary>
            Executes the task.
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.Tasks.UiTask">
            <summary>
            Abstract base class for UI tasks.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.Tasks.UiTask.Execute">
            <summary>
            Executes the task.
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.UiConstants">
            <summary>
            Constant, reusable, immutable values related to the UI.
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.UiConstants.QrCode">
            <summary>
            QR Code constants.
            </summary>
        </member>
        <member name="F:IdApp.Services.UI.UiConstants.QrCode.DefaultImageWidth">
            <summary>
            The default width to use when generating QR Code images.
            </summary>
        </member>
        <member name="F:IdApp.Services.UI.UiConstants.QrCode.DefaultImageHeight">
            <summary>
            The default height to use when generating QR Code images.
            </summary>
        </member>
        <member name="T:IdApp.Services.UI.UiSerializer">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:IdApp.Services.UI.UiSerializer"/> class.
            </summary>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.BeginInvokeOnMainThread(System.Action)">
            <inheritdoc/>
        </member>
        <member name="P:IdApp.Services.UI.UiSerializer.IsRunningInTheBackground">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayAlert(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayAlert(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayAlert(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayAlert(System.String,System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayAlert(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayAlert(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayPrompt(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayPrompt(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.UI.UiSerializer.DisplayPrompt(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Services.XmlDatabaseExport">
            <summary>
            Exports database contents to XML.
            </summary>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.#ctor(System.Text.StringBuilder,System.Boolean,System.Int32)">
            <summary>
            Exports database contents to XML.
            </summary>
            <param name="Output">XML output is directed to this XML writer.</param>
            <param name="Indent">If output should be indented (true), or written without unnecessary whitespace (false).</param>
            <param name="BinaryDataSizeLimit">Size limit of binary data fields. If larger, only a byte count will be presented.</param>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.#ctor(System.Xml.XmlWriter,System.Int32)">
            <summary>
            Exports database contents to XML.
            </summary>
            <param name="Output">XML output is directed to this XML writer.</param>
            <param name="BinaryDataSizeLimit">Size limit of binary data fields. If larger, only a byte count will be presented.</param>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.StartDatabase">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.EndDatabase">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.StartCollection(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.EndCollection">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.StartIndex">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.ReportIndexField(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.EndIndex">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.StartObject(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.ReportProperty(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.EndObject">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.ReportError(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdApp.Services.XmlDatabaseExport.ReportException(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:IdApp.Services.Xmpp.IXmppService">
            <summary>
            Represents an abstraction of a connection to an XMPP Server.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.WaitForConnectedState(System.TimeSpan)">
            <summary>
            Can be used to <c>await</c> the server's connection state, i.e. skipping all intermediate states but <see cref="F:Waher.Networking.XMPP.XmppState.Connected"/>.
            </summary>
            <param name="timeout">Maximum timeout before giving up.</param>
            <returns>If connected</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.UnloadFast">
            <summary>
            Perform a shutdown in critical situations. Attempts to shut down XMPP connection as fast as possible.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.ConnectionStateChanged">
            <summary>
            An event that triggers whenever the connection state to the XMPP server changes.
            </summary>
        </member>
        <member name="P:IdApp.Services.Xmpp.IXmppService.IsOnline">
            <summary>
            Determines whether the connection to the XMPP server is live or not.
            </summary>
        </member>
        <member name="P:IdApp.Services.Xmpp.IXmppService.State">
            <summary>
            The current state of the connection to the XMPP server.
            </summary>
        </member>
        <member name="P:IdApp.Services.Xmpp.IXmppService.BareJid">
            <summary>
            The Bare Jid of the current connection, or <c>null</c>.
            </summary>
        </member>
        <member name="P:IdApp.Services.Xmpp.IXmppService.LatestError">
            <summary>
            The latest generic xmpp error, if any.
            </summary>
        </member>
        <member name="P:IdApp.Services.Xmpp.IXmppService.LatestConnectionError">
            <summary>
            The latest generic xmpp connection error, if any.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.TryConnect(System.String,System.Boolean,System.String,System.Int32,System.String,System.Reflection.Assembly,System.Func{Waher.Networking.XMPP.XmppClient,System.Threading.Tasks.Task})">
            <summary>
            To be used during the very first phase of the startup/registration procedure. Tries to connect (and then disconnect) to the specified server.
            </summary>
            <param name="domain">The server's domain name.</param>
            <param name="isIpAddress">If the domain is provided as an IP address.</param>
            <param name="hostName">The server's host name.</param>
            <param name="portNumber">The xmpp port.</param>
            <param name="languageCode">Language code to use for communication.</param>
            <param name="appAssembly">The current app's main assembly.</param>
            <param name="connectedFunc">A callback to use if and when connected.</param>
            <returns>If connected. If not, any error message.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.TryConnectAndCreateAccount(System.String,System.Boolean,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Reflection.Assembly,System.Func{Waher.Networking.XMPP.XmppClient,System.Threading.Tasks.Task})">
            <summary>
            To be used during the second phase of the startup/registration procedure. Tries to connect (and then disconnect) to the specified server, while also creating an account.
            </summary>
            <param name="domain">The server's domain name.</param>
            <param name="isIpAddress">If the domain is provided as an IP address.</param>
            <param name="hostName">The server's host name.</param>
            <param name="portNumber">The xmpp port.</param>
            <param name="userName">The user name of the account to create.</param>
            <param name="password">The password to use.</param>
            <param name="languageCode">Language code to use for communication.</param>
            <param name="ApiKey">API Key used when creating account.</param>
            <param name="ApiSecret">API Secret used when creating account.</param>
            <param name="appAssembly">The current app's main assembly.</param>
            <param name="connectedFunc">A callback to use if and when connected.</param>
            <returns>If connected. If not, any error message.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.TryConnectAndConnectToAccount(System.String,System.Boolean,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Reflection.Assembly,System.Func{Waher.Networking.XMPP.XmppClient,System.Threading.Tasks.Task})">
            <summary>
            To be used during the second phase of the startup/registration procedure. Tries to connect (and then disconnect) to the specified server, while also connecting to an existing account.
            </summary>
            <param name="domain">The server's domain name.</param>
            <param name="isIpAddress">If the domain is provided as an IP address.</param>
            <param name="hostName">The server's host name.</param>
            <param name="portNumber">The xmpp port.</param>
            <param name="userName">The user name of the account to create.</param>
            <param name="password">The password to use.</param>
            <param name="passwordMethod">The password hash method to use. Empty string signifies an unhashed password.</param>
            <param name="languageCode">Language code to use for communication.</param>
            <param name="appAssembly">The current app's main assembly.</param>
            <param name="connectedFunc">A callback to use if and when connected.</param>
            <returns>If connected. If not, any error message.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.ChangePassword(System.String)">
            <summary>
            Changes the password of the account.
            </summary>
            <param name="NewPassword">New password</param>
            <returns>If change was successful.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.SendServiceDiscoveryRequest(System.String)">
            <summary>
            Performs a Service Discovery on a remote entity.
            </summary>
            <param name="FullJid">Full JID of entity.</param>
            <returns>Service Discovery response.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.DiscoverServices(Waher.Networking.XMPP.XmppClient)">
            <summary>
            Run this method to discover services for any given XMPP server.
            </summary>
            <param name="Client">The client to use. Can be <c>null</c>, in which case the default is used.</param>
            <returns>If TAG services were found.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.AddTransferCode(System.String)">
            <summary>
            Registers a Transfer ID Code
            </summary>
            <param name="Code">Transfer Code</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.IqSetAsync(System.String,System.String)">
            <summary>
            Performs an asynchronous IQ Set request/response operation.
            </summary>
            <param name="To">Destination address</param>
            <param name="Xml">XML to embed into the request.</param>
            <returns>Response XML element.</returns>
            <exception cref="T:System.TimeoutException">If a timeout occurred.</exception>
            <exception cref="T:Waher.Networking.XMPP.XmppException">If an IQ error is returned.</exception>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.GetApiToken(System.Int32)">
            <summary>
            Gets a token for use with APIs that are either distributed or use different
            protocols, when the client needs to authenticate itself using the current
            XMPP connection.
            </summary>
            <param name="Seconds">Number of seconds for which the token should be valid.</param>
            <returns>Token, if able to get a token, or null otherwise.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.PostToProtectedApi(System.String,System.Object,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Performs an HTTP POST to a protected API on the server, over the current XMPP connection,
            authenticating the client using the credentials alreaedy provided over XMPP.
            </summary>
            <param name="LocalResource">Local Resource on the server to POST to.</param>
            <param name="Data">Data to post. This will be encoded using encoders in the type inventory.</param>
            <param name="Headers">Headers to provide in the POST.</param>
            <returns>Decoded response from the resource.</returns>
            <exception cref="T:System.Exception">Any communication error will be handle by raising the corresponding exception.</exception>
        </member>
        <member name="P:IdApp.Services.Xmpp.IXmppService.FileUploadIsSupported">
            <summary>
            Returns <c>true</c> if file upload is supported, <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.RequestUploadSlotAsync(System.String,System.String,System.Int64)">
            <summary>
            Uploads a file to the upload component.
            </summary>
            <param name="FileName">Name of file.</param>
            <param name="ContentType">Internet content type.</param>
            <param name="ContentSize">Size of content.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.AddLegalIdentity(IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel,IdApp.Services.LegalIdentityAttachment[])">
            <summary>
            Adds a legal identity.
            </summary>
            <param name="Model">The model holding all the values needed.</param>
            <param name="Attachments">The physical attachments to upload.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.GetLegalIdentities(Waher.Networking.XMPP.XmppClient)">
            <summary>
            Returns a list of legal identities.
            </summary>
            <param name="client">The Xmpp client instance. Can be null, in that case the default one is used.</param>
            <returns>Legal Identities</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.GetLegalIdentity(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Gets a specific legal identity.
            </summary>
            <param name="legalIdentityId">The id of the legal identity to retrieve.</param>
            <returns>Legal identity object</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.IsContact(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Checks if a legal identity is in the contacts list.
            </summary>
            <param name="legalIdentityId">The id of the legal identity to retrieve.</param>
            <returns>If the legal identity is in the contacts list.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.HasPrivateKey(Waher.Persistence.CaseInsensitiveString,Waher.Networking.XMPP.XmppClient)">
            <summary>
            Checks if the client has access to the private keys of the specified legal identity.
            </summary>
            <param name="legalIdentityId">The id of the legal identity.</param>
            <param name="client">The Xmpp client instance. Can be null, in that case the default one is used.</param>
            <returns>If private keys are available.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.ObsoleteLegalIdentity(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Marks the legal identity as obsolete.
            </summary>
            <param name="legalIdentityId">The id to mark as obsolete.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.CompromiseLegalIdentity(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Marks the legal identity as compromised.
            </summary>
            <param name="legalIdentityId">The legal id to mark as compromised.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.PetitionIdentity(Waher.Persistence.CaseInsensitiveString,System.String,System.String)">
            <summary>
            Petitions a legal identity.
            </summary>
            <param name="LegalId">The id of the legal identity.</param>
            <param name="PetitionId">The petition id.</param>
            <param name="Purpose">The purpose of the petitioning.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.SendPetitionIdentityResponse(Waher.Persistence.CaseInsensitiveString,System.String,System.String,System.Boolean)">
            <summary>
            Sends a response to a petitioning identity request.
            </summary>
            <param name="LegalId">The id of the legal identity.</param>
            <param name="PetitionId">The petition id.</param>
            <param name="RequestorFullJid">The full Jid of the requestor.</param>
            <param name="Response">If the petition is accepted (true) or rejected (false).</param>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.LegalIdentityChanged">
            <summary>
            An event that fires when a legal identity changes.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.PetitionForIdentityReceived">
            <summary>
            An event that fires when a petition for an identity is received.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.PetitionedIdentityResponseReceived">
            <summary>
            An event that fires when a petitioned identity response is received.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.ExportSigningKeys(System.Xml.XmlWriter)">
            <summary>
            Exports Keys to XML.
            </summary>
            <param name="Output">XML output.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.ImportSigningKeys(System.Xml.XmlElement)">
            <summary>
            Imports keys
            </summary>
            <param name="Xml">XML Definition of keys.</param>
            <returns>If keys could be loaded into the client.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.ValidateIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Validates a legal identity.
            </summary>
            <param name="Identity">Legal Identity</param>
            <returns>The validity of the identity.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.GetAttachment(System.String,Waher.Networking.XMPP.Contracts.SignWith,System.TimeSpan)">
            <summary>
            Gets an attachment for a contract.
            </summary>
            <param name="Url">The url of the attachment.</param>
            <param name="Timeout">Max timeout allowed when retrieving an attachment.</param>
            <param name="SignWith">How the request is signed. For identity attachments, especially for attachments to an identity being created, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.CurrentKeys"/> should be used. For requesting attachments relating to a contract, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.LatestApprovedId"/> should be used.</param>
            <returns>Content-Type, and attachment file.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.PetitionPeerReviewId(Waher.Persistence.CaseInsensitiveString,Waher.Networking.XMPP.Contracts.LegalIdentity,System.String,System.String)">
            <summary>
            Sends a petition to a third-party to review a legal identity.
            </summary>
            <param name="LegalId">The legal id to petition.</param>
            <param name="Identity">The legal id to peer review.</param>
            <param name="PetitionId">The petition id.</param>
            <param name="Purpose">The purpose.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.AddPeerReviewIdAttachment(Waher.Networking.XMPP.Contracts.LegalIdentity,Waher.Networking.XMPP.Contracts.LegalIdentity,System.Byte[])">
            <summary>
            Adds an attachment for the peer review.
            </summary>
            <param name="Identity">The identity to which the attachment should be added.</param>
            <param name="ReviewerLegalIdentity">The identity of the reviewer.</param>
            <param name="PeerSignature">The raw signature data.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.PetitionForPeerReviewIdReceived">
            <summary>
            An event that fires when a petition for peer review is received.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.PetitionedPeerReviewIdResponseReceived">
            <summary>
            An event that fires when a petitioned peer review response is received.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.GetServiceProvidersForPeerReviewAsync">
            <summary>
            Gets available service providers for buying eDaler.
            </summary>
            <returns>Available service providers for peer review of identity applications.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.SelectPeerReviewService(System.String,System.String)">
            <summary>
            Selects a peer-review service as default, for the account, when sending a peer-review request to the
            Legal Identity of the Trust Provider hosting the account.
            </summary>
            <param name="ServiceId">Service ID</param>
            <param name="ServiceProvider">Service Provider</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.Sign(System.Byte[],Waher.Networking.XMPP.Contracts.SignWith)">
            <summary>
            Signs binary data with the corresponding private key.
            </summary>
            <param name="data">The data to sign.</param>
            <param name="signWith">What keys that can be used to sign the data.</param>
            <returns>Signature</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.ValidateSignature(Waher.Networking.XMPP.Contracts.LegalIdentity,System.Byte[],System.Byte[])">
            <summary>Validates a signature of binary data.</summary>
            <param name="legalIdentity">Legal identity used to create the signature.</param>
            <param name="data">Binary data to sign-</param>
            <param name="signature">Digital signature of data</param>
            <returns>
            true = Signature is valid.
            false = Signature is invalid.
            null = Client key algorithm is unknown, and veracity of signature could not be established.
            </returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.SendPetitionSignatureResponse(Waher.Persistence.CaseInsensitiveString,System.Byte[],System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Sends a response to a petitioning signature request.
            </summary>
            <param name="LegalId">Legal Identity petitioned.</param>
            <param name="Content">Content to be signed.</param>
            <param name="Signature">Digital signature of content, made by the legal identity.</param>
            <param name="PetitionId">A petition identifier. This identifier will follow the petition, and can be used
            to identify the petition request.</param>
            <param name="RequestorFullJid">Full JID of requestor.</param>
            <param name="Response">If the petition is accepted (true) or rejected (false).</param>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.PetitionForSignatureReceived">
            <summary>
            An event that fires when a petition for a signature is received.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.IXmppService.SignaturePetitionResponseReceived">
            <summary>
            Event raised when a response to a signature petition has been received.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.SavePrivateXml(System.String)">
            <summary>
            Saves Private XML to the server. Private XML are separated by
            Local Name and Namespace of the root element. Only one document
            per fully qualified name. When saving private XML, the XML overwrites
            any existing XML having the same local name and namespace.
            </summary>
            <param name="Xml">XML to save.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.SavePrivateXml(System.Xml.XmlElement)">
            <summary>
            Saves Private XML to the server. Private XML are separated by
            Local Name and Namespace of the root element. Only one document
            per fully qualified name. When saving private XML, the XML overwrites
            any existing XML having the same local name and namespace.
            </summary>
            <param name="Xml">XML to save.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.LoadPrivateXml(System.String,System.String)">
            <summary>
            Loads private XML previously stored, given the local name and
            namespace of the XML.
            </summary>
            <param name="LocalName">Local Name</param>
            <param name="Namespace">Namespace</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.IXmppService.DeletePrivateXml(System.String,System.String)">
            <summary>
            Deletes private XML previously saved to the account.
            </summary>
            <param name="LocalName">Local Name</param>
            <param name="Namespace">Namespace</param>
        </member>
        <member name="T:IdApp.Services.Xmpp.XmppService">
             <summary>
             XMPP Service, maintaining XMPP connections and XMPP Extensions.
            
             Note: By duplicating event handlers on the service, event handlers continue to work, even if app
             goes to sleep, and new clients are created when awoken again.
             </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.ConnectionStateChanged">
            <summary>
            An event that triggers whenever the connection state to the XMPP server changes.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.ChangePassword(System.String)">
            <summary>
            Changes the password of the account.
            </summary>
            <param name="NewPassword">New password</param>
            <returns>If change was successful.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.SendServiceDiscoveryRequest(System.String)">
            <summary>
            Performs a Service Discovery on a remote entity.
            </summary>
            <param name="FullJid">Full JID of entity.</param>
            <returns>Service Discovery response.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.DiscoverServices(Waher.Networking.XMPP.XmppClient)">
            <summary>
            Run this method to discover services for any given XMPP server.
            </summary>
            <param name="Client">The client to use. Can be <c>null</c>, in which case the default is used.</param>
            <returns>If TAG services were found.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.AddTransferCode(System.String)">
            <summary>
            Registers a Transfer ID Code
            </summary>
            <param name="Code">Transfer Code</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.IqSetAsync(System.String,System.String)">
            <summary>
            Performs an asynchronous IQ Set request/response operation.
            </summary>
            <param name="To">Destination address</param>
            <param name="Xml">XML to embed into the request.</param>
            <returns>Response XML element.</returns>
            <exception cref="T:System.TimeoutException">If a timeout occurred.</exception>
            <exception cref="T:Waher.Networking.XMPP.XmppException">If an IQ error is returned.</exception>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.GetApiToken(System.Int32)">
            <summary>
            Gets a token for use with APIs that are either distributed or use different
            protocols, when the client needs to authenticate itself using the current
            XMPP connection.
            </summary>
            <param name="Seconds">Number of seconds for which the token should be valid.</param>
            <returns>Token, if able to get a token, or null otherwise.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.PostToProtectedApi(System.String,System.Object,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Performs an HTTP POST to a protected API on the server, over the current XMPP connection,
            authenticating the client using the credentials alreaedy provided over XMPP.
            </summary>
            <param name="LocalResource">Local Resource on the server to POST to.</param>
            <param name="Data">Data to post. This will be encoded using encoders in the type inventory.</param>
            <param name="Headers">Headers to provide in the POST.</param>
            <returns>Decoded response from the resource.</returns>
            <exception cref="T:System.Exception">Any communication error will be handle by raising the corresponding exception.</exception>
        </member>
        <member name="P:IdApp.Services.Xmpp.XmppService.FileUploadClient">
            <summary>
            Reference to HTTP File Upload client, with a check that one is created.
            Note: Do not make public. Reference only from inside the XmppService class.
            </summary>
        </member>
        <member name="P:IdApp.Services.Xmpp.XmppService.FileUploadIsSupported">
            <summary>
            Returns <c>true</c> if file upload is supported, <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.RequestUploadSlotAsync(System.String,System.String,System.Int64)">
            <summary>
            Uploads a file to the upload component.
            </summary>
            <param name="FileName">Name of file.</param>
            <param name="ContentType">Internet content type.</param>
            <param name="ContentSize">Size of content.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.AddLegalIdentity(IdApp.Pages.Registration.RegisterIdentity.RegisterIdentityModel,IdApp.Services.LegalIdentityAttachment[])">
            <summary>
            Adds a legal identity.
            </summary>
            <param name="Model">The model holding all the values needed.</param>
            <param name="Attachments">The physical attachments to upload.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.GetLegalIdentities(Waher.Networking.XMPP.XmppClient)">
            <summary>
            Returns a list of legal identities.
            </summary>
            <param name="client">The Xmpp client instance. Can be null, in that case the default one is used.</param>
            <returns>Legal Identities</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.GetLegalIdentity(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Gets a specific legal identity.
            </summary>
            <param name="legalIdentityId">The id of the legal identity to retrieve.</param>
            <returns>Legal identity object</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.IsContact(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Checks if a legal identity is in the contacts list.
            </summary>
            <param name="legalIdentityId">The id of the legal identity to retrieve.</param>
            <returns>If the legal identity is in the contacts list.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.HasPrivateKey(Waher.Persistence.CaseInsensitiveString,Waher.Networking.XMPP.XmppClient)">
            <summary>
            Checks if the client has access to the private keys of the specified legal identity.
            </summary>
            <param name="legalIdentityId">The id of the legal identity.</param>
            <param name="client">The Xmpp client instance. Can be null, in that case the default one is used.</param>
            <returns>If private keys are available.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.ObsoleteLegalIdentity(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Marks the legal identity as obsolete.
            </summary>
            <param name="legalIdentityId">The id to mark as obsolete.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.CompromiseLegalIdentity(Waher.Persistence.CaseInsensitiveString)">
            <summary>
            Marks the legal identity as compromised.
            </summary>
            <param name="legalIdentityId">The legal id to mark as compromised.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.PetitionIdentity(Waher.Persistence.CaseInsensitiveString,System.String,System.String)">
            <summary>
            Petitions a legal identity.
            </summary>
            <param name="LegalId">The id of the legal identity.</param>
            <param name="PetitionId">The petition id.</param>
            <param name="Purpose">The purpose of the petitioning.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.SendPetitionIdentityResponse(Waher.Persistence.CaseInsensitiveString,System.String,System.String,System.Boolean)">
            <summary>
            Sends a response to a petitioning identity request.
            </summary>
            <param name="LegalId">The id of the legal identity.</param>
            <param name="PetitionId">The petition id.</param>
            <param name="RequestorFullJid">The full Jid of the requestor.</param>
            <param name="Response">If the petition is accepted (true) or rejected (false).</param>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.LegalIdentityChanged">
            <summary>
            An event that fires when a legal identity changes.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.PetitionForIdentityReceived">
            <summary>
            An event that fires when a petition for an identity is received.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.PetitionedIdentityResponseReceived">
            <summary>
            An event that fires when a petitioned identity response is received.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.ExportSigningKeys(System.Xml.XmlWriter)">
            <summary>
            Exports Keys to XML.
            </summary>
            <param name="Output">XML output.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.ImportSigningKeys(System.Xml.XmlElement)">
            <summary>
            Imports keys
            </summary>
            <param name="Xml">XML Definition of keys.</param>
            <returns>If keys could be loaded into the client.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.ValidateIdentity(Waher.Networking.XMPP.Contracts.LegalIdentity)">
            <summary>
            Validates a legal identity.
            </summary>
            <param name="Identity">Legal Identity</param>
            <returns>The validity of the identity.</returns>
        </member>
        <member name="P:IdApp.Services.Xmpp.XmppService.ContractsClient">
            <summary>
            Reference to contracts client, with a check that one is created.
            Note: Do not make public. Reference only from inside the XmppService class.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.GetAttachment(System.String,Waher.Networking.XMPP.Contracts.SignWith,System.TimeSpan)">
            <summary>
            Gets an attachment for a contract.
            </summary>
            <param name="Url">The url of the attachment.</param>
            <param name="Timeout">Max timeout allowed when retrieving an attachment.</param>
            <param name="SignWith">How the request is signed. For identity attachments, especially for attachments to an identity being created, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.CurrentKeys"/> should be used. For requesting attachments relating to a contract, <see cref="F:Waher.Networking.XMPP.Contracts.SignWith.LatestApprovedId"/> should be used.</param>
            <returns>Content-Type, and attachment file.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.PetitionPeerReviewId(Waher.Persistence.CaseInsensitiveString,Waher.Networking.XMPP.Contracts.LegalIdentity,System.String,System.String)">
            <summary>
            Sends a petition to a third-party to review a legal identity.
            </summary>
            <param name="LegalId">The legal id to petition.</param>
            <param name="Identity">The legal id to peer review.</param>
            <param name="PetitionId">The petition id.</param>
            <param name="Purpose">The purpose.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.AddPeerReviewIdAttachment(Waher.Networking.XMPP.Contracts.LegalIdentity,Waher.Networking.XMPP.Contracts.LegalIdentity,System.Byte[])">
            <summary>
            Adds an attachment for the peer review.
            </summary>
            <param name="Identity">The identity to which the attachment should be added.</param>
            <param name="ReviewerLegalIdentity">The identity of the reviewer.</param>
            <param name="PeerSignature">The raw signature data.</param>
            <returns>Legal Identity</returns>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.PetitionForPeerReviewIdReceived">
            <summary>
            An event that fires when a petition for peer review is received.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.PetitionedPeerReviewIdResponseReceived">
            <summary>
            An event that fires when a petitioned peer review response is received.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.GetServiceProvidersForPeerReviewAsync">
            <summary>
            Gets available service providers for buying eDaler.
            </summary>
            <returns>Available service providers for peer review of identity applications.</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.SelectPeerReviewService(System.String,System.String)">
            <summary>
            Selects a peer-review service as default, for the account, when sending a peer-review request to the
            Legal Identity of the Trust Provider hosting the account.
            </summary>
            <param name="ServiceId">Service ID</param>
            <param name="ServiceProvider">Service Provider</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.Sign(System.Byte[],Waher.Networking.XMPP.Contracts.SignWith)">
            <summary>
            Signs binary data with the corresponding private key.
            </summary>
            <param name="data">The data to sign.</param>
            <param name="signWith">What keys that can be used to sign the data.</param>
            <returns>Signature</returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.ValidateSignature(Waher.Networking.XMPP.Contracts.LegalIdentity,System.Byte[],System.Byte[])">
            <summary>Validates a signature of binary data.</summary>
            <param name="legalIdentity">Legal identity used to create the signature.</param>
            <param name="data">Binary data to sign-</param>
            <param name="signature">Digital signature of data</param>
            <returns>
            true = Signature is valid.
            false = Signature is invalid.
            null = Client key algorithm is unknown, and veracity of signature could not be established.
            </returns>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.SendPetitionSignatureResponse(Waher.Persistence.CaseInsensitiveString,System.Byte[],System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Sends a response to a petitioning signature request.
            </summary>
            <param name="LegalId">Legal Identity petitioned.</param>
            <param name="Content">Content to be signed.</param>
            <param name="Signature">Digital signature of content, made by the legal identity.</param>
            <param name="PetitionId">A petition identifier. This identifier will follow the petition, and can be used
            to identify the petition request.</param>
            <param name="RequestorFullJid">Full JID of requestor.</param>
            <param name="Response">If the petition is accepted (true) or rejected (false).</param>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.PetitionForSignatureReceived">
            <summary>
            An event that fires when a petition for a signature is received.
            </summary>
        </member>
        <member name="E:IdApp.Services.Xmpp.XmppService.SignaturePetitionResponseReceived">
            <summary>
            Event raised when a response to a signature petition has been received.
            </summary>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.SavePrivateXml(System.String)">
            <summary>
            Saves Private XML to the server. Private XML are separated by
            Local Name and Namespace of the root element. Only one document
            per fully qualified name. When saving private XML, the XML overwrites
            any existing XML having the same local name and namespace.
            </summary>
            <param name="Xml">XML to save.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.SavePrivateXml(System.Xml.XmlElement)">
            <summary>
            Saves Private XML to the server. Private XML are separated by
            Local Name and Namespace of the root element. Only one document
            per fully qualified name. When saving private XML, the XML overwrites
            any existing XML having the same local name and namespace.
            </summary>
            <param name="Xml">XML to save.</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.LoadPrivateXml(System.String,System.String)">
            <summary>
            Loads private XML previously stored, given the local name and
            namespace of the XML.
            </summary>
            <param name="LocalName">Local Name</param>
            <param name="Namespace">Namespace</param>
        </member>
        <member name="M:IdApp.Services.Xmpp.XmppService.DeletePrivateXml(System.String,System.String)">
            <summary>
            Deletes private XML previously saved to the account.
            </summary>
            <param name="LocalName">Local Name</param>
            <param name="Namespace">Namespace</param>
        </member>
    </members>
</doc>
